{"id": "67552f0a13602ec03b41a78b", "question": "The airline company operates as follows:\nThe company owns multiple airplanes, each with an Airplane Number, Model, and Passenger Capacity.\nEach airplane can perform multiple flights. Flight information includes Flight Number, Departure Time, Arrival Time, Origin, Destination, Airplane Number, Captain ID, First Officer ID, Start Time, and End Time.\nEach flight is operated by a captain and a first officer, each having their own ID, Name, and Phone Number.", "answer": {"Airplane": {"Attributes": ["Airplane Number", "Model", "Passenger Capacity"], "Primary key": ["Airplane Number"], "Foreign key": {}}, "Flight": {"Attributes": ["Flight Number", "Departure Time", "Arrival Time", "Origin", "Destination", "Airplane Number", "Captain ID", "First Officer ID", "Start Time", "End Time"], "Primary key": ["Flight Number"], "Foreign key": {"First Officer ID": {"Crew": "Personnel ID"}, "Captain ID": {"Crew": "Personnel ID"}, "Airplane Number": {"Airplane": "Airplane Number"}}}, "Crew": {"Attributes": ["Personnel ID", "Name", "Phone Number"], "Primary key": ["Personnel ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a78d", "question": "The multimodal transportation company undertakes multiple transportation tasks, each with a task number, origin, destination, cargo name, weight, and transportation time. Tasks may involve various transportation methods such as rail, road, water, and air. Each task requires recording the carrier information (including name and contact phone number) and the task start time and end time. The system shall support real-time monitoring and performance evaluation of the multimodal transportation tasks.", "answer": {"Transportation Mode": {"Attributes": ["Mode ID", "Schema Name"], "Primary key": ["Mode ID"], "Foreign key": {}}, "Carrier": {"Attributes": ["Carrier ID", "Name", "Contact Phone Number"], "Primary key": ["Carrier ID"], "Foreign key": {}}, "Multimodal Transportation Task": {"Attributes": ["Task Number", "Origin", "Destination", "Cargo Name", "Weight", "Transportation Time", "Start Time", "End Time"], "Primary key": ["Task Number"], "Foreign key": {}}, "Task Detail": {"Attributes": ["Task Number", "Mode ID", "Carrier ID", "Transportation Time", "Start Time", "End Time"], "Primary key": ["Task Number", "Mode ID", "Carrier ID"], "Foreign key": {"Task Number": {"Multimodal Transportation Task": "Task Number"}, "Carrier ID": {"Carrier": "Carrier ID"}, "Mode ID": {"Transportation Mode": "Mode ID"}}}, "Task Transportation Mode": {"Attributes": ["Task Number", "Mode ID"], "Primary key": ["Task Number", "Mode ID"], "Foreign key": {"Task Number": {"Multimodal Transportation Task": "Task Number"}, "Mode ID": {"Transportation Mode": "Mode ID"}}}, "Task Carrier": {"Attributes": ["Task Number", "Carrier ID"], "Primary key": ["Task Number", "Carrier ID"], "Foreign key": {"Task Number": {"Multimodal Transportation Task": "Task Number"}, "Carrier ID": {"Carrier": "Carrier ID"}}}}}
{"id": "67552f0a13602ec03b41a78e", "question": "The business requirements for a warehouse management system are described as follows: a warehousing company manages multiple warehouses, each with a warehouse number, address, and capacity. There are multiple loaders and unloaders in the company, each with a number, name, and phone number. Each inbound and outbound task requires recording of warehouse number, loading and unloading worker information, goods name, quantity, and time. The system needs to support real-time monitoring and performance evaluation of warehouses and loading and unloading tasks.", "answer": {"Warehouse": {"Attributes": ["Warehouse number", "Address", "Capacity"], "Primary key": ["Warehouse number"], "Foreign key": {}}, "Goods": {"Attributes": ["Goods ID", "Goods name"], "Primary key": ["Goods ID"], "Foreign key": {}}, "Loader": {"Attributes": ["Name", "Phone", "Loader ID"], "Primary key": ["Loader ID"], "Foreign key": {}}, "transaction record": {"Attributes": ["transaction ID", "time", "warehouse number", "transaction type"], "Primary key": ["Transaction ID"], "Foreign key": {"Warehouse number": {"Warehouse": "Warehouse number"}}}, "good transaction record details": {"Attributes": ["goods ID", "transaction ID", "quantity"], "Primary key": ["goods ID", "transaction ID"], "Foreign key": {"goods ID": {"Goods": "goods ID"}, "transaction ID": {"transaction record": "transaction ID"}}}, "stevedore-transaction record": {"Attributes": ["Loader ID", "transaction ID"], "Primary key": ["Loader ID", "transaction ID"], "Foreign key": {"Loader ID": {"Loader": "Loader ID"}, "transaction ID": {"transaction record": "transaction ID"}}}}}
{"id": "67552f0a13602ec03b41a798", "question": "The telecommunications service company has multiple customers, and each customer can subscribe to multiple service plans. Each service plan has a unique plan number, name, price, and included services. The company needs to record customers' personal information, including customer number, name, phone number, address, and email. Each time a customer subscribes to or unsubscribes from a service plan, the subscription time, cancellation time, and operating personnel need to be recorded.", "answer": {"Customer": {"Attributes": ["Customer Number", "Name", "Phone Number", "Address", "Email"], "Primary key": ["Customer Number"], "Foreign key": {}}, "Service Plan": {"Attributes": ["Plan Number", "Plan Name", "Price", "Service Content"], "Primary key": ["Plan Number"], "Foreign key": {}}, "Subscription Record": {"Attributes": ["Customer Number", "Plan Number", "Subscription Time", "Cancellation Time", "Operating Personnel"], "Primary key": ["Customer Number", "Plan Number", "Subscription Time"], "Foreign key": {"Plan Number": {"Service Plan": "Plan Number"}, "Customer Number": {"Customer": "Customer Number"}}}}}
{"id": "67552f0a13602ec03b41a79b", "question": "The business requirements for a service management system are described as follows: The system manages multiple services, each with a service ID, name, type, price and description. There are multiple users in the system, each with a user ID and name. Each service usage needs to record the operating user ID, service ID, usage time and duration. The system needs to support real-time monitoring and performance evaluation of service usage.", "answer": {"Service": {"Attributes": ["Service ID", "Service name", "Service type", "Service price", "Service description"], "Primary key": ["Service ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "User name"], "Primary key": ["User ID"], "Foreign key": {}}, "Service usage record": {"Attributes": ["Operating user ID", "Service ID", "Usage time", "Usage duration"], "Primary key": ["Operating user ID", "Service ID", "Usage time"], "Foreign key": {"Operating user ID": {"User": "User ID"}, "Service ID": {"Service": "Service ID"}}}}}
{"id": "67552f0a13602ec03b41a79c", "question": "The software development company manages multiple projects, each with a Project ID, Name, Start Date, End Date, and Budget. The company employs multiple developers, and each developer can participate in multiple projects. Each project progress update must record the Update Time, Current Status, and the person who performed the update.", "answer": {"project": {"Attributes": ["Project ID", "Project Name", "Start Date", "End Date", "Budget"], "Primary key": ["Project ID"], "Foreign key": {}}, "developer": {"Attributes": ["Developer ID", "Name", "Phone", "Email"], "Primary key": ["Developer ID"], "Foreign key": {}}, "project progress": {"Attributes": ["Project ID", "Updater ID", "Update Time", "Current Status"], "Primary key": ["Project ID", "Updater ID", "Update Time"], "Foreign key": {"Project ID": {"project": "Project ID"}, "Updater ID": {"developer": "Developer ID"}}}}}
{"id": "67552f0a13602ec03b41a79d", "question": "Broadcasting company has multiple advertising clients, and each client can place multiple advertisements. Each advertisement has an Advertisement ID, Name, Broadcast Time, Duration, and Price. For each advertisement broadcast, the system shall record the Broadcast Time, Broadcast Channel, and Operating Personnel.\n", "answer": {"Advertising Client": {"Attributes": ["Client ID", "Name", "Phone", "Email"], "Primary key": ["Client ID"], "Foreign key": {}}, "Advertisement": {"Attributes": ["Advertisement ID", "Name", "Broadcast Time", "Duration", "Price", "Client ID"], "Primary key": ["Advertisement ID"], "Foreign key": {"Client ID": {"Advertising Client": "Client ID"}}}, "Client Broadcast Record": {"Attributes": ["Advertisement ID", "Client ID", "Broadcast Time", "Broadcast Channel", "Operating Personnel"], "Primary key": ["Client ID", "Advertisement ID"], "Foreign key": {"Client ID": {"Advertising Client": "Client ID"}, "Advertisement ID": {"Advertisement": "Advertisement ID"}}}}}
{"id": "67552f0a13602ec03b41a79f", "question": "The business requirements for the company's equipment management system are as follows:\nThe company owns multiple pieces of equipment, each equipped with an equipment ID, name, model, and usage status.\nThe company also employs several maintenance personnel, each with a unique maintenance personnel ID, name, telephone, and email.\nWhenever equipment requires maintenance, a maintenance record is generated, which includes the equipment ID, maintenance time, maintenance results, and the personnel responsible for the maintenance.\nThe system needs to manage equipment information, maintenance personnel information, and equipment maintenance records to ensure the tracking of each piece of equipment's maintenance history and responsible personnel.\n", "answer": {"Equipment": {"Attributes": ["Equipment ID", "Name", "Model", "Usage Status"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Equipment Maintenance": {"Attributes": ["Maintenance Personnel ID", "Equipment ID", "Maintenance Time", "Maintenance Result"], "Primary key": ["Equipment ID"], "Foreign key": {"Maintenance Personnel ID": {"Maintenance Personnel": "Maintenance Personnel ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}, "Maintenance Personnel": {"Attributes": ["Maintenance Personnel ID", "Name", "Telephone", "Email"], "Primary key": ["Maintenance Personnel ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7a6", "question": "A grassroots self-governance organization needs to manage the election process, including candidates, voters, and voting records. The candidates have candidate ID, name, gender, date of birth, and position; voters have voter ID, name, gender, date of birth, and contact information; voting records include voter ID, candidate ID, voting time, and voting location. The system also needs to be able to count the number of votes for each candidate.", "answer": {"Candidate": {"Attributes": ["Candidate ID", "Name", "Gender", "Date of Birth", "Position"], "Primary key": ["Candidate ID"], "Foreign key": {}}, "Voter": {"Attributes": ["Voter ID", "Name", "Gender", "Date of Birth", "Contact Information"], "Primary key": ["Voter ID"], "Foreign key": {"Candidate ID": {"Candidate": "Candidate ID"}}}, "Voting Record": {"Attributes": ["Voter ID", "Candidate ID", "Voting Time", "Voting Location"], "Primary key": ["Voter ID", "Candidate ID", "Voting Time"], "Foreign key": {"Candidate ID": {"Candidate": "Candidate ID"}, "Voter ID": {"Voter": "Voter ID"}}}}}
{"id": "67552f0a13602ec03b41a7a7", "question": "The main function of the conference management system is to record and manage system members, meeting arrangements and member attendance. Its main business requirements are as follows:\n\nMember management:\n\nIt is necessary to manage the basic information of all members in the system, including each member's name, gender, date of birth, contact information, etc.\nThe system identifies each member through a unique \"member number\" and can easily query and update the basic information of members.\nMeeting management:\n\nIt is necessary to manage and record the information of all meetings, including the type, time, location, content and theme of the meeting.\nEach meeting has a unique \"meeting ID\". The system needs to track the detailed information of the meeting according to the meeting ID to ensure the smooth arrangement and execution of the meeting.\nMember attendance management:\n\nIt is necessary to record the meetings and meeting times attended by each member, and allow members to add notes for each meeting.\nThe system uses a combination of \"member number\" and \"meeting ID\" to identify which meetings members have attended and their specific attendance.\nThrough these requirements, the system can efficiently manage meeting arrangements, member information and attendance records, ensure that the participation of all meetings is traceable, and can analyze and query the attendance of each member.", "answer": {"Member": {"Attributes": ["Member ID", "Name", "Gender", "Date Of Birth", "Contact Information"], "Primary key": ["Member ID"], "Foreign key": {}}, "Meeting": {"Attributes": ["Meeting Type", "Time", "Location", "Meeting Content", "Meeting ID", "Meeting Topic"], "Primary key": ["Meeting ID"], "Foreign key": {}}, "Meeting Participation": {"Attributes": ["Member ID", "Meeting ID", "Remarks", "Attendance Time"], "Primary key": ["Member ID", "Meeting ID", "Attendance Time"], "Foreign key": {"Meeting ID": {"Meeting": "Meeting ID"}}}}}
{"id": "67552f0a13602ec03b41a7aa", "question": "The agricultural machinery and equipment management system needs to manage the machinery and equipment of multiple farms. Each equipment has equipment ID, name, model, purchase date, usage status (such as \"normal\", \"maintenance\", \"disabled\", etc.), maintenance record and operator. Each farm has farm ID, name, address and contact information. Each maintenance record includes equipment ID, maintenance date, maintenance type (such as \"routine inspection\", \"fault repair\", etc.), operator and maintenance result (such as \"completed\", \"uncompleted\", etc.). It is necessary to record the basic information of the operator (operator ID, name, phone number) to facilitate the tracing of operation records.", "answer": {"Farm": {"Attributes": ["Farm ID", "Name", "Address", "Contact Information"], "Primary key": ["Farm ID"], "Foreign key": {}}, "Equipment": {"Attributes": ["Equipment ID", "Farm ID", "Name", "Model", "Purchase Date", "Usage Status"], "Primary key": ["Equipment ID"], "Foreign key": {"Farm ID": {"Farm": "Farm ID"}}}, "Operator": {"Attributes": ["Operator ID", "Name", "Phone"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Maintenance Record": {"Attributes": ["Equipment ID", "Operator ID", "Maintenance Date", "Maintenance Type", "Maintenance Result"], "Primary key": ["Device ID", "Operator ID", "Maintenance Date"], "Foreign key": {"Equipment ID": {"Equipment": "Equipment ID"}, "Operator ID": {"Operator": "Operator ID"}}}}}
{"id": "67552f0a13602ec03b41a7ab", "question": "Agricultural Product Warehouse Management System requires managing multiple warehouses, where each warehouse can store various agricultural products. Agricultural products in a warehouse may have the same name, depending on the cultural differences of different regions.  \nEach warehouse has a Warehouse ID, name, address, capacity, and current inventory.  \nEach type of agricultural product has a Product ID, name, specification, date of storage, date of dispatch, quantity stored, quantity dispatched, and current inventory.  \nEach storage record includes Warehouse ID, Product ID, storage date, quantity stored, and operator.  \nEach dispatch record includes Warehouse ID, Product ID, dispatch date, quantity dispatched, and operator.", "answer": {"Warehouse": {"Attributes": ["Warehouse ID", "Warehouse Name", "Address", "Capacity", "Current Inventory"], "Primary key": ["Warehouse ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Specification", "Product Inventory"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product Circulation Record": {"Attributes": ["Record ID", "Warehouse ID", "Product ID", "Date", "Change Quantity", "Operator"], "Primary key": ["Record ID"], "Foreign key": {"Warehouse ID": {"Warehouse": "Warehouse ID", "Product": "Product ID"}}}}}
{"id": "67552f0a13602ec03b41a7ac", "question": "The Agricultural Meteorological Data Management System needs to record meteorological data from multiple weather stations. Each weather station can observe weather changes.\n- Each weather station has a Weather Station ID, name, location, person in charge, and contact information.\n- Each record includes Weather Station ID, recording date, temperature, humidity, precipitation, wind speed, and wind direction.\n- Each farm can subscribe to data from multiple weather stations, recording the subscription date and unsubscription date.", "answer": {"Weather Station": {"Attributes": ["Weather Station ID", "Name", "Location", "Person in Charge", "Contact Information"], "Primary key": ["Weather Station ID"], "Foreign key": {}}, "Meteorological Data": {"Attributes": ["Data ID", "Weather Station ID", "Recording Date", "Temperature", "Humidity", "Precipitation", "Wind Speed", "Wind Direction"], "Primary key": ["Data ID"], "Foreign key": {"Weather Station ID": {"Weather Station": "Weather Station ID"}}}, "Subscription Data": {"Attributes": ["Farm Name", "Weather Station ID", "Subscription Date", "Unsubscription Date"], "Primary key": ["Farm Name", "Weather Station ID"], "Foreign key": {"Weather Station ID": {"Weather Station": "Weather Station ID"}}}}}
{"id": "67552f0a13602ec03b41a7ad", "question": "  The Agricultural Irrigation Management System shall manage multiple irrigation systems, each capable of irrigating several plots. Each plot has a Plot ID, area, soil type, and current irrigation status (such as \"Irrigated\", \"Not Irrigated\"). Each irrigation system possesses a System ID, name, type (such as \"Drip\", \"Spray\"), installation date, and maintenance records. Each irrigation record includes System ID, Plot ID, irrigation date, irrigation duration, and irrigation amount.\n", "answer": {"Irrigation System": {"Attributes": ["System ID", "Name", "Type", "Installation Date", "Maintenance Records"], "Primary key": ["System ID"], "Foreign key": {}}, "Plot": {"Attributes": ["Plot ID", "Area", "Soil Type", "Current Irrigation Status"], "Primary key": ["Plot ID"], "Foreign key": {}}, "Irrigation Record": {"Attributes": ["Irrigation Date", "System ID", "Plot ID", "Irrigation Duration", "Irrigation Amount"], "Primary key": ["Irrigation Date", "System ID", "Plot ID"], "Foreign key": {"Plot ID": {"Plot": "Plot ID"}, "System ID": {"Irrigation System": "System ID"}}}}}
{"id": "67552f0a13602ec03b41a7ae", "question": "The agricultural pest and disease monitoring system is designed to monitor and record the pest and disease conditions of farmland plots in real time, helping agricultural managers to timely discover, evaluate and prevent pests and diseases, and improve crop yields and quality. The system can record the basic information of each plot, the type of pests and diseases, monitoring results, prevention and control measures and their effects, and provide data support for agricultural production decisions. Each plot has a plot ID, area, soil type, geographical location and current pest and disease status (such as \"normal\", \"mild pests and diseases\", \"severe pests and diseases\", etc.). Each pest and disease has a pest and disease ID, name, degree of damage (such as \"mild\", \"severe\", etc.) and prevention and control methods, and the season of occurrence. Each monitoring record includes the plot ID, pest and disease ID, monitoring date, monitoring results and operator. Each operator has records such as employee ID, name, gender, age and contact information.\n", "answer": {"Plot": {"Attributes": ["Plot number", "Area", "Soil type", "Current pest and disease status", "Geographic location"], "Primary key": ["Plot number"], "Foreign key": {}}, "Pest and disease": {"Attributes": ["Pest and disease number", "Name", "Degree of harm", "Prevention and control methods", "Season of occurrence"], "Primary key": ["Pest and disease number"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee number", "Name", "Gender", "Age", "Contact information"], "Primary key": ["Employee number"], "Foreign key": {}}, "Monitoring record": {"Attributes": ["Plot number", "Pest number", "Monitoring time", "Monitoring results", "Monitoring employee number"], "Primary key": ["Plot number", "Pest and disease number", "Monitoring time"], "Foreign key": {"Pest and disease number": {"Pest and disease": "Pest and disease number"}, "Plot number": {"Plot": "Plot number"}}}}}
{"id": "67552f0a13602ec03b41a7af", "question": "The agricultural planting plan management system needs to manage planting plans for multiple farms. Each farm has a farm ID, name, address, and contact information. Each planting plan includes a farm ID, plot ID, crop type, planting time, expected harvest time, planting quantity, and operator. Each plot has a plot ID, area, soil type, and current status (e.g., \u201cidle,\u201d \u201cplanting in progress,\u201d etc.).\n", "answer": {"Farm": {"Attributes": ["Farm ID", "Name", "Address", "Contact Information"], "Primary key": ["Farm ID"], "Foreign key": {}}, "Plot": {"Attributes": ["Plot ID", "Area", "Soil Type", "Current Status"], "Primary key": ["Plot ID"], "Foreign key": {}}, "Planting Plan": {"Attributes": ["Farm ID", "Plot ID", "Crop Type", "Planting Time", "Expected Harvest Time", "Planting Quantity", "Operator"], "Primary key": ["Farm ID", "Plot ID", "Planting Time"], "Foreign key": {"Farm ID": {"Farm": "Farm ID"}, "Plot ID": {"Plot": "Plot ID"}}}}}
{"id": "67552f0a13602ec03b41a7b5", "question": "The business requirements for a forest product processing management system are described as follows: This system is mainly used for managing the production operations of forest product processing factories. For workshop management, the system needs to record each workshop's ID, name and address information. Each workshop is equipped with multiple workers, whose information includes worker ID, name and contact number. In their daily work, workers need to record detailed processing information, including raw materials used, processing time, specific product name, production quantity and product quality rating. The system also needs to manage the inventory of raw materials for each workshop, recording the name and real-time inventory quantity of various raw materials. For production quality management, the system will automatically calculate production performance metrics for each workshop based on workers' processing records, including monthly total processing volume, product qualification rate and other assessment indicators. Managers can use this data to understand production status in real time and make adjustments to production planning and quality control.", "answer": {"Worker": {"Attributes": ["Worker ID", "Name", "Contact number"], "Primary key": ["Worker ID"], "Foreign key": {}}, "Workshop": {"Attributes": ["Workshop ID", "Workshop name", "Workshop address"], "Primary key": ["Workshop ID"], "Foreign key": {}}, "Raw material": {"Attributes": ["Raw material ID", "Raw material name"], "Primary key": ["Raw material ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product name"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product processing task": {"Attributes": ["Product ID", "Processing task ID", "Production quantity", "Processing time", "Product quality rating"], "Primary key": ["Processing task ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}, "Worker processing product": {"Attributes": ["Worker ID", "Processing task ID"], "Primary key": ["Processing task ID", "Worker ID"], "Foreign key": {"Processing task ID": {"Product processing task": "Processing task ID"}, "Worker ID": {"Worker": "Worker ID"}}}, "Raw materials involved in product processing": {"Attributes": ["Raw material ID", "Processing task ID"], "Primary key": ["Processing task ID", "Raw material ID"], "Foreign key": {"Processing task ID": {"Product processing task": "Processing task ID"}, "Raw material ID": {"Raw material": "Raw material ID"}}}, "Workshop raw material management": {"Attributes": ["Workshop ID", "Raw material ID", "Inventory quantity"], "Primary key": ["Workshop ID", "Raw material ID"], "Foreign key": {"Raw material ID": {"Raw material": "Raw material ID"}, "Workshop ID": {"Workshop": "Workshop ID"}}}}}
{"id": "67552f0a13602ec03b41a7b6", "question": "The business requirements for a company's equipment management system are as follows: The company owns various types of equipment, each with a unique Equipment ID, name, model, and usage frequency. To effectively manage the equipment, the system needs to record each equipment's usage, including usage time, user, and location. It should also track the equipment's maintenance history, including maintenance time, maintenance content, and maintenance personnel. The system must manage equipment information, usage records, and maintenance records to enable querying of equipment usage and maintenance history.", "answer": {"Equipment": {"Attributes": ["Equipment ID", "Name", "Model"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Usage Record": {"Attributes": ["Equipment ID", "Usage Time", "User", "Usage Location"], "Primary key": ["Equipment ID", "Usage Time"], "Foreign key": {"Equipment ID": {"Equipment": "Equipment ID"}}}, "Maintenance Record": {"Attributes": ["Maintenance Record ID", "Equipment ID", "Maintenance Time", "Maintenance Content"], "Primary key": ["Equipment ID", "Maintenance Time"], "Foreign key": {"Equipment ID": {"Equipment": "Equipment ID"}}}}}
{"id": "67552f0a13602ec03b41a7ba", "question": "The restaurant receives multiple orders, each of which has an order number, customer information, order time, and total amount. The order contains multiple dishes, each of which has a name and price. The restaurant needs to record the detailed information of each dish and the status of the order (such as received, prepared, and delivered).\n\n\n\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order time", "Total amount", "Order status"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Dish": {"Attributes": ["Dish ID", "Name", "Price"], "Primary key": ["Dish ID"], "Foreign key": {}}, "Order Details": {"Attributes": ["Order ID", "Dish ID", "Quantity"], "Primary key": ["Order ID", "Dish ID"], "Foreign key": {"Dish ID": {"Dish": "Dish ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a7bb", "question": "Restaurants purchase ingredients from multiple suppliers. Each supplier has a name, contact information, and address. Ingredients have a name, specification, and price. Each purchase must record supplier information, ingredient information, purchase quantity, purchase date, and purchase amount.", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Name", "Contact Information", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Ingredient": {"Attributes": ["Ingredient ID", "Ingredient Name", "Ingredient Specification", "Price"], "Primary key": ["Ingredient ID"], "Foreign key": {}}, "Purchase Record": {"Attributes": ["Purchase ID", "Supplier ID", "Ingredient ID", "Purchase Quantity", "Purchase Date", "Purchase Amount"], "Primary key": ["Supplier ID", "Ingredient ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Ingredient ID": {"Ingredient": "Ingredient ID"}}}}}
{"id": "67552f0a13602ec03b41a7bc", "question": "An employee scheduling management system primarily manages employee basic information, shift arrangements, and tracks employee schedules. The specific business requirements of the system are as follows:\n\nEmployee Management:  \nThe system shall manage basic information for each employee, including the employee's name, date of birth, gender, phone number, and position. Employee basic information serves as the foundation for scheduling management, ensuring appropriate personnel are assigned based on different positions.  \n\nShift Management:  \nThe system shall manage basic information for multiple shifts, recording details such as the shift name, start time, and end time. Shift arrangements help ensure employees attend work on time and achieve reasonable work time allocation.  \n\nEmployee Scheduling Management:  \nThe system shall associate employees with shifts and record each employee's schedule, including the scheduled time and assigned shift. This ensures each employee completes their work during the designated time period and provides administrators with the ability to view and adjust scheduling arrangements.  \n\nThrough these functions, the system shall efficiently manage employee scheduling, ensuring each employee participates in work according to job requirements and position assignments. It also facilitates administrators in viewing and adjusting schedules while ensuring reasonable allocation of work hours.", "answer": {"Employee": {"Attributes": ["Employee ID", "Employee Name", "Date of Birth", "Gender", "Phone Number", "Position"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Shift": {"Attributes": ["Shift ID", "Shift Name", "Start Time", "End Time"], "Primary key": ["Shift ID"], "Foreign key": {}}, "Schedule": {"Attributes": ["Employee ID", "Shift ID", "Scheduled Time"], "Primary key": ["Employee ID", "Shift ID", "Scheduled Time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Shift ID": {"Shift": "Shift ID"}}}}}
{"id": "67552f0a13602ec03b41a7c0", "question": "A national agency requires management of the document circulation process, including approval, archiving, and querying of documents.\nDocuments have a document ID, name, category, creation time, and status;\nApproval records include document ID, approver, approval time, and approval comments;\nArchiving records include document ID, archivist, archiving time, and archiving location;\nQuery records include document ID, query personnel, query time, and query results;\nThe approval and querying operations of documents can occur multiple times, whereas archiving occurs only once.\nDocument management personnel are responsible for approving, archiving, and querying documents; they have employee ID, name, gender, position, and contact information.", "answer": {"Document": {"Attributes": ["Document ID", "Name", "Category", "Creation Time", "Status"], "Primary key": ["Document ID"], "Foreign key": {}}, "Document Management Personnel": {"Attributes": ["Employee ID", "Name", "Gender", "Position", "Contact Information"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Approval Record": {"Attributes": ["Document ID", "Approver", "Approval Time", "Approval Comments"], "Primary key": ["Document ID", "Approver", "Approval Time"], "Foreign key": {"Approver": {"Document Management Personnel": "Employee ID"}, "Document ID": {"Document": "Document ID"}}}, "Archiving Record": {"Attributes": ["Document ID", "Archivist", "Archiving Time", "Archiving Location"], "Primary key": ["Document ID", "Archivist"], "Foreign key": {"Archivist": {"Document Management Personnel": "Employee ID"}, "Document ID": {"Document": "Document ID"}}}, "Query Record": {"Attributes": ["Document ID", "Query Personnel", "Query Time", "Query Result"], "Primary key": ["Document ID", "Query Personnel", "Query Time"], "Foreign key": {"Document ID": {"Document": "Document ID"}, "Query Personnel": {"Document Management Personnel": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7c1", "question": "A mass organization needs to manage donation affairs, including donors, recipients, donation records and donated items.\nDonors have donor number, name, gender, date of birth and contact information;\nRecipients have recipient number, name, gender, date of birth and contact information;\nDonation records include donor number, recipient number, donation time and donated items;\nDonated items have item number, name, quantity and description. The system also needs to be able to count the number of donations made by each donor.", "answer": {"Donor": {"Attributes": ["Donor Number", "Name", "Gender", "Date of Birth", "Contact Information"], "Primary key": ["Donor Number"], "Foreign key": {}}, "Recipient": {"Attributes": ["Recipient Number", "Name", "Gender", "Date of Birth", "Contact Information"], "Primary key": ["Recipient Number"], "Foreign key": {}}, "Donated Item": {"Attributes": ["Item Number", "Name", "Quantity", "Description"], "Primary key": ["Item Number"], "Foreign key": {}}, "Donation Record": {"Attributes": ["Donation Record ID", "Recipient Number", "Donation Time", "Item Number"], "Primary key": ["Donation Record ID"], "Foreign key": {"Donor Number": {"Donor": "Donor Number"}, "Recipient Number": {"Recipient": "Recipient Number"}}}, "Donation Record Details": {"Attributes": ["Donation Record ID", "Item Number"], "Primary key": ["Donation Record ID", "Item Number"], "Foreign key": {"Donation Record ID": {"Donation Record": "Donation Record ID"}, "Item Number": {"Donated Item": "Item Number"}}}}}
{"id": "67552f0a13602ec03b41a7c3", "question": "The management system of agricultural and sideline products processing enterprises aims to achieve the whole process management from acquisition, processing to sales, and record, track and analyze the operation of enterprises through a unified platform. The system not only includes product, employee and department management, but also covers the records of acquisition, processing, sales and other links. Agricultural and sideline products have information such as name, origin, acquisition price, processing cost, and sales price. Multiple departments of the enterprise collaborate, and each department has information such as department name, person in charge, contact information, total number of department personnel, and department responsibilities. Employee management includes employee number, name, gender, telephone number, position and entry time. Each time you purchase, you need to record the purchased products, quantity, purchaser information, consignor, purchase time, consignor telephone number, shipping address, shipping time, etc. When processing, record the processed products, quantity, processor, and processing time. When selling, record the sold products, quantity, salesperson, customer, sales time, and sales price.", "answer": {"Agricultural and sideline products": {"Attributes": ["Product ID", "Product name", "Origin"], "Primary key": ["Product ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Telephone", "Position", "Department ID", "Joining time"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department name", "Person in charge ID", "Department responsibilities", "Total number of people in the department"], "Primary key": ["Department ID"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}}}, "Purchase record": {"Attributes": ["Product ID", "Purchase time", "Purchase quantity", "Purchase person ID", "Purchase price", "Shipper name", "Shipping address", "Shipping time", "Shipper phone"], "Primary key": ["Product ID", "Purchase time", "Person in charge ID"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}, "Product ID": {"Agricultural and sideline products": "Product ID"}}}, "Processing record": {"Attributes": ["Product ID", "Processing time", "Processing quantity", "Person in charge ID", "Processing cost"], "Primary key": ["Product ID", "Processing time", "Person in charge ID"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}, "Product ID": {"Agricultural and sideline products": "Product ID"}}}, "Sales record": {"Attributes": ["Product ID", "Sales time", "Sales quantity", "Salesperson ID", "Sales price", "Sales location", "Customer name", "Customer phone number", "Customer address"], "Primary key": ["Product ID", "Sales time", "Salesperson ID"], "Foreign key": {"Product ID": {"Agricultural and sideline products": "Product ID"}, "Salesperson ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7c6", "question": "The tobacco product enterprise management system needs to comprehensively manage the company's tobacco products from production, inventory, sales and other aspects. The system should support functions such as detailed records of tobacco products, sales tracking, and production process monitoring, and be able to generate various reports to help management make scientific decisions. At the same time, the system should also have the functions of department collaboration, employee management, and department performance appraisal to improve the overall operational efficiency of the enterprise. Tobacco has information such as name, type, production date, shelf life, price, and production batch number. Multiple departments of the enterprise collaborate, and each department has a department name, person in charge, and contact information. Employee management includes employee number, name, gender, telephone number, and position. Each time production is carried out, the products, quantity, producer, and production time produced must be recorded. When selling, the products, quantity, salesperson, customer, and sales time sold must be recorded.", "answer": {"Tobacco products": {"Attributes": ["Product ID", "Product name", "Type", "Production date", "Shelf life", "Sales price", "Production batch number"], "Primary key": ["Product ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department name", "Total number of people in the department", "Person in charge ID", "Department responsibilities"], "Primary key": ["Department ID"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Phone", "Position", "Joining Date", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Production Record": {"Attributes": ["Product ID", "Sales Time", "Salesperson ID", "Customer Name", "Sales Quantity", "Sales Price", "Customer Phone", "Customer Address", "Sales Type"], "Primary key": ["Product ID", "Salesperson ID", "Sales Time"], "Foreign key": {"Product ID": {"Tobacco products": "Product ID"}, "Salesperson ID": {"Employee": "Employee ID"}}}, "Production Record Details": {"Attributes": ["Production Record ID", "Producer ID"], "Primary key": ["Production Record ID", "Producer ID"], "Foreign key": {"Producer ID": {"Employee": "Employee ID"}, "Production Record ID": {"Production Record": "Production Record ID"}}}}}
{"id": "67552f0a13602ec03b41a7c7", "question": "A textile enterprise needs to manage the production, inventory, and sales of textiles. Each textile has information such as name, type, production date, and price. The enterprise has multiple departments, and each department has a name, manager, and contact information. Employee management includes employee ID, name, gender, phone, and position. For each production, the system needs to record the produced product, quantity, producer, and production time. For inventory management, the system should record the products in stock, quantity, and stock-in time. For sales, the system should record the products sold, quantity, sales personnel, customer, and sales time. The system should also support performance evaluation for each department. The performance evaluation should record the evaluation date and performance score of each employee.", "answer": {"Textile": {"Attributes": ["Textile ID", "Name", "Type", "Production Date", "Price"], "Primary key": ["Textile ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Manager", "Contact Information"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Phone", "Position", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Inventory": {"Attributes": ["Inventory ID", "Textile ID", "Quantity", "Stock-in Time"], "Primary key": ["Inventory ID"], "Foreign key": {"Textile ID": {"Textile": "Textile ID"}}}, "Production Relationship": {"Attributes": ["Textile ID", "Quantity", "Producer ID", "Production Time"], "Primary key": ["Textile ID", "Producer ID", "Production Time"], "Foreign key": {"Producer ID": {"Employee": "Employee ID"}, "Textile ID": {"Textile": "Textile ID"}}}, "Sales Relationship": {"Attributes": ["Textile ID", "Quantity", "Sales Personnel ID", "Customer", "Sales Time"], "Primary key": ["Textile ID", "Sales Personnel ID", "Sales Time"], "Foreign key": {"Textile ID": {"Textile": "Textile ID"}, "Sales Personnel ID": {"Employee": "Employee ID"}}}, "Performance Evaluation": {"Attributes": ["Performance ID", "Employee ID", "Evaluation Date", "Score"], "Primary key": ["Performance ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7c8", "question": "The textile and apparel company needs to manage clothing production, inventory, and sales, so a high-performance database is used to manage the entire production line. Clothing has information such as name, style, production date, and price. Multiple departments in the company collaborate, and each department has a department name, person in charge, and contact information. Employee management includes employee ID, name, gender, phone number, and position. During each production, the products produced, quantity, producer, and production time need to be recorded. During inventory management, the products in stock, quantity, and storage time are recorded. During sales, the products sold, quantity, salesperson, customer, and sales time are recorded. The system needs to support performance appraisal of each department.", "answer": {"Department": {"Attributes": ["Department ID", "Department Name", "Person in Charge", "Contact Information"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Phone Number", "Position", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Clothing": {"Attributes": ["Product ID", "Name", "Style", "Production Date", "Price", "Inventory"], "Primary key": ["Product ID"], "Foreign key": {}}, "Production Record": {"Attributes": ["Product ID", "Quantity", "Producer Employee ID", "Production Time"], "Primary key": ["Product ID", "Producer Employee ID", "Production Time"], "Foreign key": {"Product ID": {"Clothing": "Product ID"}, "Producer Employee ID": {"Employee": "Employee ID"}}}, "Sales Record": {"Attributes": ["Product ID", "Sales Quantity", "Salesperson Employee ID", "Customer", "Sales Time"], "Primary key": ["Product ID", "Salesperson Employee ID", "Sales Time"], "Foreign key": {"Product ID": {"Clothing": "Product ID"}, "Salesperson Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7ca", "question": "The timber processing company needs to manage the procurement, processing, and sales of timber. Timber has information such as name, type, purchase price, processing cost, and selling price. Multiple departments in the company collaborate, each department has a name, person in charge, and contact information. Employee management includes employee ID, name, gender, phone number, and position. For each procurement, the system shall record the purchased timber, quantity, purchaser, supplier, and purchase time. During processing, the system shall record the processed timber, quantity, processor, and processing time. For sales, the system shall record the sold timber, quantity, salesperson, customer, and sales time. The system shall support performance evaluation for each department.", "answer": {"Timber": {"Attributes": ["Timber ID", "Timber Name", "Timber Type", "Procurement Price", "Processing Cost", "Sales Price"], "Primary key": ["Timber ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Supervisor", "Contact Information"], "Primary key": ["Department ID"], "Foreign key": {"Supervisor": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Phone Number", "Position", "Department"], "Primary key": ["Employee ID"], "Foreign key": {"Department": {"Department": "Department ID"}}}, "Timber Procurement": {"Attributes": ["Timber ID", "Employee ID", "Procurement Quantity", "Supplier", "Procurement Time"], "Primary key": ["Timber ID", "Employee ID", "Procurement Time"], "Foreign key": {"Timber ID": {"Timber": "Timber ID"}, "Employee ID": {"Employee": "Employee ID"}}}, "Timber Processing": {"Attributes": ["Timber ID", "Employee ID", "Processing Quantity", "Processing Time"], "Primary key": ["Timber ID", "Employee ID", "Processing Time"], "Foreign key": {"Timber ID": {"Timber": "Timber ID"}, "Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7cb", "question": "A furniture manufacturing enterprise requires management of furniture production, inventory, and sales. Furniture products contain information including product name, type, production date, and price. Multiple departments collaborate within the enterprise, with each department containing department name, supervisor, and contact information. Employee management includes employee number, name, gender, phone number, and position. For each production event, the system shall record the produced product, quantity, producer, and production time. For inventory management, the system shall record the product in stock, quantity, and storage time. For sales transactions, the system shall record the sold product, quantity, sales representative, customer, and sales time. The system shall support performance evaluation for all departments.", "answer": {"furniture": {"Attributes": ["furniture ID", "furniture name", "type", "production date", "price"], "Primary key": ["furniture ID"], "Foreign key": {}}, "department": {"Attributes": ["department ID", "supervisor", "department name", "contact information"], "Primary key": ["department ID"], "Foreign key": {"supervisor": {"employee": "employee ID"}}}, "employee": {"Attributes": ["employee ID", "gender", "name", "phone number", "position", "department"], "Primary key": ["employee ID"], "Foreign key": {"schema_1": {"department": "department ID"}}}, "production": {"Attributes": ["furniture ID", "producer ID", "production time", "production quantity"], "Primary key": ["furniture ID", "producer ID", "production time"], "Foreign key": {"schema_0": {"furniture ID": "furniture ID"}, "schema_2": {"producer ID": "employee ID"}}}, "sales": {"Attributes": ["furniture ID", "sales representative ID", "sales time", "sales quantity", "customer"], "Primary key": ["furniture ID", "sales representative ID", "sales time"], "Foreign key": {"schema_0": {"furniture ID": "furniture ID"}, "schema_2": {"sales representative ID": "employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7cc", "question": "  A chemical product manufacturing enterprise needs to manage the production, inventory, and sales of chemical raw materials and products. Chemical raw materials have a name, production date, and shelf life. Products have a name, composition, production date, shelf life, and price. Multiple departments in the enterprise collaborate, and each department has a department name, person in charge, and contact information. Employee management includes employee ID, name, gender, and phone number. The department and position of each employee are recorded. During each production, the product produced, quantity, producer, and production time are recorded. For inventory management, the product in stock, quantity, stocking person, and stocking time are recorded. During sales, the product sold, quantity, salesperson, and sale time are recorded. The system needs to support performance evaluation for each department.\n", "answer": {"Raw Material Table": {"Attributes": ["Raw Material ID", "Name", "Production Date", "Shelf Life"], "Primary key": ["Raw Material ID"], "Foreign key": {}}, "Product Table": {"Attributes": ["Product ID", "Name", "Composition", "Production Date", "Shelf Life", "Price"], "Primary key": ["Product ID"], "Foreign key": {"Raw Material ID": {"Raw Material Table": "Raw Material ID"}}}, "Production Record Table": {"Attributes": ["Product ID", "Quantity", "Producer", "Production Time"], "Primary key": ["Product ID", "Producer", "Production Time"], "Foreign key": {"Product ID": {"Product Table": "Product ID"}, "Producer": {"Employee Department Table": "Employee ID"}}}, "Inventory Record Table": {"Attributes": ["Product ID", "Stocking Person", "Quantity", "Stocking Time"], "Primary key": ["Product ID", "Stocking Person", "Stocking Time"], "Foreign key": {"Stocking Person": {"Employee Department Table": "Employee ID"}, "Product ID": {"Product Table": "Product ID"}}}, "Sales Record Table": {"Attributes": ["Product ID", "Quantity", "Salesperson", "Sale Time"], "Primary key": ["Product ID", "Salesperson", "Sale Time"], "Foreign key": {"Product ID": {"Product Table": "Product ID"}, "Salesperson": {"Employee Department Table": "Employee ID"}}}, "Employee Department Table": {"Attributes": ["Employee ID", "Name", "Gender", "Phone", "Department ID", "Position"], "Primary key": ["Employee ID"], "Foreign key": {"Employee ID": {"Employee Department Table": "Employee ID"}, "Department ID": {"Production Record Table": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a7d1", "question": "Residential Moving Service Company provides moving services for homes, offices, and other locations. The company has several moving teams, each consisting of multiple movers. Each moving task includes a task ID, customer information (customer name, customer phone number), moving date, starting address, destination address, quantity of items moved, and moving cost. Upon completion of the move, customer feedback must be recorded. The performance evaluation of the movers is based on the number of tasks completed and customer satisfaction.\n", "answer": {"Moving Team": {"Attributes": ["Team ID", "Team Name"], "Primary key": ["Team ID"], "Foreign key": {}}, "Mover": {"Attributes": ["Worker ID", "Name", "Age", "Gender", "Phone Number", "Assigned Team ID"], "Primary key": ["Worker ID"], "Foreign key": {"Assigned Team ID": {"Moving Team": "Team ID"}}}, "Moving Task": {"Attributes": ["Task ID", "Customer Name", "Customer Phone Number", "Moving Date", "Starting Address", "Destination Address", "Quantity of Items Moved", "Moving Cost", "Assigned Team ID", "Customer Feedback"], "Primary key": ["Task ID"], "Foreign key": {"Assigned Team ID": {"Moving Team": "Team ID"}}}}}
{"id": "67552f0a13602ec03b41a7d3", "question": "The car rental company provides vehicle leasing services. The company has multiple rental locations, each with several rental vehicles. Each rental task includes a task ID, customer information (customer name, customer phone number), rental date, rental duration, and rental cost. Upon completion of the rental, the vehicle condition and customer feedback need to be recorded. The performance assessment of each rental location is based on the number of rental tasks completed and customer satisfaction.", "answer": {"Rental Location": {"Attributes": ["Rental Location ID", "Rental Location Name", "Rental Location Address"], "Primary key": ["Rental Location ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["Vehicle ID", "Vehicle Model", "Rental Location ID"], "Primary key": ["Vehicle ID"], "Foreign key": {"Rental Location ID": {"Rental Location": "Rental Location ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Rental Task": {"Attributes": ["Vehicle ID", "Customer ID", "Rental Date", "Rental Duration", "Rental Cost", "Vehicle Condition After Rental", "Customer Feedback"], "Primary key": ["Vehicle ID", "Customer ID", "Rental Date"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Vehicle ID": {"Vehicle": "Vehicle ID"}}}}}
{"id": "67552f0a13602ec03b41a7d4", "question": "An electronic product sales company sells products such as mobile phones, computers, and other electronic goods. Each product has information including name, model, and price. The company has multiple sales teams, each with a team ID, team name, manager, and contact information. Each team has multiple sales personnel, whose details include name, phone number, position, and gender. Each sales task includes customer information (customer name, customer phone number), product details (product name, model, price), sales date, quantity, and sales cost. After the sale, customer feedback and rating need to be recorded.", "answer": {"Electronic Product": {"Attributes": ["Product ID", "Name", "Model", "Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Sales Team": {"Attributes": ["Team ID", "Team Name", "Manager", "Contact Information"], "Primary key": ["Team ID"], "Foreign key": {}}, "Sales Personnel": {"Attributes": ["Sales Personnel ID", "Name", "Gender", "Phone", "Position", "Team ID"], "Primary key": ["Sales Personnel ID"], "Foreign key": {"Team ID": {"Sales Team": "Team ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales Task": {"Attributes": ["Sales Task ID", "Sales Date", "Sales Quantity", "Sales Cost"], "Primary key": ["Sales Task ID"], "Foreign key": {}}, "Sales Task Customer": {"Attributes": ["Sales Task ID", "Customer ID", "Feedback", "Rating"], "Primary key": ["Sales Task ID", "Customer ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Sales Task ID": {"Sales Task": "Sales Task ID"}}}, "Sales Task Product": {"Attributes": ["Sales Task ID", "Product ID"], "Primary key": ["Sales Task ID", "Product ID"], "Foreign key": {"Product ID": {"Electronic Product": "Product ID"}, "Sales Task ID": {"Sales Task": "Sales Task ID"}}}}}
{"id": "67552f0a13602ec03b41a7d8", "question": "  A civil engineering company owns multiple pieces of equipment. Each piece of equipment has an equipment ID, equipment name, model, purchase date, purchase price, and status. The company has multiple projects. Each project has a project ID, project name, project description, and creation time. Each project can use multiple pieces of equipment. Equipment usage records need to include project ID, equipment ID, usage date, usage time, and user. The equipment management information system needs to be able to record equipment and equipment usage.\n", "answer": {"equipment": {"Attributes": ["equipment ID", "equipment name", "model", "purchase date", "purchase price", "status"], "Primary key": ["equipment ID"], "Foreign key": {}}, "project": {"Attributes": ["project ID", "project name", "project description", "creation time"], "Primary key": ["project ID"], "Foreign key": {}}, "equipment usage record": {"Attributes": ["usage record ID", "project ID", "equipment ID", "usage date", "usage time", "user"], "Primary key": ["project ID", "equipment ID", "usage date"], "Foreign key": {"equipment ID": {"equipment": "equipment ID"}, "project ID": {"project": "project ID"}}}}}
{"id": "67552f0a13602ec03b41a7da", "question": "The main functions of a project management system are to manage customer information, project progress, and customer feedback and satisfaction with projects. The system supports the input of customer information, project management, and records customer feedback for each project, including satisfaction ratings and comments. The following are specific business descriptions:\n\nCustomer Management:\n\nThe system shall be able to manage basic customer information, including customer name, phone number, email, and address. This customer information is the foundation for project management, ensuring that personalized services and support can be provided to different customers.\n\nProject Management:\n\nThe system shall be able to manage basic information for multiple projects, recording each project's name, start date, estimated completion date, actual completion date, and project budget. Detailed project information helps track project progress and budget control.\n\nCustomer and Project Association:\n\nThe system shall support relationship management between customers and projects, recording the projects each customer participates in and allowing customers to provide feedback and satisfaction ratings for each project. This helps the company understand customer feedback on projects, improve service quality, and enhance customer satisfaction.\n\nThrough these functions, the system can efficiently manage customer information and project progress, ensure customer needs are met, and track customer satisfaction with projects in a timely manner, providing references for future project improvements.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Email", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Start Date", "Estimated Completion Date", "Actual Completion Date", "Project Budget"], "Primary key": ["Project ID"], "Foreign key": {}}, "Customer Project Relationship": {"Attributes": ["Customer ID", "Project ID", "Feedback", "Satisfaction Rating"], "Primary key": ["Customer ID", "Project ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a7db", "question": "The main function of a contract and project management system is to manage the contracts between the company and the customer and the execution of each project. The system supports the entry and tracking of contracts, the progress and budget control of projects, and can record contract change information. The following is a specific business description:\nContract management: The system can manage various contracts signed between the company and the customer, including basic information of the contract, such as contract name, signing date, amount, status, etc. Each contract is associated with a specific project to ensure that the performance of the contract is synchronized with the progress of the project.\nProject management: The system can record and manage the detailed information of multiple projects, including project name, start date, expected completion date, actual completion date, budget and location, etc. The project management function helps monitor the implementation of the project to ensure that the project is carried out as planned and the budget is effectively controlled.\nRelationship management between projects and contracts: The system supports the association between each project and multiple contracts. By managing the relationship between projects and contracts, it can ensure that each project has corresponding contract support, and at the same time track the execution of the contract during the project implementation process.\nContract change record: The system can record the change history of each contract, including information such as the change date, change content, and the changed contract amount. Contract change records help track the contract adjustment process and ensure that contract changes can be followed up and managed in a timely manner.\nThe system is designed to ensure efficient management of contracts and projects, support the tracking of contract changes, and help companies fully understand project progress and contract performance through the association between projects and contracts, thereby improving the transparency and control of project execution.\n\n", "answer": {"Contract": {"Attributes": ["Contract Number", "Contract Name", "Signing Date", "Contract Amount", "Contract Status", "Project Number"], "Primary key": ["Contract Number"], "Foreign key": {"Project Number": {"Project": "Project Number"}}}, "Project": {"Attributes": ["Project Number", "Project Name", "Start Date", "Expected Completion Date", "Actual Completion Date", "Budget", "Location"], "Primary key": ["Project Number"], "Foreign key": {}}, "Project Includes Contract": {"Attributes": ["Project Number", "Contract Number"], "Primary key": ["Project Number", "Contract Number"], "Foreign key": {"Contract Number": {"Contract": "Contract Number"}, "Project Number": {"Project": "Project Number"}}}, "Contract Change Record": {"Attributes": ["Change Number", "Contract Number", "Change Date", "Change Content", "Change Amount"], "Primary key": ["Change Number"], "Foreign key": {"Contract Number": {"Contract": "Contract Number"}}}}}
{"id": "67552f0a13602ec03b41a7dc", "question": "Civil Engineering Project Quality Inspection Management System\nThe main function of the Civil Engineering Project Quality Inspection Management System is to manage the basic information of civil engineering projects and track the quality inspection process for each project. The system supports project entry and management, inspector management, and the record-keeping of each quality inspection, ensuring that the project quality meets the required standards. The following are the specific business descriptions:\nCivil Engineering Project Management:\nThe system can manage detailed information for multiple civil engineering projects, including project name, project manager, start date, expected completion date, actual completion date, project budget, and project location. The project management function helps monitor the execution progress and budget control of the projects, ensuring that the projects proceed according to plan.\nInspector Management:\nThe system can record and manage the quality inspectors\u2019 information for the projects, including the inspector\u2019s name, position, and contact information. Inspectors are a critical part of project quality control, and the system ensures that each project is assigned qualified personnel to carry out quality inspections.\nProject Quality Inspection Tracking:\nThe system can track the quality inspection status for each project, including the inspector, inspection date, inspection content, and inspection results. Each inspection record is associated with the corresponding project and inspector, ensuring that the project quality meets the required standards. Detailed information from each inspection is recorded to provide a basis for future reviews and improvements.\nThrough these features, the system helps project managers comprehensively monitor project progress, quality inspection status, and personnel allocation, ensuring that civil engineering projects are executed efficiently and meet quality standards.", "answer": {"Civil Engineering Project": {"Attributes": ["Project ID", "Project Name", "Project Manager", "Start Date", "Expected Completion Date", "Actual Completion Date", "Project Budget", "Project Location"], "Primary key": ["Project ID"], "Foreign key": {}}, "Inspector": {"Attributes": ["Inspector ID", "Name", "Position", "Contact Information"], "Primary key": ["Inspector ID"], "Foreign key": {}}, "Project Quality Inspection": {"Attributes": ["Project ID", "Inspector ID", "Inspection Date", "Inspection Content", "Inspection Result"], "Primary key": ["Project ID", "Inspector ID", "Inspection Date"], "Foreign key": {"Inspector ID": {"Inspector": "Inspector ID"}, "Project ID": {"Civil Engineering Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a7dd", "question": "A construction decoration company employs multiple designers, each with a Designer ID, name, phone number, email, and department. Each client has their own phone number and email. The company undertakes several decoration projects, each project having a Project Manager, project name, start date, estimated completion date, actual completion date, project budget, and Client ID. Each project's design plan must record the Designer ID, design date, design plan name, and design plan content. The design management information system must be capable of archiving design plans and tracking the workload of designers.", "answer": {"Designer": {"Attributes": ["Designer ID", "Designer Name", "Phone", "Email", "Department"], "Primary key": ["Designer ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Email"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Designer ID", "Customer ID", "Project Manager", "Project Name", "Start Date", "Estimated Completion Date", "Actual Completion Date", "Project Budget", "Design Plan Date", "Design Plan Name", "Design Plan Content"], "Primary key": ["Project ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Designer ID": {"Designer": "Designer ID"}}}}}
{"id": "67552f0a13602ec03b41a7e2", "question": "The Company Manages Multiple Civil Engineering Projects\nEach project has a project ID, name, location, start date, expected completion date, actual completion date, and is supervised by a project manager. Each building is part of a project and records the number of floors, area, and price. Sales records track the sales status of buildings, involving sales personnel and customer information. The sales personnel include their ID, name, position, and contact information. The project manager includes their ID, name, position, and contact information.", "answer": {"Civil Engineering Project": {"Attributes": ["Project ID", "Project Name", "Location", "Start Date", "Expected Completion Date", "Actual Completion Date", "Project Manager ID"], "Primary key": ["Project ID"], "Foreign key": {"Project Manager ID": {"Project Manager": "Project Manager ID"}}}, "Building": {"Attributes": ["Building ID", "Project ID", "Number of Floors", "Area", "Price"], "Primary key": ["Building ID"], "Foreign key": {"Project ID": {"Civil Engineering Project": "Project ID"}}}, "Sales Personnel": {"Attributes": ["Sales Personnel ID", "Name", "Position", "Contact Information"], "Primary key": ["Sales Personnel ID"], "Foreign key": {}}, "Project Manager": {"Attributes": ["Project Manager ID", "Name", "Position", "Contact Information"], "Primary key": ["Project Manager ID"], "Foreign key": {}}, "Building Sale": {"Attributes": ["Building ID", "Sales Personnel ID", "Customer Name", "Customer Contact Information", "Sales Date", "Price"], "Primary key": ["Building ID", "Sales Personnel ID", "Sales Date"], "Foreign key": {"Building ID": {"Building": "Building ID"}, "Sales Personnel ID": {"Sales Personnel": "Sales Personnel ID"}}}}}
{"id": "67552f0a13602ec03b41a7e6", "question": "The main functions of a real estate sales management system are to manage real estate sales information and track the sales activities of each salesperson. The system supports the management of property information, customer information entry, salesperson assignment, and the recording and tracking of sales contracts. The following are specific business descriptions:\n\nProperty Management:\n\nThe system shall be able to manage detailed information of multiple properties, including the property address, area, sales price, and sales status. The property management function helps administrators and salespeople understand the basic situation of each property and its current sales status (such as whether it has been sold), providing information support for subsequent sales work.\n\nSalesperson Management:\n\nThe system shall be able to record and manage the basic information of salespeople, including name, phone number, and email. Salespeople are key roles in the sales process, and the system ensures reasonable allocation and execution of sales tasks by managing salesperson information.\n\nCustomer Management:\n\nThe system shall be able to manage the basic information of customers, including name, phone number, email, and address. Customer information is the core of sales activities, ensuring that salespeople can provide property information based on customer needs, follow up on the sales process, and ultimately facilitate transactions.\n\nSales Contract Management:\n\nThe system shall be able to record and manage sales contracts signed with customers, including contract date, contract price, signing time, and specific content of the contract. Each sales contract is associated with a specific property and customer, ensuring that the contract fulfillment process can be effectively tracked.\n\nSales Tracking:\n\nThe system shall be able to record the properties sold by each salesperson and track the execution status of each sales contract. The relationship table between salespeople and sales contracts can help the company understand the performance of each salesperson, which properties have been successfully sold, and which sales processes need further follow-up.\n\nThrough the above functions, the system can help real estate companies efficiently manage property resources, interactions between salespeople and customers, and the execution of sales contracts, ensuring that sales activities proceed smoothly and maximize performance.", "answer": {"Property Information": {"Attributes": ["Property ID", "Property Address", "Property Area", "Sales Price", "Sales Status"], "Primary key": ["Property ID"], "Foreign key": {}}, "Salesperson": {"Attributes": ["Salesperson ID", "Name", "Phone", "Email"], "Primary key": ["Salesperson ID"], "Foreign key": {}}, "Customer Information": {"Attributes": ["Customer ID", "Name", "Phone", "Email", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales Contract": {"Attributes": ["Sales Contract ID", "Property ID", "Customer ID", "Contract Date", "Contract Price", "Contract Signing Time", "Contract Specific Content"], "Primary key": ["Sales Contract ID"], "Foreign key": {"Customer ID": {"Customer Information": "Customer ID"}, "Property ID": {"Property Information": "Property ID"}}}, "Salesperson Sold Property": {"Attributes": ["Salesperson ID", "Sales Contract ID"], "Primary key": ["Salesperson ID", "Sales Contract ID"], "Foreign key": {"Salesperson ID": {"Salesperson": "Salesperson ID"}, "Sales Contract ID": {"Sales Contract": "Sales Contract ID"}}}}}
{"id": "67552f0a13602ec03b41a7e7", "question": "Business requirement description:\nThe real estate company manages the property management of multiple communities. Each community has a community number, name, location and property manager. The property manager can manage multiple communities, but each community has only one property manager, and the name, phone number and email address of the property manager need to be recorded. Each community has multiple residents, and each resident has a resident number, name, phone number, email address and building number. Every time the property is repaired, the maintenance order number, community number, resident number, maintenance date, maintenance content, maintenance cost and maintenance personnel information must be recorded. The maintenance personnel information includes the maintenance personnel number, name and phone number.", "answer": {"Community": {"Attributes": ["Community ID", "Name", "Location", "Property Manager ID"], "Primary key": ["Community ID"], "Foreign key": {"Property Manager ID": {"Property Manager": "Property Manager ID"}}}, "Property Manager": {"Attributes": ["Property Manager ID", "Name", "Phone", "Email"], "Primary key": ["Property Manager ID"], "Foreign key": {}}, "Resident": {"Attributes": ["Resident ID", "Name", "Phone", "Email", "Building ID", "Community ID"], "Primary key": ["Resident ID"], "Foreign key": {"Community ID": {"Community": "Community ID"}}}, "Repair Order": {"Attributes": ["Repair Order ID", "Community ID", "Resident ID", "Repair Date", "Repair Content", "Repair Cost", "Repair Staff ID"], "Primary key": ["Repair Order ID"], "Foreign key": {"Resident ID": {"Resident": "Resident ID"}, "Community ID": {"Community": "Community ID"}, "Repair Staff ID": {"Repair Staff": "Repair Staff ID"}}}, "Repair Staff": {"Attributes": ["Repair Staff ID", "Name", "Phone"], "Primary key": ["Repair Staff ID"], "Foreign key": {}}, "Management": {"Attributes": ["Property Manager ID", "Community ID"], "Primary key": ["Property Manager ID", "Community ID"], "Foreign key": {"Community ID": {"Community": "Community ID"}, "Property Manager ID": {"Property Manager": "Property Manager ID"}}}, "Residence": {"Attributes": ["Resident ID", "Community ID", "Building ID"], "Primary key": ["Resident ID", "Community ID"], "Foreign key": {"Resident ID": {"Resident": "Resident ID"}, "Community ID": {"Community": "Community ID"}}}, "Execution": {"Attributes": ["Repair Order ID", "Repair Staff ID"], "Primary key": ["Repair Order ID", "Repair Staff ID"], "Foreign key": {"Repair Staff ID": {"Repair Staff": "Repair Staff ID"}, "Repair Order ID": {"Repair Order": "Repair Order ID"}}}}}
{"id": "67552f0a13602ec03b41a7e8", "question": "A property management company needs to manage multiple communities and related information. Each community has a unique number, name, location and corresponding property manager. The property manager needs to record basic information such as name, phone number and email address. Each community contains multiple residents. Each resident needs to associate the information of the community to which he belongs, and record the resident number, name, phone number, email address and building number. The building needs to include the building number, building name, and building location. At the same time, the company needs to comprehensively manage the maintenance services in the community. The maintenance order needs to include the maintenance order number, community number, resident number, maintenance date, maintenance content, maintenance cost and maintenance personnel information. The basic information of the maintenance personnel includes name, phone number and email address. The property management information system needs to realize the comprehensive recording and management of the community, residents, maintenance services and related personnel information, so as to track the operation status of the community in real time, improve service efficiency and ensure user satisfaction.", "answer": {"Community": {"Attributes": ["Community Number", "Community Name", "Community Location", "Property Manager Number"], "Primary key": ["Community Number"], "Foreign key": {"Property Manager Number": {"Property Manager": "Property Manager Number"}}}, "Property Manager": {"Attributes": ["Property Manager Number", "Name", "Phone", "Email"], "Primary key": ["Property Manager Number"], "Foreign key": {}}, "Resident": {"Attributes": ["Resident Number", "Community Number", "Name", "Phone", "Email", "Building Number"], "Primary key": ["Resident Number"], "Foreign key": {"Building Number": {"Building": "Building Number"}, "Community Number": {"Community": "Community Number"}}}, "Maintenance Record": {"Attributes": ["Maintenance Order Number", "Community Number", "Resident Number", "Maintenance Content"], "Primary key": ["Maintenance Order Number"], "Foreign key": {"Community Number": {"Community": "Community Number"}, "Resident Number": {"Resident": "Resident Number"}}}, "Maintenance Personnel": {"Attributes": ["Maintenance Personnel Number", "Name", "Phone", "Email"], "Primary key": ["Maintenance Personnel Number"], "Foreign key": {}}, "Building": {"Attributes": ["Building name", "Building location"], "Primary key": ["Building number"], "Foreign key": {}}, "Worker handles maintenance records": {"Attributes": ["Maintenance order number", "Maintenance date", "Maintenance cost", "Maintenance Personnel Number"], "Primary key": ["Maintenance order number"], "Foreign key": {"Maintenance staff number": {"Maintenance Personnel": "Maintenance Personnel Number"}}}}}
{"id": "67552f0a13602ec03b41a7ed", "question": "A real estate company needs to manage real estate loan business and needs a loan approval management system. Its main function is to process real estate loan applications and track the approval process of each loan application. The system supports the entry of loan applications, the management of approval personnel, and the tracking and recording of the approval process. The following is a specific business description:\nLoan application management: The system can record the detailed information of the loan application, including the property number, loan amount, loan term, approval status, basic information of the applicant (such as name, phone number, ID number) and application time. The loan application management function helps the company manage all loan requests and conduct preliminary screening and processing based on the application information.\nApproval personnel management: The system can manage the basic information of the approval personnel, including the name and contact information of the approval personnel. Approval personnel are key roles in the loan approval process. The system ensures that the approval work can be carried out efficiently and accurately by managing the approval personnel information.\nLoan approval tracking: The system can record and track the approval process of each loan application, including the approval personnel, approval time and approval results. Each loan application may have multiple approval steps. The system ensures that each step of the approval is accurately recorded, providing a fully traceable basis for the approval results.\nApproval result management: The system can process and record the approval results. After reviewing the loan application, the approver will make a decision based on the approval criteria, and the approval result will be fed back to the loan application form. The record of loan approval includes information such as the approver, application number, approval time and result, ensuring that the approval process is transparent and traceable.", "answer": {"Loan Application": {"Attributes": ["Application Number", "Property Number", "Loan Amount", "Loan Term", "Approval Status", "Applicant Name", "Applicant Phone Number", "Applicant ID Number", "Application Time"], "Primary key": ["Application Number"], "Foreign key": {}}, "Loan Approval": {"Attributes": ["Approval Officer Number", "Loan Application Number", "Approval Time", "Approval Result"], "Primary key": ["Approval Officer Number", "Loan Application Number", "Approval Time"], "Foreign key": {"Approval Officer Number": {"Approval officer": "Approval Officer Number"}, "Loan Application Number": {"Loan Application": "Application Number"}}}, "Approval officer": {"Attributes": ["Approval officer number", "Approval officer name", "Approval officer phone number"], "Primary key": ["Approval officer number"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7f3", "question": "This is a real estate company's property market analysis system. For property basic information management, the system records property ID, address, area, sales price and sales date. For analysis report management, the system maintains report ID, report date, report type (such as sales trends, price analysis, etc.) and analysis results. For the report generation process, each time when generating an analysis report, the system records the report ID, property ID, report date, report type and analysis results.", "answer": {"Property": {"Attributes": ["Property ID", "Address", "Area", "Sales price", "Sales date"], "Primary key": ["Property ID"], "Foreign key": {}}, "Analysis report": {"Attributes": ["Report ID", "Report date", "Report type", "Analysis result", "Property ID"], "Primary key": ["Report ID"], "Foreign key": {"Property ID": {"Property": "Property ID"}}}}}
{"id": "67552f0a13602ec03b41a7f5", "question": "A wholesaler needs to manage its inventory, including multiple warehouses and the goods in the warehouses. Each warehouse has a warehouse number, name, and address. Each product has a product number, name, model, barcode, price, and inventory quantity. The warehouse must conduct regular inventory counts and record the inventory time, inventory counter, good number, and inventory quantity. When the goods are shipped out, the shipment time, shipment quantity, shipment person, and receiving unit need to be recorded. The system also needs to conduct performance appraisals on the warehouse, and the appraisal indicators include inventory accuracy and shipment efficiency.", "answer": {"Warehouse": {"Attributes": ["Warehouse number", "Warehouse name", "Warehouse address", "Inventory accuracy", "Outbound efficiency"], "Primary key": ["Warehouse number"], "Foreign key": {}}, "Good": {"Attributes": ["Good name", "Good model", "Good barcode", "Good price"], "Primary key": ["Good barcode"], "Foreign key": {}}, "Warehouse Good Record": {"Attributes": ["Warehouse number", "Good number", "Inventory quantity"], "Primary key": ["Warehouse number", "Good barcode"], "Foreign key": {"Good barcode": {"Good": "Good barcode"}, "Warehouse number": {"Warehouse": "Warehouse number"}}}, "Inventory": {"Attributes": ["Warehouse number", "Good barcode", "Inventory time", "Inventory person", "Inventory quantity"], "Primary key": ["Warehouse number", "Product barcode", "Inventory time"], "Foreign key": {"Good barcode": {"Good": "Good barcode"}, "Warehouse number": {"Warehouse": "Warehouse number"}}}, "Outgoing record": {"Attributes": ["Warehouse number", "Good number", "Outgoing time", "Outgoing quantity", "Outgoing person", "Receiving unit"], "Primary key": ["Warehouse number", "Good number", "Outbound time"], "Foreign key": {"Good barcode": {"Good": "Good barcode"}, "Warehouse number": {"Warehouse": "Warehouse number"}}}}}
{"id": "67552f0a13602ec03b41a7fe", "question": "The retail supermarket needs to develop a membership points management system to manage members' points, shopping records, and point redemption records.\n  The system shall record basic information of members, including Member ID, Name, Phone Number, and Current Points. Each member shall have a unique Member ID.\n  Each time a member shops, the system shall record the Shopping Time, Total Price of Goods, and Points Change. The shopping record shall be associated with the member, and each purchase shall affect the member's points (increase or decrease).\n  In addition, the system shall also record members' point redemption records, including Redemption Time, Redeemed Product Name, Redemption Quantity, and Points Consumed. Each redemption shall reduce the member's points, and the redemption record shall also be associated with the member.\n  The system shall support querying all shopping records, all point redemption records, and current points of a specific member.\n", "answer": {"Member": {"Attributes": ["Member ID", "Name", "Phone Number", "Current Points"], "Primary key": ["Member ID"], "Foreign key": {}}, "Shopping Record": {"Attributes": ["Member ID", "Shopping Time", "Total Price of Goods", "Points Change"], "Primary key": ["Member ID", "Shopping Time"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Point Redemption Record": {"Attributes": ["Member ID", "Redemption Time", "Redeemed Product Name", "Redemption Quantity", "Points Consumed"], "Primary key": ["Member ID", "Redemption Time"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}}}
{"id": "67552f0a13602ec03b41a7ff", "question": "The news publishing company needs to manage the submission, review, and publishing process of news articles. Each reporter can submit multiple articles, and each article needs to be reviewed by an editor. After passing the review, the article is published by a publisher. The system needs to record the submission time, review time, and publishing time of each article, as well as the information of the reporter, editor, and publisher.\n", "answer": {"Reporter": {"Attributes": ["Reporter ID", "Reporter Name", "Email", "Phone"], "Primary key": ["Reporter ID"], "Foreign key": {}}, "News Article": {"Attributes": ["Article ID", "Article Title", "Article Content", "Submission Time", "Review Time", "Publish Time"], "Primary key": ["Article ID"], "Foreign key": {}}, "Editor": {"Attributes": ["Editor ID", "Editor Name", "Email", "Phone"], "Primary key": ["Editor ID"], "Foreign key": {}}, "Publisher": {"Attributes": ["Publisher ID", "Publisher Name", "Email", "Phone"], "Primary key": ["Publisher ID"], "Foreign key": {}}, "Article Reporter Table": {"Attributes": ["Article ID", "Reporter ID"], "Primary key": ["Article ID", "Reporter ID"], "Foreign key": {"Article ID": {"News Article": "Article ID"}, "Reporter ID": {"Reporter": "Reporter ID"}}}, "Article Editor Table": {"Attributes": ["Article ID", "Editor ID"], "Primary key": ["Article ID", "Editor ID"], "Foreign key": {"Article ID": {"News Article": "Article ID"}, "Editor ID": {"Editor": "Editor ID"}}}, "Article Publisher Table": {"Attributes": ["Article ID", "Publisher ID"], "Primary key": ["Article ID", "Publisher ID"], "Foreign key": {"Publisher ID": {"Publisher": "Publisher ID"}, "Article ID": {"News Article": "Article ID"}}}}}
{"id": "67552f0a13602ec03b41a800", "question": "The manuscript management process for a news organization is as follows: The organization employs multiple reporters, with reporter information including Reporter ID, name, email, and phone number. Reporters write news manuscripts, with manuscript information including Manuscript ID, title, content, submission time, review time, publication time, and status. Each manuscript is written by multiple reporters and is reviewed by multiple editors, with editor information including Editor ID, name, email, and phone number. Once approved, the manuscript is handed over to multiple publishers responsible for different sections, with publisher information including Publisher ID, name, email, and phone number. Each manuscript undergoes two stages after submission: review and publication, with review and publication times recorded separately. Manuscript status includes pending review, reviewed, and published.", "answer": {"Reporter": {"Attributes": ["Reporter ID", "Name", "Email", "Phone"], "Primary key": ["Reporter ID"], "Foreign key": {}}, "Editor": {"Attributes": ["Editor ID", "Name", "Email", "Phone"], "Primary key": ["Editor ID"], "Foreign key": {}}, "Publisher": {"Attributes": ["Publisher ID", "Name", "Email", "Phone", "Responsible Section"], "Primary key": ["Publisher ID"], "Foreign key": {}}, "Manuscript": {"Attributes": ["Manuscript ID", "Title", "Content", "Status"], "Primary key": ["Manuscript ID"], "Foreign key": {}}, "Writing Record": {"Attributes": ["Reporter ID", "Manuscript ID", "Manuscript Submission Time", "Responsible Part"], "Primary key": ["Reporter ID", "Manuscript ID", "Manuscript Submission Time", "Responsible Part"], "Foreign key": {"Manuscript ID": {"Manuscript": "Manuscript ID"}, "Reporter ID": {"Reporter": "Reporter ID"}}}, "Review Record": {"Attributes": ["Editor ID", "Manuscript ID", "Manuscript Review Time", "Review Part"], "Primary key": ["Editor ID", "Manuscript ID", "Manuscript Review Time", "Review Part"], "Foreign key": {"Manuscript ID": {"Manuscript": "Manuscript ID"}, "Editor ID": {"Editor": "Editor ID"}}}, "Publication Record": {"Attributes": ["Publisher ID", "Manuscript ID", "Publication Time"], "Primary key": ["Publisher ID", "Manuscript ID", "Publication Time"], "Foreign key": {"Publisher ID": {"Publisher": "Publisher ID"}, "Manuscript ID": {"Manuscript": "Manuscript ID"}}}}}
{"id": "67552f0a13602ec03b41a801", "question": "The broadcasting station requires management of multiple programs, each with multiple hosts and time slots. The system needs to record the name, type, and broadcast time of each program, as well as the information of the hosts and the arrangement of the time slots.", "answer": {"Program": {"Attributes": ["Program ID", "Program Name", "Program Type"], "Primary key": ["Program ID"], "Foreign key": {}}, "Host": {"Attributes": ["Host ID", "Name", "Contact Information"], "Primary key": ["Host ID"], "Foreign key": {}}, "Host Program Assignment": {"Attributes": ["Host ID", "Program ID", "Time Slot"], "Primary key": ["Host ID", "Program ID", "Time Slot"], "Foreign key": {"Host ID": {"Host": "Host ID"}, "Program ID": {"Program": "Program ID"}}}}}
{"id": "67552f0a13602ec03b41a810", "question": "The system manages the copyright information of movies, primarily including key data such as movies, copyright holders, and licenses. The Movie table records the basic information of a movie, comprising \"Movie ID,\"\"Name,\"\"Type,\" and \"Release Date.\" The Copyright Holder table is used to record detailed information of copyright holders, including \"Holder ID,\"\"Name,\"\"Email,\" and \"Phone.\" The License table uses \"License ID\" as the Primary key, linked to \"Movie ID\" (Foreign key, referencing the Movie table) and \"Holder ID\" (Foreign key, referencing the Copyright Holder table), documenting the type of license, start time, and end time, clarifying the licensing relationship between copyright holders and movies. The entire system effectively manages the movie's copyright holdings, licensing periods, and related holder information, ensuring the compliance and transparency of copyrights.\n", "answer": {"Movie": {"Attributes": ["Movie ID", "Movie Name", "Movie Type", "Release Date"], "Primary key": ["Movie ID"], "Foreign key": {}}, "Copyright Holder": {"Attributes": ["Holder ID", "Holder Name", "Email", "Phone"], "Primary key": ["Holder ID"], "Foreign key": {}}, "License Movie": {"Attributes": ["Movie ID", "Holder ID", "License Type", "Start Time", "End Time"], "Primary key": ["Movie ID", "Holder ID"], "Foreign key": {"Holder ID": {"Copyright Holder": "Holder ID"}, "Movie ID": {"Movie": "Movie ID"}}}}}
{"id": "67552f0a13602ec03b41a813", "question": "Reservoir and River Resource Management System\nThe primary function of the system is to monitor, maintain, and manage water resources such as reservoirs and rivers. The system supports the management of resource information, recording of monitoring and maintenance personnel, and detailed tracking of various monitoring and maintenance activities.\nResource Management:\nThe system can manage basic information about reservoirs and rivers, including the resource name, location, and type. This information helps classify, locate, and manage various water resources, ensuring efficient resource scheduling and utilization.\nResource Monitoring:\nThe system can record water resource monitoring activities, including the monitoring personnel, monitoring time, monitoring point, water quality indicators, water volume data, and pollution level. Monitoring personnel are responsible for collecting data related to water resources periodically or irregularly. The system helps track each monitoring result to ensure that changes in water quality and volume are detected promptly and appropriate actions are taken.\nResource Maintenance:\nThe system can record and manage maintenance activities for reservoirs and rivers, including maintenance personnel, maintenance time, maintenance content, and maintenance costs. Each maintenance task is performed by specialized personnel, and the system can record the details and costs of each maintenance activity for later management and budget analysis.\nPersonnel Management:\nThe system manages the information of all personnel involved in water resource monitoring and maintenance, including monitoring personnel and maintenance personnel\u2019s names, phone numbers, and positions. The personnel management module ensures that each individual involved in the project is traceable and that relevant personnel can be contacted promptly during task execution.\nMonitoring and Maintenance Tracking:\nThe system can accurately track each water resource monitoring and maintenance activity, including the specific time, location, personnel, and related content. Through the system\u2019s tracking function, all monitoring and maintenance activities are clearly recorded, contributing to the transparency and standardization of water resource management and ensuring traceability of future issues.\nThrough these functions, the system can effectively manage the operation status of water resources, monitor changes in water quality and volume, and promptly take maintenance and corrective actions when resource issues arise. Additionally, by managing personnel and tracking monitoring and maintenance data, the system ensures the safety and long-term sustainability of the resources.", "answer": {"Reservoir and River": {"Attributes": ["Resource ID", "Name", "Location", "Type"], "Primary key": ["Resource ID"], "Foreign key": {}}, "Monitoring Personnel": {"Attributes": ["Monitoring Personnel ID", "Name", "Phone", "Position"], "Primary key": ["Monitoring Personnel ID"], "Foreign key": {}}, "Maintenance Personnel": {"Attributes": ["Maintenance Personnel ID", "Name", "Phone", "Position"], "Primary key": ["Maintenance Personnel ID"], "Foreign key": {}}, "Resource Monitoring": {"Attributes": ["Resource ID", "Monitoring Personnel ID", "Monitoring Time", "Monitoring Point", "Water Quality Indicators", "Water Volume Data", "Pollution Level"], "Primary key": ["Resource ID", "Monitoring Personnel ID", "Monitoring Time"], "Foreign key": {"Monitoring Personnel ID": {"Monitoring Personnel": "Monitoring Personnel ID"}, "Resource ID": {"Reservoir and River": "Resource ID"}}}, "Resource Maintenance": {"Attributes": ["Resource ID", "Maintenance Personnel ID", "Maintenance Time", "Maintenance Content", "Maintenance Cost"], "Primary key": ["Resource ID", "Maintenance Personnel ID", "Maintenance Time"], "Foreign key": {"Maintenance Personnel ID": {"Maintenance Personnel": "Maintenance Personnel ID"}, "Resource ID": {"Reservoir and River": "Resource ID"}}}}}
{"id": "67552f0a13602ec03b41a817", "question": "Land Management System Functionalities:\n\nThe primary functions of a land management system include managing land resources, tracking project usage, and recording land changes. The system supports the management of land information, project usage records, and changes to the land to facilitate comprehensive land resource management and optimization. Below is a detailed business description:\n\nLand Resource Management:\n\nThe system can manage basic land information, including land location and overall area, ensuring that the allocation, management, and use of land resources are effectively recorded and tracked.\n\nProject Management and Land Usage:\n\nThe system can record information about the land used by each project, including the project's name, location, purpose, and responsible person. During land usage by a project, the system tracks the area of land used, years of usage, and current status in detail. These details ensure that the use of land resources matches project requirements and allows for timely adjustments to land usage strategies.\n\nLand Change Records:\n\nThe system can record detailed information about each land change, including the content of the change, reason for the change, costs associated, and the time of the change. Each land change incurs costs, and the system can track the costs of these changes and analyze the specific reasons and contexts for the changes.\n\nLand Usage Tracking:\n\nThe system can comprehensively track the usage of land for each project, including recording the area of land used, years of usage, and the current state of the land. Additionally, the system tracks each record's personnel and timing, ensuring transparency and standardization in land usage.\n\nThrough these functionalities, the system helps management departments clearly understand the status of land usage, changes, and related costs, thereby better planning and making decisions regarding land resources. Moreover, the system ensures that all aspects of land changes and project implementation are thoroughly recorded and reviewed, enhancing management efficiency and accuracy.", "answer": {"Land": {"Attributes": ["Land ID", "Land Location", "Total Land Area"], "Primary key": ["Land ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Project Location", "Purpose", "Responsible Person"], "Primary key": ["Project ID"], "Foreign key": {}}, "Land Change": {"Attributes": ["Change ID", "Land ID", "Change Content", "Change Reason", "Change Cost", "Change Time"], "Primary key": ["Change ID"], "Foreign key": {"Land ID": {"Land": "Land ID"}}}, "Land Usage Status": {"Attributes": ["Land ID", "Project ID", "Land Usage Area", "Usage Years", "Current Status", "Record Time", "Record Personnel"], "Primary key": ["Land ID", "Project ID", "Record Time"], "Foreign key": {"Land ID": {"Land": "Land ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a818", "question": "The primary functions of the Processing Pool Management System include comprehensive tracking and management of the daily operations of the processing pool, staff management, and maintenance records. The system supports the entry of basic information for the processing pool, management of staff, recording of operational data for the processing pool, and tracking of regular maintenance activities. Here are the specific business descriptions:\n\nProcessing Pool Management:\n\nThe system can manage basic information for each processing pool, including name, location, and responsible personnel, ensuring reasonable allocation and management of processing pool resources.\n\nStaff Management:\n\nThe system can record basic information of staff members, including names, phone numbers, emails, and responsibilities, ensuring the accuracy and traceability of staff information. Additionally, it can track related processing pool management records and maintenance tasks by using the Staff ID.\n\nProcessing Pool Operation Records:\n\nThe system can record the processing capacity and efficiency of each processing pool and associate these data with the Processing Pool ID, record time, and recording staff. This aids in long-term monitoring of the operations of each processing pool and provides data support for optimizing the performance of the processing pools.\n\nProcessing Pool Maintenance Management:\n\nThe system can record each maintenance task performed on the processing pools, including maintenance content, costs, and maintenance personnel. Managing maintenance records ensures that the equipment and facilities of the processing pool are always in optimal operating condition, timely repairs and maintenance are carried out, avoiding impacts on processing efficiency.\n\nThrough these features, the system helps management personnel to comprehensively understand the daily operations and maintenance status of the processing pools, ensuring efficient utilization of processing pool resources and effective implementation of maintenance tasks.\"{\n   ", "answer": {"Processing Pool": {"Attributes": ["Processing Pool ID", "Name", "Location", "Responsible Person ID"], "Primary key": ["Processing Pool ID"], "Foreign key": {"Responsible Person ID": {"Processing Pool Maintenance": "Responsible Person ID"}}}, "Staff": {"Attributes": ["Name", "Phone", "Email", "Responsibilities", "Staff ID"], "Primary key": ["Staff ID"], "Foreign key": {}}, "Processing Pool Record": {"Attributes": ["Processing Pool ID", "Recording Staff ID", "Record Time", "Processing Capacity", "Processing Efficiency"], "Primary key": ["Processing Pool ID", "Record Time", "Recording Staff ID"], "Foreign key": {"Processing Pool ID": {"Processing Pool": "Processing Pool ID"}, "Recording Staff ID": {"Staff": "Staff ID"}}}, "Processing Pool Maintenance": {"Attributes": ["Processing Pool ID", "Maintenance Staff ID", "Maintenance Time", "Maintenance Content", "Maintenance Cost"], "Primary key": ["Processing Pool ID", "Maintenance Time", "Maintenance Staff ID"], "Foreign key": {"Processing Pool ID": {"Processing Pool": "Processing Pool ID"}, "Maintenance Staff ID": {"Staff": "Staff ID"}}}}}
{"id": "67552f0a13602ec03b41a81e", "question": "The heating company needs to manage information about its users and their heat supply status. Each user has an ID, name, address, and contact information. For each heat supply instance, the supply date, supply quantity, user ID, and operator ID need to be recorded. Each operator has an ID, name, department, and contact information.\n", "answer": {"User": {"Attributes": ["User ID", "Name", "Address", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Operator": {"Attributes": ["Operator ID", "Name", "Department", "Contact Information"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Supply Record": {"Attributes": ["User ID", "Operator ID", "Supply Date", "Supply Quantity"], "Primary key": ["User ID", "Record ID", "Supply Date"], "Foreign key": {"Operator ID": {"Operator": "Operator ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a821", "question": "The power company needs to track the electricity consumption of each user. A user has an ID, name, address, and contact information. Each electricity usage record includes the record time, electricity consumption, user ID, and operator ID. An operator has an ID, name, department, and contact information.", "answer": {"Operator": {"Attributes": ["ID", "Name", "Department", "Contact Information"], "Primary key": ["ID"], "Foreign key": {}}, "User": {"Attributes": ["ID", "Name", "Address", "Contact Information"], "Primary key": ["ID"], "Foreign key": {}}, "Electricity Usage Record": {"Attributes": ["Operator ID", "User ID", "Record Time", "Electricity Consumption"], "Primary key": ["Operator ID", "User ID", "Record Time"], "Foreign key": {"Operator ID": {"Operator": "ID"}, "User ID": {"User": "ID"}}}}}
{"id": "67552f0a13602ec03b41a823", "question": "The gas company needs to manage the billing information of users. Users have a User ID, name, address, and contact information. Each billing record includes a Bill ID, Bill Date, Bill Amount, User ID, and Operator ID. Operators have an Operator ID, name, department, and contact information.", "answer": {"Operator": {"Attributes": ["Operator ID", "Name", "Department", "Contact Information"], "Primary key": ["Operator ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Address", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Billing Record": {"Attributes": ["Bill Date", "Bill Amount", "Operator ID", "User ID"], "Primary key": ["User ID", "Bill Date"], "Foreign key": {"Operator ID": {"Operator": "Operator ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a824", "question": "Equipment Repair Management\n\nA water treatment company needs to manage the maintenance of equipment as a sub-business. Each piece of equipment has an ID, name, model, installation location, and installation date. Each maintenance record includes the maintenance date, maintenance content, maintainer ID, and equipment ID. Each maintainer has an ID, name, department, and contact information.", "answer": {"Equipment": {"Attributes": ["ID", "Name", "Model", "Installation Location", "Installation Date"], "Primary key": ["ID"], "Foreign key": {}}, "Maintainer": {"Attributes": ["ID", "Name", "Department", "Contact Information"], "Primary key": ["ID"], "Foreign key": {}}, "Maintenance Record": {"Attributes": ["Maintainer ID", "Equipment ID", "Maintenance Date", "Maintenance Content"], "Primary key": ["Maintainer ID", "Equipment ID"], "Foreign key": {"Maintainer ID": {"Maintainer": "ID"}, "Equipment ID": {"Equipment": "ID"}}}}}
{"id": "67552f0a13602ec03b41a825", "question": "Equipment Inspection Management System Functionality:\n\nThe primary function of the Equipment Inspection Management System is to manage the inspection records of equipment, ensuring normal operation and timely maintenance of the equipment. The system supports the entry of basic equipment information, management of inspection personnel, and records the specific data of each equipment inspection. Below is the detailed business description:\n\nEquipment Management:\n\nThe system is capable of managing the basic information of the equipment, including the equipment name, model, installation location, and installation date. Equipment is uniquely identified by an equipment ID, ensuring the completeness and traceability of equipment information.\n\nInspection Personnel Management:\n\nThe system can record the basic information of inspection personnel, including name, department, and contact information. Managing inspection personnel helps ensure that each piece of equipment has designated personnel responsible for inspection, and the related inspection records can be tracked via the inspection personnel ID.\n\nInspection Record Tracking:\n\nThe system is able to record each inspection of the equipment, including detailed information such as the inspection personnel, inspection date, and inspection content. Each inspection record is associated with an equipment ID, inspection personnel ID, and inspection date to effectively track and manage the status of the equipment. These records allow management personnel to timely understand the inspection status of equipment, identify potential problems, and take measures.\n\nThe system ensures timely inspections of equipment by comprehensively managing equipment information, inspection personnel, and inspection records, reducing the likelihood of malfunctions, and enhancing the efficiency and safety of equipment management.\n", "answer": {"Equipment": {"Attributes": ["Equipment ID", "Equipment Name", "Equipment Model", "Installation Location", "Installation Date"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Inspection Personnel": {"Attributes": ["Inspection Personnel ID", "Name", "Department", "Contact Information"], "Primary key": ["Inspection Personnel ID"], "Foreign key": {}}, "Inspection Record": {"Attributes": ["Equipment ID", "Inspection Personnel ID", "Inspection Date", "Inspection Content"], "Primary key": ["Equipment ID", "Inspection Personnel ID", "Inspection Date"], "Foreign key": {"Inspection Personnel ID": {"Inspection Personnel": "Inspection Personnel ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}}}
{"id": "67552f0a13602ec03b41a826", "question": "The heating company needs to manage fault occurrences during the heat supply process. Each fault has a description, occurrence date, resolution date, and handler ID. The handler has an ID, name, department, and contact information. Each fault record must be associated with the affected user ID. The user needs to record a name, address, and contact information.", "answer": {"Handler": {"Attributes": ["Handler ID", "Name", "Department", "Contact Information"], "Primary key": ["Handler ID"], "Foreign key": {}}, "Fault Handling": {"Attributes": ["Fault ID", "Description", "Occurrence Date", "Resolution Date", "Handler ID", "Affected User ID"], "Primary key": ["Fault ID"], "Foreign key": {"Handler ID": {"Handler": "Handler ID"}}}}}
{"id": "67552f0a13602ec03b41a827", "question": "Research institutions conduct multiple scientific projects, each involving multiple researchers, with each researcher participating in only one project.\n  Each project has a project ID, name, start date, end date, project leader, and budget. Researchers have an employee number, name, date of birth, gender, phone number, and position.\n  Each project's research results must be recorded with a result ID, name, publication date, and researcher (1 person).\n  The usage of project funds needs to be recorded with a fund ID, project ID, purpose, amount, and usage date.\n", "answer": {"Project": {"Attributes": ["Project ID", "Name", "Start Date", "End Date", "Project Leader", "Budget"], "Primary key": ["Project ID"], "Foreign key": {}}, "Researcher": {"Attributes": ["Employee Number", "Name", "Date of Birth", "Gender", "Phone Number", "Position", "Project ID"], "Primary key": ["Employee Number"], "Foreign key": {"Project ID": {"Project": "Project ID"}}}, "Research Result": {"Attributes": ["Result ID", "Name", "Publication Date", "Researcher Employee Number"], "Primary key": ["Result ID"], "Foreign key": {"Researcher Employee Number": {"Researcher": "Employee Number"}}}, "Fund Usage": {"Attributes": ["Fund ID", "Project ID", "Purpose", "Amount", "Usage Date"], "Primary key": ["Fund ID"], "Foreign key": {"Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a829", "question": "The patent management department manages multiple patents, and each patent is applied for by multiple inventors. A patent has a patent number, name, application date, and status. An inventor has a work number, name, date of birth, gender, telephone number, and position. Patent application records need to record application number, patent number, inventor, and application date.\n\n", "answer": {"Patent": {"Attributes": ["Patent Number", "Patent Name", "Application Date", "Status"], "Primary key": ["Patent Number"], "Foreign key": {}}, "Inventor": {"Attributes": ["Inventor Number", "Name", "Date of Birth", "Gender", "Phone", "Position"], "Primary key": ["Inventor Number"], "Foreign key": {}}, "Patent application record": {"Attributes": ["patent number", "Invent artificial number", "Application date"], "Primary key": ["Patent Number", "Inventor Number", "Application Date"], "Foreign key": {"Inventor Number": {"Inventor": "Inventor Number"}, "Patent Number": {"Patent": "Patent Number"}}}}}
{"id": "67552f0a13602ec03b41a82a", "question": "The Technical Document Management Department manages multiple technical documents, and each document is written by multiple authors. A document has a Document ID, Title, Creation Date, and Version Number. An author has an ID, Name, Date of Birth, Gender, Phone Number, and Position. The document version record needs to record the Modification ID, Document ID, Version Number, Modification Date, Modifying Author, and Modification Content.", "answer": {"Document": {"Attributes": ["Document ID", "Title", "Creation Date", "Version Number"], "Primary key": ["Document ID"], "Foreign key": {}}, "Author": {"Attributes": ["Name", "Date of Birth", "Gender", "Phone Number", "Position", "Author ID"], "Primary key": ["Author ID"], "Foreign key": {}}, "Modification Record": {"Attributes": ["Document ID", "Version Number", "Modification Date", "Modification Content", "Modifying Author ID"], "Primary key": ["Document ID", "Modification Date", "Modifying Author ID"], "Foreign key": {"Document ID": {"Document": "Document ID"}, "Modifying Author ID": {"Author": "Author ID"}}}}}
{"id": "67552f0a13602ec03b41a82b", "question": "The business requirements description for the scientific and technological achievement transformation database is as follows: The department responsible for the transformation of scientific and technological achievements manages multiple achievements, each of which can be transformed into several products. A scientific and technological achievement is characterized by an achievement number, name, research and development date, and technical field. A product is characterized by a product number, name, model, barcode, price, and transformation date. The achievement transformation record needs to document the achievement number, product number, and transformation date.", "answer": {"Scientific and Technological Achievement": {"Attributes": ["Achievement Number", "Name", "Research and Development Date", "Technical Field"], "Primary key": ["Achievement Number"], "Foreign key": {}}, "Product": {"Attributes": ["Product Number", "Name", "Model", "Barcode", "Price", "Transformation Date"], "Primary key": ["Product Number"], "Foreign key": {}}, "Achievement Transformation": {"Attributes": ["Achievement Number", "Product Number", "Transformation Date"], "Primary key": ["Achievement Number", "Product Number"], "Foreign key": {"Product Number": {"Product": "Product Number"}, "Achievement Number": {"Scientific and Technological Achievement": "Achievement Number"}}}}}
{"id": "67552f0a13602ec03b41a830", "question": "The science and technology project review department manages multiple project review processes, and each project has multiple review experts involved.\nProjects have project numbers, names, application dates, and application units.\nReview experts have expert numbers, names, units, and titles.\nProject review records need to record project numbers, expert numbers, review dates, and review opinions.", "answer": {"Project": {"Attributes": ["Project number", "Project name", "Application date", "Application unit"], "Primary key": ["Project number"], "Foreign key": {}}, "Expert": {"Attributes": ["Expert number", "Name", "Unit", "Title"], "Primary key": ["Expert number"], "Foreign key": {}}, "Project Review Record": {"Attributes": ["Project number", "Expert number", "Review date", "Review opinion"], "Primary key": ["Project number", "Expert number"], "Foreign key": {"schema_0": {"Project": "Project number"}, "schema_1": {"Expert": "Expert number"}}}}}
{"id": "67552f0a13602ec03b41a832", "question": "A business services company undertakes multiple projects, each completed by several employees. Projects have a Project ID, Name, Start Time, End Time, and Budget. Employees have an Employee ID, Name, Gender, Phone Number, and Position. The company needs to record each project's actual expenses and employee work hours for project performance assessment.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Phone Number", "Position"], "Primary key": ["Employee ID"], "Foreign key": {}}, "": {"Attributes": ["Project ID", "Project Name", "Start Time", "End Time", "Budget", "Actual Expenses"], "Primary key": ["Project ID"], "Foreign key": {}}, "Employee Participation": {"Attributes": ["Employee ID", "Project ID", "Employee Work Hours"], "Primary key": ["Employee ID", "Project ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Project ID": {"": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a833", "question": "Description of customer management business requirements of a property management company:\n\nA property management company manages multiple communities, each of which has multiple owners. The owner has a name, phone number, and house number. The property management company needs to record the owner's maintenance application, and each maintenance application needs to record the application time, maintenance content, and maintenance cost. The company needs to count the maintenance costs of each community for performance appraisal.", "answer": {"Community": {"Attributes": ["Community ID", "Community Name", "Address", "Manager"], "Primary key": ["Community ID"], "Foreign key": {}}, "Owner": {"Attributes": ["Owner ID", "Name", "Phone", "House Number", "Community ID"], "Primary key": ["Owner ID"], "Foreign key": {"Community ID": {"Community": "Community ID"}, "House ID": {"House": "House ID"}}}, "House": {"Attributes": ["House ID", "House Name", "Location"], "Primary key": ["House ID"], "Foreign key": {}}, "Repair Application Record": {"Attributes": ["Owner ID", "House ID", "Application Time", "Repair Content", "Repair Cost"], "Primary key": ["Owner ID", "House ID"], "Foreign key": {"Owner ID": {"Owner": "Owner ID"}, "House ID": {"House": "House ID"}}}}}
{"id": "67552f0a13602ec03b41a834", "question": "A rental company needs to manage customer credit records. Customers have name, phone number, and credit score. Each rental needs to record rental time, return time, and rental fee. The company needs to track changes in customer credit, with each record including change time, change reason, old credit value, and new credit value, to facilitate credit assessment and performance evaluation.", "answer": {"Customer": {"Attributes": ["Name", "Phone", "Credit score", "Customer ID"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Rental record": {"Attributes": ["Rental time", "Return time", "Rental fee", "Record ID", "Customer ID"], "Primary key": ["Record ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Credit change record": {"Attributes": ["Record ID", "Change time", "Change reason", "Old credit value", "New credit value", "Customer ID"], "Primary key": ["Record ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a837", "question": "  The company provides customer service and has multiple customers. Each customer has a unique Customer ID, Name, Phone Number, and Email Address. The company offers various services to customers. Each service has a Service ID, Service Date, Description, and Fee, and is associated with a customer. After each service, the customer can provide satisfaction feedback, including a Rating and Feedback Comments.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone Number", "Email Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Service": {"Attributes": ["Service ID", "Service Date", "Description", "Fee", "Customer ID"], "Primary key": ["Service ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Feedback": {"Attributes": ["Customer ID", "Service ID", "Rating", "Feedback Comments"], "Primary key": ["Customer ID", "Service ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Service ID": {"Service": "Service ID"}}}}}
{"id": "67552f0a13602ec03b41a839", "question": "A rental management system, whose main function is to manage customer information, inventory of rental items and rental records. The system supports the entry and management of customer information, the management of rental items, and records the detailed data of each rental transaction (such as rental time, rental fee, etc.). The following is a specific business description:\nCustomer management: The system can record the basic information of customers, including name, phone number, age, gender, address and email address. The customer's historical rental times and total rental fees can help the system understand the customer's rental behavior and preferences, so as to provide personalized services.\nRental item management: The system can manage the basic information of various rental items, such as item name, category, rental fee, total inventory and remaining quantity. The system will update inventory data in real time to ensure the availability of rental items and effectively avoid overselling inventory.\nRental record tracking: The system can record the detailed information of each rental transaction, including customer ID, rental item ID, rental time period, number of rental items and payment fees. Through rental records, the system can track each customer's rental history, rental fees, and the use of rental items, providing data support for subsequent analysis and operational decisions.\nThe system is designed to manage the relationship between customers and rented items, ensure that the process of renting items is efficient and traceable, and record various data during the rental process for easy analysis and management.", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone", "Customer Age", "Customer Gender", "Customer Address", "Customer Email"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Rental Item": {"Attributes": ["Rental Item ID", "Item Name", "Item Category", "Single Rental Fee", "Total Inventory", "Remaining Inventory"], "Primary key": ["Rental Item ID"], "Foreign key": {}}, "Rental record": {"Attributes": ["Customer ID", "Rental item ID", "Rental start time", "Rental end time", "Number of rented items", "Rental payment fee"], "Primary key": ["Customer ID", "Rental Item ID", "Rental Start Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Rental Item ID": {"Rental Item": "Rental item ID"}}}}}
{"id": "67552f0a13602ec03b41a83e", "question": " The primary function of the mine and processing plant production management system is to manage the production situation of the mine, track the extraction and processing of the ore, and ensure the efficiency and traceability of the entire mineral resource extraction and processing flow. The system supports the entry of basic information for mines and processing plants, employee information management, and records data such as the extraction and processing quantities and costs of the ore. The following is a specific business description:\n  \n  Mine Management:\n  The system can manage information for multiple mines, including mine name, location, and the person in charge. Each mine is managed by a person in charge, ensuring that the management and production activities of the mine are effectively supervised and executed.\n  \n  Ore Management:\n  The system can record information for different types of ores, including the ore name and characteristics. As an important resource in mine production, the management of ore information is crucial for production scheduling and subsequent processing.\n  \n  Processing Plant Management:\n  The system can manage basic information for processing plants, including the processing plant name, location, and the person in charge. Each processing plant is managed by a person in charge, ensuring that the processing activities are carried out smoothly and meet quality standards.\n  \n  Ore Output Management:\n  The system can record the types and quantities of ore produced by each mine at specific times. By associating with ore information, it can track the source of the ore and its extraction amount, providing data support for subsequent processing stages.\n  \n  Ore Processing Management:\n  The system can record the processing conditions of each processing plant for the ore, including processing date, processing quantity, and processing cost. Through such records, the processing progress and cost of each batch of ore can be tracked, providing basic data for cost control and output analysis.\n  \n  Employee Management:\n  The system can record all employee information, including name, phone number, gender, age, and contact information. The management of employee information is crucial for the production scheduling and responsibility allocation of the mines and processing plants, ensuring that each task is responsibly handled.\n  \n  Through this system, the production of mines, the extraction and processing of ore, and the management of employees can all be comprehensively monitored and managed. The system provides data support for various stages of mine production, helping decision-makers optimize resource allocation, enhance production efficiency, and ensure the transparency and traceability of the entire production process.\n  ", "answer": {"Mine": {"Attributes": ["Mine ID", "Name", "Location", "Person In Charge ID"], "Primary key": ["Mine ID"], "Foreign key": {"Person In Charge ID": {"Working Employees": "Employee ID"}}}, "Ore": {"Attributes": ["Ore ID", "Name", "Characteristics"], "Primary key": ["Ore ID"], "Foreign key": {}}, "Processing Plant": {"Attributes": ["Processing Plant ID", "Name", "Location", "Person In Charge ID"], "Primary key": ["Processing Plant ID"], "Foreign key": {"Person In Charge ID": {"Working Employees": "Employee ID"}}}, "Output Ore": {"Attributes": ["Mine ID", "Ore ID", "Output Time", "Output Quantity"], "Primary key": ["Mine ID", "Ore ID", "Output Time"], "Foreign key": {"Mine ID": {"Mine": "Mine ID"}, "Ore ID": {"Ore": "Ore ID"}}}, "Processing Plant Processing Ore": {"Attributes": ["Ore ID", "Processing Plant ID", "Processing Date", "Processing Quantity", "Processing Cost"], "Primary key": ["Ore ID", "Processing Plant ID", "Processing Date"], "Foreign key": {"Processing Plant ID": {"Processing Plant": "Processing Plant ID"}, "Ore ID": {"Ore": "Ore ID"}}}, "Working Employees": {"Attributes": ["Employee ID", "Name", "Phone", "Gender", "Email", "Age"], "Primary key": ["Employee ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a83f", "question": "Business requirement description: A non-metallic mining company has multiple mines, and each mine has multiple safety officers. The safety officer has information such as safety officer number, name, gender, telephone number, and position. The mine has information such as mine number, name, location, and person in charge. During each safety inspection, it is necessary to record the inspection date, inspection content, inspection results, and inspector information. The information system needs to be able to perform statistical analysis on the safety inspection situation of the mine.", "answer": {"Mine": {"Attributes": ["Mine number", "Mine name", "Mine location", "Person in charge"], "Primary key": ["Mine number"], "Foreign key": {"Person in charge": {"Safety officer": "Safety officer number"}}}, "Safety officer": {"Attributes": ["Safety officer number", "Name", "Gender", "Telephone", "Position", "Mine number"], "Primary key": ["Safety officer number"], "Foreign key": {"Mine number": {"Mine": "Mine number"}}}, "safety inspection record": {"Attributes": ["inspection date", "inspection content", "inspection results", "inspector", "mine number"], "Primary key": ["Inspection date", "Mine number"], "Foreign key": {"Mine number": {"Mine": "Mine number"}}}}}
{"id": "67552f0a13602ec03b41a842", "question": "An oil company owns multiple oil and gas fields, each with multiple pipelines. The pipelines have information such as pipeline ID, starting point, ending point, length, and maintenance records. Oil and gas fields have information including field ID, name, location, and person in charge. For each pipeline maintenance, the system needs to record maintenance date, maintenance content, maintenance personnel, and maintenance cost. This information system should be able to perform statistical analysis on pipeline maintenance.\n", "answer": {"Oil and gas field": {"Attributes": ["Field ID", "Name", "Location", "Person in charge"], "Primary key": ["Field ID"], "Foreign key": {}}, "Pipeline": {"Attributes": ["Pipeline ID", "Starting point", "Ending point", "Length"], "Primary key": ["Pipeline ID"], "Foreign key": {}}, "Maintenance record": {"Attributes": ["Maintenance date", "Maintenance content", "Maintenance personnel", "Maintenance cost", "Maintenance ID", "Pipeline ID"], "Primary key": ["Maintenance ID"], "Foreign key": {"Pipeline ID": {"Pipeline": "Pipeline ID"}}}}}
{"id": "67552f0a13602ec03b41a847", "question": "The insurance company has multiple insurance agents, each with a unique Agent ID, Name, Hire Date, and Contact Phone Number. An agent can handle insurance business for multiple customers. Each customer has a Customer ID, Name, ID Card Number, and Contact Phone Number. Each insurance policy has a unique Policy Number, Insurance Type (Life, Health, Property), Insured Amount, Insurance Term, and Premium. Each premium payment requires recording the Payment Amount, Payment Time, and Payment Method. In addition, the insurance company needs to keep track of each customer's Claim Records.", "answer": {"Insurance Agent": {"Attributes": ["Agent ID", "Name", "Hire Date", "Contact Phone Number"], "Primary key": ["Agent ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "ID Card Number", "Contact Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Insurance Policy": {"Attributes": ["Policy ID", "Agent ID", "Customer ID", "Insurance Type", "Insured Amount", "Insurance Term", "Premium"], "Primary key": ["Policy ID"], "Foreign key": {"Agent ID": {"Insurance Agent": "Agent ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Payment Record": {"Attributes": ["Policy ID", "Payment Amount", "Payment Time", "Payment Method"], "Primary key": ["Payment Time", "Policy ID"], "Foreign key": {"Policy ID": {"Payment Record": "Policy ID"}}}, "Claim Record": {"Attributes": ["Policy ID", "Claim Amount", "Claim Time"], "Primary key": ["Policy ID", "Claim Time"], "Foreign key": {"Policy ID": {"Payment Record": "Policy ID"}}}}}
{"id": "67552f0a13602ec03b41a84b", "question": "The health insurance company has multiple insurance agents, each with a unique Agent ID, Name, Hire Date, and Contact Phone. An agent can handle health insurance business for multiple customers. Each customer has a Customer ID, Name, ID Card Number, and Contact Phone. Each insurance policy has a unique Policy ID, Insurance Type (Inpatient, Outpatient, Critical Illness), Insured Amount, Insurance Term, and Premium. Each payment requires recording the Payment Amount, Payment Date, and Payment Method. In addition, the insurance company needs to record each customer's Medical Records and Claim Records.", "answer": {"Insurance Agent": {"Attributes": ["Agent ID", "Name", "Hire Date", "Contact Phone"], "Primary key": ["Agent ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "ID Card Number", "Contact Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Insurance Policy": {"Attributes": ["Policy ID", "Agent ID", "Customer ID", "Insurance Type", "Insured Amount", "Insurance Term", "Premium"], "Primary key": ["Policy ID"], "Foreign key": {"Agent ID": {"Insurance Agent": "Agent ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Payment Record": {"Attributes": ["Policy ID", "Payment Amount", "Payment Date", "Payment Method"], "Primary key": ["Policy ID"], "Foreign key": {"Policy ID": {"Insurance Policy": "Policy ID"}}}, "Claim Record": {"Attributes": ["Policy ID", "Claim Amount", "Claim Date"], "Primary key": ["Policy ID"], "Foreign key": {"Policy ID": {"Payment Record": "Policy ID"}}}, "Medical Record": {"Attributes": ["Customer ID", "Visit Time", "Visit Cost"], "Primary key": ["Customer ID", "Visit Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a84e", "question": "A financial analysis company manages multiple analysts, each with a unique Analyst ID, name, date of hire, and contact number. The company tracks information on multiple stocks, each having a unique stock code, stock name, and current price. Analysts can analyze multiple stocks, with each analysis recording the date of analysis, results, and reasoning. Additionally, the company maintains historical price data for each stock, recording closing price, opening price, highest price, lowest price, and trading volume by date.", "answer": {"Analyst": {"Attributes": ["Analyst ID", "Name", "Date of Hire", "Contact Number"], "Primary key": ["Analyst ID"], "Foreign key": {}}, "Stock": {"Attributes": ["Stock Code", "Stock Name", "Current Price"], "Primary key": ["Stock Code"], "Foreign key": {}}, "Analysis Record": {"Attributes": ["Date of Analysis", "Analysis Result", "Analysis Reasoning", "Analyst ID", "Stock Code"], "Primary key": ["Analyst ID", "Stock Code", "Date of Analysis"], "Foreign key": {"Analyst ID": {"Analyst": "Analyst ID"}, "Stock Code": {"Stock": "Stock Code"}}}, "Stock Historical Price": {"Attributes": ["Stock Code", "Date", "Closing Price", "Opening Price", "Highest Price", "Lowest Price", "Trading Volume"], "Primary key": ["Stock Code", "Date"], "Foreign key": {"Stock Code": {"Stock": "Stock Code"}}}}}
{"id": "67552f0a13602ec03b41a853", "question": "This system is a bar management system, which aims to record the information of beer manufacturers, beer types, bars and drinkers, and the relationship between them. The beer manufacturer information includes the manufacturer number, manufacturer name and manufacturer country. The beer type information includes the beer number, beer name, manufacturer number and beer price. The bar information includes the bar number, bar name, bar address and bar phone number. The drinker information includes the drinker number, drinker name, drinker gender, drinker age and drinker phone number. The relationship between beer manufacturers and beer types is that beer manufacturers produce beer types, and beer types are sold in bars. Sales records include sales date, sales quantity and sales price.", "answer": {"Beer Manufacturer": {"Attributes": ["Manufacturer Number", "Manufacturer Name", "Country"], "Primary key": ["Manufacturer Number"], "Foreign key": {}}, "Beer": {"Attributes": ["Beer Number", "Beer Name", "Manufacturer Number", "Beer Price"], "Primary key": ["Beer Number"], "Foreign key": {"Manufacturer Number": {"Beer Manufacturer": "Manufacturer Number"}}}, "Bar": {"Attributes": ["Bar Number", "Bar Name", "Address", "License", "Phone"], "Primary key": ["Bar Number"], "Foreign key": {}}, "Drinker": {"Attributes": ["Drinker Number", "Name", "Address", "Phone", "Gender", "Age"], "Primary key": ["Drinker Number"], "Foreign key": {}}, "Sales Record": {"Attributes": ["Bar Number", "Beer Number", "Price", "Sales Date"], "Primary key": ["Bar Number", "Beer Number"], "Foreign key": {"Bar Number": {"Bar": "Bar Number"}, "Beer Number": {"Beer": "Beer Number"}}}}}
{"id": "67552f0a13602ec03b41a85b", "question": "\"The online shopping system needs to manage users, products, orders, announcements, and access control. The system must record each user's membership number, ID, name, password, email, phone number, postal code, and address details; product information must include product ID, name, price, category ID, manufacturer, and product image URL; the system supports order processing, documenting each order's purchase ID, product ID, membership number, quantity, purchase date, and delivery status. The bulletin board feature must record the announcement's number, title, content, registration date, and publisher ID, used for publishing and managing announcements, allowing users to view announcements.\"", "answer": {"User": {"Attributes": ["ID", "Membership Number", "Name", "Password", "Email", "Phone Number", "Postal Code", "Address Details"], "Primary key": ["ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Price", "Category", "Manufacturer", "Product Image URL"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "User ID", "Purchase Date", "Delivery Status"], "Primary key": ["Order ID"], "Foreign key": {"User ID": {"User": "ID"}}}, "Announcement": {"Attributes": ["Announcement Number", "Title", "Content", "Registration Date", "Publisher ID"], "Primary key": ["Announcement Number"], "Foreign key": {"Publisher ID": {"User": "ID"}}}, "Order Detail": {"Attributes": ["Order ID", "Product ID", "Purchase Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a85c", "question": "The article management system manages multiple articles. Each article has an article ID, article title, article content, creation time, total number of words, article reading volume, article like volume, article collection volume, article comment volume, the time of the last modification and save, and the author ID of the last modification and save. The system also manages multiple authors. Each author has an author ID, name, gender, phone number, email address, and introduction. Each article can be created by multiple authors, and the author order, responsible part, and role of each author are recorded. Authors can modify articles, and each modification records the modification start time, modification save time, and modification notes. The system ensures the accuracy of article content and the transparency of author contributions by recording article creation and modification information.", "answer": {"Article": {"Attributes": ["Article ID", "Article title", "Article content", "Creation time", "Total number of words in the article", "Article reading volume", "Article like volume", "Article collection volume", "Article comment volume", "Last modification and save time", "Last modification and save author ID"], "Primary key": ["Article ID"], "Foreign key": {"Last modification and save author ID": {"Author": "Author ID"}}}, "Author": {"Attributes": ["Author ID", "Name", "Gender", "Phone", "Email", "Introduction"], "Primary key": ["Author ID"], "Foreign key": {}}, "Author creates article": {"Attributes": ["Article ID", "Author ID", "Author order", "Author responsible for part", "Author role"], "Primary key": ["Article ID", "Author ID"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "Author ID": {"Author": "Author ID"}}}, "Author modifies article": {"Attributes": ["Article ID", "Author ID", "Modify start time", "Modify save time", "Modify notes"], "Primary key": ["Article ID", "Author ID", "Modify save time"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "Author ID": {"Author": "Author ID"}}}}}
{"id": "67552f0a13602ec03b41a85f", "question": "A system for managing stock and fund investments, especially for fixed investment (regular investment). The main functions of the system include:\n1. Stock and fund management: record the basic information of each stock or fund, such as code, type, market, owner, etc. Manage the holdings of each stock or fund, including total investment amount, holding shares, last trading date, etc. Maintain the trading configuration of each stock or fund, such as trading fees, etc.\n2. Trading order management: record the detailed information of each trading order, including order type (buy, sell, compensation), creation time, trading date, transaction amount, transaction quantity, transaction service fee, etc. Ensure the uniqueness of each order through the external order ID (`out_id`). Manage the transaction status of the order and distinguish whether the order has been settled.\n3. Data query and statistics: query the holdings and historical transaction records of a specific stock or fund. Statistics on the total transaction amount, transaction quantity and other information within a certain period of time. Filter and summarize data according to different markets, categories and subcategories.", "answer": {"Stock": {"Attributes": ["Stock code", "Type", "Market", "Owner", "Total investment amount", "Holding shares", "Last transaction time", "Transaction status"], "Primary key": ["Stock code"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order type", "Creation time", "Transaction date", "Transaction amount", "Transaction quantity", "Transaction service fee", "Transaction status"], "Primary key": ["Order ID"], "Foreign key": {}}, "Stock Order": {"Attributes": ["Order ID", "Stock Code"], "Primary key": ["Order ID", "Stock Code"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Stock code": {"Stock": "Stock code"}}}}}
{"id": "67552f0a13602ec03b41a862", "question": "The operational management of a certain automotive repair company is as follows: The company needs to manage customer information, which includes the customer's name and phone number. Customers can contact the repair service by phone. The company also manages the information of repair workers, including their names and addresses. During the repair process, parts are used, and the information about these parts includes serial number, description, price, and supplier, as well as the management of the inventory quantity of the parts. Each repair task has detailed information, including the involved vehicle model, task status, customer information, responsible repair worker, task start date, and completion date. The task status can be \"pending,\" \"in progress,\" or \"completed.\" Each repair task may require multiple parts, so it is necessary to record the parts needed for each task and their quantities.", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Repair Worker": {"Attributes": ["Repair Worker ID", "Name", "Address"], "Primary key": ["Repair Worker ID"], "Foreign key": {}}, "Part": {"Attributes": ["Part Serial Number", "Description", "Price", "Supplier", "Inventory Quantity"], "Primary key": ["Part Serial Number"], "Foreign key": {}}, "Repair Task": {"Attributes": ["Repair Task ID", "Vehicle Model", "Task Status", "Customer ID", "Task Start Date", "Task Completion Date"], "Primary key": ["Repair Task ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Repair Worker Task": {"Attributes": ["Repair Worker ID", "Repair Task ID"], "Primary key": ["Repair Worker ID", "Repair Task ID"], "Foreign key": {"Repair Task ID": {"Repair Task": "Repair Task ID"}, "Repair Worker ID": {"Repair Worker": "Repair Worker ID"}}}, "Part Usage": {"Attributes": ["Part Serial Number", "Repair Task ID", "Usage Quantity"], "Primary key": ["Part Serial Number", "Repair Task ID"], "Foreign key": {"Repair Task ID": {"Repair Task": "Repair Task ID"}, "Part Serial Number": {"Part": "Part Serial Number"}}}}}
{"id": "67552f0a13602ec03b41a864", "question": "The operational details of a certain API management system are as follows: The system contains multiple user groups, with user group information including User Group ID, Name, and Description. The user information in the system includes User ID, Username, Password, Email, One-time Password, Password Reset Key, Associated User Group, Activation Status, User Creation Time, Creator, Last Updated Time, and Updater. Each user is assigned an API key, with API key information including Key ID, Associated User ID, Key Content, Permission Level, Whether to Ignore Call Limits, Whether it is a Private Key, Allowed IP Address List, and Key Creation Time. The system records all API call logs, with log information including Log ID, Called API Resource Path, HTTP Request Method, Request Parameters, Used API Key, Client's IP Address, Call Time, Response Time, Authorization Status of the Call, and API Response Status Code. When users call APIs using API keys, the system performs authorization verification based on the key\u2019s permission level and IP address restrictions, and records detailed information of each call for subsequent analysis and auditing.", "answer": {"user group": {"Attributes": ["user group id", "name", "description"], "Primary key": ["user group id"], "Foreign key": {}}, "user": {"Attributes": ["user id", "username", "password", "email", "one-time password", "password reset key", "user group id", "activation status", "user allocation time", "creator", "last updated time", "updater"], "Primary key": ["user id"], "Foreign key": {"user group id": {"user group": "user group id"}}}, "API key": {"Attributes": ["key id", "user id", "key content", "permission level", "whether to ignore call limits", "whether it is a private key", "allowed ip address list", "key creation time"], "Primary key": ["key id"], "Foreign key": {"user id": {"user": "user id"}}}, "API call log": {"Attributes": ["log id", "called api resource path", "http request method", "request parameters", "used api key id", "client ip address", "call time", "response time", "authorization status of the call", "api response status code"], "Primary key": ["log id"], "Foreign key": {"used api key id": {"API key": "key id"}}}}}
{"id": "67552f0a13602ec03b41a865", "question": "This database is intended to record information related to political parties, candidates, voters, and voting activities. The system will support the following operations:\nPolitical Parties: Record the basic information about political parties, including name and description. The system should support the ability to add, delete, and modify political party information.\nCandidates: Record basic information about candidates, including their name, the political party they belong to, and whether they have industry connections. The system should allow adding, deleting, and modifying candidate information.\nVoters: Record basic information about voters, including their name, email, and the creation time of their registration. The system should support adding, deleting, and modifying voter information.\nVoting Records: Record each voting activity, including the voter ID, candidate ID, and the time of voting. The system ensures that each voter can only vote once.", "answer": {"Political Party": {"Attributes": ["Party ID", "Party Name", "Party Description"], "Primary key": ["Party ID"], "Foreign key": {}}, "Candidate": {"Attributes": ["Candidate ID", "Name", "Belonging Party ID", "Industry Connection"], "Primary key": ["Candidate ID"], "Foreign key": {"Belonging Party ID": {"Political Party": "Party ID"}}}, "Voter": {"Attributes": ["Voter ID", "Name", "Email", "Creation Time", "Voted Candidate ID", "Vote Time"], "Primary key": ["Voter ID"], "Foreign key": {"Candidate ID": {"Candidate": "Candidate ID"}}}}}
{"id": "67552f0a13602ec03b41a86e", "question": "The business requirement description for the blog management system: A company plans to develop a blog or content management system to manage articles, authors, and category information. The system shall support the creation, editing, and deletion of articles, recording the Article ID, Name, Author ID, and Category ID. It shall associate author and category information through the Author ID and Category ID fields respectively, and support querying articles by author or category. An article may belong to multiple categories. The system shall record the category name and assign it a Category ID. The system shall also record basic information about authors, including the Author ID, Name, and Email.", "answer": {"Author": {"Attributes": ["Author ID", "Name", "Email"], "Primary key": ["Author ID"], "Foreign key": {}}, "Category": {"Attributes": ["Category ID", "Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Name", "Author ID", "Category ID"], "Primary key": ["Article ID"], "Foreign key": {"Author ID": {"Author": "Author ID"}, "Category ID": {"Category": "Category ID"}}}}}
{"id": "67552f0a13602ec03b41a86f", "question": "The land project management system shall meet the following business requirements:\n\nThe land management department manages multiple land parcels. Each land parcel has a Land ID, Land Location, and Total Land Area. \n\nThe department manages multiple projects. Each project has a Project ID, Project Name, Project Location, Purpose, and Person in Charge.\n\nEach land usage record shall capture the relationship between the land and project, including Used Land Area, Usage Duration, Current Status, Record Time, and Recording Personnel. \n\nBy recording the usage of land by projects, the system shall ensure reasonable allocation and effective management of land resources. \n\nA project can use multiple land parcels, and a land parcel can be used by multiple projects successively over time.", "answer": {"Land": {"Attributes": ["Land ID", "Land Location", "Total Land Area"], "Primary key": ["Land ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Project Location", "Purpose", "Person in Charge"], "Primary key": ["Project ID"], "Foreign key": {}}, "Land Usage Record": {"Attributes": ["Land ID", "Project ID", "Used Land Area", "Usage Duration", "Current Status", "Record Time", "Recording Personnel"], "Primary key": ["Land ID", "Project ID", "Record Time"], "Foreign key": {"Land ID": {"Land": "Land ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a870", "question": "The system primarily involves three entities: User (User ID, Username, Email, Password, Profile, Avatar), Recipe (Recipe ID, Recipe Name, Ingredients, Steps, Total Time, Portion, Spicy Level, Bitter Level, Sweet Level, Meaty Level, Salty Level, Sour Level, Rating, Number of Ratings, Large Image Filename, Calories, Creator ID, Small Image Filename), and Blog (Blog ID, Author User ID, Blog Title, Publication Time, Blog Summary). System functionalities include user registration, login, personal information management, recipe publishing, collecting, rating, as well as blog publishing and viewing. Additionally, users can create recipes, collect recipes, and publish blogs, with each recipe and blog being managed by users. The system manages relationships between users and recipes or blogs through creation, collection of recipes, and blog publishing.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Email", "Password", "Profile", "Avatar"], "Primary key": ["User ID"], "Foreign key": {}}, "Recipe": {"Attributes": ["Recipe ID", "Recipe Name", "Ingredients", "Steps", "Total Time", "Portion", "Spicy Level", "Bitter Level", "Sweet Level", "Meaty Level", "Salty Level", "Sour Level", "Rating", "Number of Ratings", "Large Image Filename", "Calories", "Creator ID", "Small Image Filename"], "Primary key": ["Recipe ID"], "Foreign key": {"Creator ID": {"User": "User ID"}}}, "Collected Recipe": {"Attributes": ["User ID", "Recipe ID", "Collection Time"], "Primary key": ["User ID", "Recipe ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Recipe ID": {"Recipe": "Recipe ID"}}}, "Blog": {"Attributes": ["Blog ID", "Author User ID", "Blog Title", "Publication Time", "Blog Summary"], "Primary key": ["Blog ID"], "Foreign key": {"Author User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a878", "question": "Supply Chain Management System\nThe main function of the supply chain management system is to manage procurement, material supply, and production processes between suppliers and companies. The system supports the input of supplier and company information, material management, procurement application handling, and records detailed data for each material production. The specific business description is as follows:\n\nSupplier Management:\nThe system can manage the basic information of multiple suppliers, including supplier name, address, phone number, fax number, tax ID, etc. Each supplier is categorized based on the region and country they are located in, ensuring that the supplier\u2019s geographical and business background is clearly identified.\nThe system also records information about the materials produced by suppliers, including material type, production time, production quantity, etc., helping the company understand the production capacity and material supply situation of each supplier.\n\nCompany Management:\nThe system supports recording company information, including company name, address, phone number, email, tax ID, ERP system identifier, etc. The management of company information ensures that procurement and supply chain operations are carried out according to company standards and supports management of companies in different regions and countries.\nThe company can also manage procurement applications through the system, ensuring that the types, quantities, and delivery times of requested materials meet the company\u2019s production planning needs.\n\nMaterial Management:\nThe system can manage basic information about all materials, including material type, name, description, unit, etc. The management of material information helps the company clearly understand the specifications, usage, and inventory levels of each material.\nThe relationships between materials and suppliers will also be established in the system to track materials produced by different suppliers and their production quantities.\n\nProcurement Application Management:\nThe system can record internal procurement applications within the company, including material ID, application time, application quantity, remarks, etc., ensuring the rationality of each material request and enabling effective tracking of the procurement process.\nThe procurement application form is linked with material information, allowing timely adjustments in procurement when demand increases or production plans change, ensuring that production does not halt due to material shortages.\n\nRegion and Country Management:\nThe system supports management of different regions and countries, including region names and country codes and names. Through this information, the system can manage the distribution of suppliers, companies, and materials based on geographical location, improving the optimization ability of the supply chain.\nIn summary, this supply chain management system helps the company manage the entire procurement and material supply process by recording data on suppliers, materials, procurement applications, and more, optimizing supply chain operations and ensuring that each material procurement and production process is efficient and traceable.", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Name", "Address", "Phone", "Fax", "Tax ID", "Region ID", "Country ID"], "Primary key": ["Supplier ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}, "Country ID": {"Country": "Country ID"}}}, "Company": {"Attributes": ["Company ID", "Name", "Address", "Phone", "Email", "Tax ID", "ERP System Identifier", "VAT Registration Number", "Username", "Password", "Security Question", "Security Answer", "Status", "Activation Time", "Creation Time", "Update Time", "Region ID", "Country ID"], "Primary key": ["Company ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}, "Country ID": {"Country": "Country ID"}}}, "Material": {"Attributes": ["Material ID", "Type", "Description", "Unit", "Name"], "Primary key": ["Material ID"], "Foreign key": {}}, "Procurement Application": {"Attributes": ["Procurement Application ID", "Material ID", "Application Time", "Application Quantity", "Remarks"], "Primary key": ["Procurement Application ID"], "Foreign key": {"Material ID": {"Material": "Material ID"}}}, "Region": {"Attributes": ["Region ID", "Region Name"], "Primary key": ["Region ID"], "Foreign key": {}}, "Country": {"Attributes": ["Country ID", "Country Code", "Country Name"], "Primary key": ["Country ID"], "Foreign key": {}}, "Supplier Production Material": {"Attributes": ["Material ID", "Supplier ID", "Production Time", "Production Quantity", "Remarks"], "Primary key": ["Material ID", "Supplier ID", "Production Time"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Material ID": {"Material": "Material ID"}}}}}
{"id": "67552f0a13602ec03b41a879", "question": "DevFlix is \u200b\u200ban innovative audio content sharing platform that aims to provide users with a comprehensive service that integrates podcast publishing, playlist management and audio collection. User information includes username, user account, email, password, user description, gender, interest area, number of followers, number of people following, and user creation time. Podcast information includes publisher, podcast file path, type, podcast name, cover image path, number of visits, number of likes, creation time, number of favorites, and last update time. Playlist information includes the user who created the playlist, the user who created the playlist, playlist name, number of visits, number of likes, creation time, number of favorites, creation time, and last update time. DevFlix allows users to register accounts, publish and manage their own podcasts, interact with other users and create playlists. The platform also provides a collection function, allowing users to save content of interest and access it at any time. In addition, DevFlix also has detailed statistics and analysis functions to track the visit data and user interaction of each podcast and playlist.\n", "answer": {"User": {"Attributes": ["User ID", "User Name", "User Account", "Date of Birth", "Email", "Password", "User Description", "Gender", "Areas of Interest", "Number of Followers", "Number of Followers", "User Creation Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Podcast": {"Attributes": ["Podcast ID", "Publisher ID", "Podcast File Path", "Type", "Podcast Name", "Cover Image Path", "Number of Visits", "Number of Likes", "Creation Time", "Number of Favorites", "Last Update Time"], "Primary key": ["Podcast ID"], "Foreign key": {"Publisher ID": {"User": "User ID"}}}, "Playlist": {"Attributes": ["Playlist ID", "User ID who created the playlist", "Playlist Path", "Playlist Name", "Number of Visits", "Number of Likes", "Number of Favorites", "Creation Time", "Last Update Time"], "Primary key": ["Playlist ID"], "Foreign key": {"User ID who created the playlist": {"User": "User ID"}}}, "User Publishes Podcast": {"Attributes": ["User ID", "Podcast ID"], "Primary key": ["User ID", "Podcast ID"], "Foreign key": {"Podcast ID": {"Podcast": "Podcast ID"}, "User ID": {"User": "User ID"}}}, "User Creates Playlist": {"Attributes": ["User ID", "Playlist ID"], "Primary key": ["User ID", "Playlist ID"], "Foreign key": {"Playlist ID": {"Playlist": "Playlist ID"}, "User ID": {"User": "User ID"}}}, "Playlist Contains Podcasts": {"Attributes": ["Podcast ID", "Playlist ID"], "Primary key": ["Podcast ID", "Playlist ID"], "Foreign key": {"Playlist ID": {"Playlist": "Playlist ID"}, "Podcast ID": {"Podcast": "Podcast ID"}}}}}
{"id": "67552f0a13602ec03b41a87a", "question": "The mail system manages multiple users, each of whom has a user ID, email account, name, password, and creation time. The system manages multiple emails, each of which has an email ID, sender ID, subject, body, status, sending time, and creation time. Each time an email is sent, the recipient information of the email needs to be recorded, including the recipient ID, whether it was successfully delivered, and whether it has been read. The system also supports the email attachment function, and each attachment has an attachment ID, attachment file name, attachment size, and attachment file storage path. Each email sent can be accompanied by multiple attachments, and whether the attachments were successfully delivered and whether they have been read is recorded. By recording information about users, emails, recipients, and attachments, the integrity and efficiency of the mail system are ensured.", "answer": {"User": {"Attributes": ["User ID", "Email account", "Name", "Creation time", "Password"], "Primary key": ["User ID"], "Foreign key": {}}, "Mail": {"Attributes": ["Mail ID", "Sender ID", "Subject", "Body", "Status", "Sending time", "Creation time"], "Primary key": ["Mail ID"], "Foreign key": {"Sender ID": {"User": "User ID"}}}, "Attachment": {"Attributes": ["Attachment ID", "Attachment file name", "Attachment size", "Attachment file storage path"], "Primary key": ["Attachment ID"], "Foreign key": {}}, "Mail Recipient": {"Attributes": ["Mail ID", "Recipient ID", "Successfully Delivered", "Read"], "Primary key": ["Mail ID", "Recipient ID"], "Foreign key": {"Mail ID": {"Mail": "Mail ID"}, "Recipient ID": {"User": "User ID"}}}, "Mail Attachment": {"Attributes": ["Mail ID", "Attachment ID", "Successfully Delivered", "Read"], "Primary key": ["Mail ID", "Attachment ID"], "Foreign key": {"Mail ID": {"Attachment": "Attachment ID"}}}}}
{"id": "67552f0a13602ec03b41a881", "question": "Design a database for a blockchain or cryptocurrency system to store and manage transactions, blocks, and account information.\nThe system shall record detailed information about transactions, including transaction hash, timestamp, fee, input address, and output address;     \ninformation about blocks, including block hash, height, timestamp, previous block hash, and Merkle root;\nas well as account addresses and balances.\nThe system shall support querying the block a transaction belongs to, as well as the relationship between transactions and accounts.\n", "answer": {"Transaction": {"Attributes": ["Transaction Hash", "Timestamp", "Block Hash", "Fee", "Input Address", "Output Address"], "Primary key": ["Transaction Hash"], "Foreign key": {"Block Hash": {"Block": "Block Hash"}, "Input Address": {"Account": "Address"}, "Output Address": {"Account": "Address"}}}, "Block": {"Attributes": ["Block Hash", "Height", "Timestamp", "Previous Block Hash", "Merkle Root"], "Primary key": ["Block Hash"], "Foreign key": {"Previous Block Hash": {"Block": "Block Hash"}}}, "Account": {"Attributes": ["Address", "Balance"], "Primary key": ["Address"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a882", "question": "The Conference Management System aims to support conference organization, venue selection, user participation, and session management. The system is capable of managing conference-related information, coordinating user roles and permissions, ensuring smooth conference proceedings, and recording detailed session information. The following are specific business descriptions:\n\nUser Management:\n- The system is able to manage basic information of all users, including name, email, authentication method, and user permissions. Users can have different permissions, determining whether they can create, manage, or participate in conferences.\n- User role management is crucial. The system is able to distinguish which users are conference creators, administrators, or participants, in order to assign tasks and control conference access according to different permissions.\n\nConference Management:\n- The system is able to create and manage basic information of multiple conferences, including conference title, subtitle, creator, administrator, and conference schedule.\n- Each conference can be associated with one or more venues, ensuring that conferences can be held at suitable geographic locations.\n- The system records the specific time and venue selection of each conference, ensuring that conferences are held smoothly at the appropriate time and place.\n\nSession Management:\n- The system supports managing multiple sessions within a conference. Each session contains detailed information such as session title, abstract, speaker, start time, duration, etc.\n- Session arrangement helps users clearly understand the specific agenda of the conference, ensuring the orderly progress of the conference process.\n- Users can participate as speakers in different sessions. The system will record the presentation content and time of each user in the conference.\n\nConference Venue Selection:\n- The system is able to record venue information for each conference, ensuring that each conference can be held at a suitable venue.\n- Venue information includes venue name, address, and geographic location. The system is able to select suitable venues according to conference requirements and manage conference venues.\n\nUser Participation and Conference Management:\n- Users can create conferences and also manage existing conferences as administrators. Administrators are responsible for coordinating the conference process and ensuring the smooth running of the conference.\n- The system also records the management or presentation status of each user in the conference, ensuring that the responsibilities and participation of all attendees are traceable.\n\nThe Conference Management System can help organizers efficiently manage all aspects of conferences, from user role management to conference venue arrangement, session design, and user participation tracking. The system ensures that each conference can be held smoothly and provides clear permissions and participation arrangements for each user.", "answer": {"User": {"Attributes": ["User ID", "Name", "Email", "Authentication Method", "User Permission"], "Primary key": ["User ID"], "Foreign key": {}}, "Venue": {"Attributes": ["Venue ID", "Venue Name", "Venue Address", "Geographic Location"], "Primary key": ["Venue ID"], "Foreign key": {}}, "Conference": {"Attributes": ["Conference ID", "Title", "Subtitle", "Creator", "Administrator", "Conference Time"], "Primary key": ["Conference ID"], "Foreign key": {"Creator": {"User": "User ID"}, "Administrator": {"User": "User ID"}}}, "Session": {"Attributes": ["Session ID", "Title", "Abstract", "Speaker", "Start Time", "Duration", "Belonging Conference"], "Primary key": ["Session ID"], "Foreign key": {"Belonging Conference": {"Conference": "Conference ID"}}}, "Conference Venue Selection": {"Attributes": ["Conference ID", "Venue ID"], "Primary key": ["Conference ID", "Venue ID"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "Venue ID": {"Venue": "Venue ID"}}}, "User Create Conference": {"Attributes": ["User ID", "Conference ID"], "Primary key": ["User ID", "Conference ID"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "User ID": {"User": "User ID"}}}, "User Manage Conference": {"Attributes": ["User ID", "Conference ID"], "Primary key": ["User ID", "Conference ID"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "User ID": {"User": "User ID"}}}, "User Presentation": {"Attributes": ["User ID", "Session ID"], "Primary key": ["Session ID", "User ID"], "Foreign key": {"Session ID": {"Session": "Session ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a885", "question": "The human resource management system database design of a company is as follows: The company has multiple departments, and the department information includes department ID, department name, person in charge, and phone number. Each department has multiple employees, and the employee information includes employee ID, name, gender, date of birth, position, and salary. The company also records the employees' attendance, which includes attendance ID, employee ID, attendance date, check-in and check-out times, and whether the employee is late or leaves early. Furthermore, the company records the employees' training details, which include training ID, training name, training time, training content, and the IDs of the participating employees. The system needs to support queries for employee's basic information, attendance records, and training records, and should be able to generate reports on attendance and training participation by department.", "answer": {"department": {"Attributes": ["department id", "department name", "person in charge", "phone number"], "Primary key": ["department id"], "Foreign key": {}}, "employee": {"Attributes": ["employee id", "name", "gender", "date of birth", "position", "salary", "department id"], "Primary key": ["employee id"], "Foreign key": {"department id": {"department": "department id"}}}, "attendance": {"Attributes": ["attendance id", "employee id", "attendance date", "check-in and check-out times", "whether late or early departure"], "Primary key": ["attendance id"], "Foreign key": {"employee id": {"employee": "employee id"}}}, "training": {"Attributes": ["training id", "training name", "training time", "training content"], "Primary key": ["training id"], "Foreign key": {}}, "employee training": {"Attributes": ["training id", "employee id"], "Primary key": ["training id", "employee id"], "Foreign key": {"employee id": {"employee": "employee id"}, "training id": {"training": "training id"}}}}}
{"id": "67552f0a13602ec03b41a891", "question": "User Management and Access Control System:\n\nThe system aims to effectively manage the hierarchical relationships and permission changes of users, record each user's identity information, superior and subordinate relationships, and the management of these relationships by operators. Here is a detailed business description:\n\nUser Management:\n- The system can manage users' basic information, including User ID, identity type, email, identity status, creation time, and expiration time.\n- The superior and subordinate relationships in the user information allow for recording the hierarchical structure within the organization, where each user can have one superior and multiple subordinates. This function aids in the implementation of permission control and hierarchical management.\n\nIdentity and Permission Management:\n- The system records each user\u2019s identity type and status to ensure clarity of users\u2019 permissions and roles within the system.\n- Through effective identity management, the system ensures the correct allocation and updating of user permissions, meeting organizational requirements.\n\nUser Hierarchy Adjustment:\n- Operators can manage and adjust the hierarchical relationships of users, recording the time of each change, the hierarchical relationship before and after the change, and corresponding remarks.\n- The system can track the historical changes of the superior and subordinate relationships of users, ensuring a complete audit record of organizational structure changes.\n\nOperator Management:\n- The system records operators' information, including names, phone numbers, and permissions, where operators are responsible for managing and modifying users' hierarchical relationships.\n- Each operator can adjust permissions and alter relationships for different users; the system records detailed information about these changes.\n\nChange Audit:\n- The system records each change in the user hierarchical relationships, including changes of superior and subordinate users. The time of each change, the relationships before and after the change, operator information, and remarks are all detailedly logged, providing a complete auditing trail.\n- This functionality ensures that internal permission changes and hierarchy adjustments within the organization can be managed transparently and traced.\n\nThe system is used for managing users' hierarchical relationships, identity information, and permissions. Through the operator's control of permissions, the system supports flexible adjustments to user hierarchical relationships and ensures all changes are traceable through record keeping.", "answer": {"User": {"Attributes": ["User ID", "Superior User", "Identity Type", "Email", "Identity Status", "Creation Time", "Expiration Time", "Subordinate User"], "Primary key": ["User ID"], "Foreign key": {"Superior User": {"User": "User ID"}, "Subordinate User": {"User": "User ID"}}}, "Operator": {"Attributes": ["Operator ID", "Name", "Phone", "Permissions"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Change Superior User": {"Attributes": ["Operator ID", "User ID", "Change Time", "Previous Superior User", "Changed Superior User", "Remarks"], "Primary key": ["Operator ID", "User ID", "Change Time"], "Foreign key": {"Previous Superior User": {"User": "User ID"}, "Operator ID": {"Operator": "Operator ID"}, "Changed Superior User": {"User": "User ID"}, "User ID": {"User": "User ID"}}}, "Change Subordinate User": {"Attributes": ["Operator ID", "User ID", "Change Time", "Previous Subordinate User", "Changed Subordinate User", "Remarks"], "Primary key": ["Operator ID", "User ID", "Change Time"], "Foreign key": {"Previous Subordinate User": {"User": "User ID"}, "Operator ID": {"Operator": "Operator ID"}, "Changed Subordinate User": {"User": "User ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a892", "question": "In a library management system, the relationships between books, types, and tags are as follows:\nThe system contains multiple books, each book's information includes Book Title, Author, ISBN Number, Publication Year, and Publishing House.       \nEach book can belong to multiple types, type information includes Type ID and Type Name, where Type Name is unique.\nAdditionally, each book can have multiple tags, tag information includes Tag ID and Tag Name, where Tag Name is unique.", "answer": {"Book": {"Attributes": ["ISBN Number", "Book Title", "Author", "Publication Year", "Publishing House"], "Primary key": ["ISBN Number"], "Foreign key": {}}, "Type": {"Attributes": ["Type ID", "Type Name"], "Primary key": ["Type ID"], "Foreign key": {}}, "Tag": {"Attributes": ["Tag ID", "Tag Name"], "Primary key": ["Tag ID"], "Foreign key": {}}, "Book Type Relation": {"Attributes": ["ISBN Number", "Type ID"], "Primary key": ["ISBN Number", "Type ID"], "Foreign key": {"ISBN Number": {"Book": "ISBN Number"}, "Type ID": {"Type": "Type ID"}}}, "Book Tag Relation": {"Attributes": ["ISBN Number", "Tag ID"], "Primary key": ["ISBN Number", "Tag ID"], "Foreign key": {"ISBN Number": {"Book": "ISBN Number"}, "Tag ID": {"Tag": "Tag ID"}}}}}
{"id": "67552f0a13602ec03b41a895", "question": "The requirements analysis for a system related to user authentication and password history associated with the Guacamole project is as follows: Store user authentication information, including user ID and password setting date, managed through the `guacamole_user` table for user login credentials; it is also necessary to record the historical password information for each user, including password history record ID, user ID, salted password hash, password salt, and password setting date, implemented through the `guacamole_user_password_history` table to manage user password history, ensuring that users cannot reuse old passwords. Each user's password is salted and stored as a hash value to enhance password security. By recording the password setting date, a password expiration policy can be implemented, forcing users to change their passwords periodically.", "answer": {"guacamole_user": {"Attributes": ["user_id", "password_date"], "Primary key": ["user_id"], "Foreign key": {}}, "guacamole_user_password_history": {"Attributes": ["password_history_id", "password_hash", "password_salt", "password_date", "user_id"], "Primary key": ["password_history_id"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a898", "question": "Customer Relationship Management (CRM) systems are tools used by companies to manage interactions with customers, improve customer satisfaction and loyalty, and optimize sales and marketing processes. With increasing competition and changes in the market environment, many companies have realized that maintaining and improving relationships with customers is essential for long-term success. Through efficient customer data management, accurate market segmentation, timely customer follow-up, and personalized services, companies can increase customer stickiness, improve sales and service quality, and thus achieve higher market share and customer satisfaction.\nCRM systems help companies manage customers comprehensively by integrating basic customer information, communication records, sales opportunities, service requests, etc. This system not only improves the work efficiency of marketing and sales teams, but also helps customer service departments provide more personalized services, thereby forming healthy customer relationships.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Gender", "Phone", "Email", "Company Name", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Department", "Phone", "Email", "Position", "Level"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Sales Opportunity": {"Attributes": ["Customer ID", "Employee ID", "Creation Time", "Opportunity Name", "Estimated Amount", "Status", "Opportunity Stage", "Estimated Transaction Date", "Actual Transaction Period"], "Primary key": ["Customer ID", "Employee ID", "Creation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Employee ID": {"Employee": "Employee ID"}}}, "Communication Record": {"Attributes": ["Customer ID", "Employee ID", "Creation Time", "Communication Method", "Communication Content", "Communication Result", "Communication Stage"], "Primary key": ["Customer ID", "Employee ID", "Creation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Employee ID": {"Employee": "Employee ID"}}}, "Service Request": {"Attributes": ["Customer ID", "Employee ID", "Creation Time", "Request Type", "Request Description", "Solution", "Status"], "Primary key": ["Customer ID", "Employee ID", "Creation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a899", "question": "Meilong Salon Management System\nThis database is for a salon management system. It records the customer\u2019s name, hair color, and appointment time. Based on the appointment time, customers are assigned to specific hairstylists. The system also records the hairstylist\u2019s name and expertise. Additionally, the service time and service content provided to customers by each hairstylist are recorded.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Hair Color"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Hairstylist": {"Attributes": ["Hairstylist ID", "Name", "Expertise"], "Primary key": ["Hairstylist ID"], "Foreign key": {}}, "Service": {"Attributes": ["Customer ID", "Hairstylist ID", "Appointment Time", "Service Time", "Service Content"], "Primary key": ["Customer ID", "Hairstylist ID", "Appointment Time"], "Foreign key": {"Hairstylist ID": {"Hairstylist": "Hairstylist ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a89a", "question": "This system is an automobile sales management system, which is mainly used to manage the information of companies, categories and dealers. The system allows users to add, delete and update company information, and each company has a unique ID and name. At the same time, category information can also be managed by category ID and company ID to ensure that each category belongs to a company, and when a company is deleted, all categories under the company will also be deleted. The dealer information includes dealer ID, name and company ID, which supports dealers to belong to a company or not to any company (that is, the company ID can be empty). When a company is deleted, the system will set the company ID of all dealers under the company to NULL. Companies and categories, as well as companies and dealers are associated through Foreign key to ensure data integrity and consistency.", "answer": {"Company": {"Attributes": ["Company ID", "Company Name"], "Primary key": ["Company ID"], "Foreign key": {}}, "Category": {"Attributes": ["Category ID", "Category Name", "Company ID"], "Primary key": ["Category ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}, "Dealer": {"Attributes": ["Dealer ID", "Dealer Name", "Company ID"], "Primary key": ["Dealer ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}}}
{"id": "67552f0a13602ec03b41a8aa", "question": "In modern enterprises, the management and evaluation of technology solutions is an important part of ensuring that technology investment generates maximum value and promotes business innovation. With the rapid development of information technology, various technology solutions (such as software tools, hardware equipment, cloud services, artificial intelligence systems, etc.) have become key means for enterprises to improve efficiency, reduce costs, and optimize products and services. However, how to effectively manage and evaluate these technology solutions to ensure that they meet business needs and achieve expected results has become a challenge for enterprises.\nTherefore, enterprises need a dedicated technology solution management and evaluation system. Management of technology solutions: record and track the selection, implementation and maintenance process of various technology solutions to ensure that they can continue to meet the technology needs of the enterprise.\nEvaluation of solutions: evaluate the effectiveness of various technology solutions, evaluate their cost-effectiveness, implementation progress, user feedback, etc.", "answer": {"User": {"Attributes": ["User ID", "Gender", "Name", "Phone", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Technical solution": {"Attributes": ["Technical solution ID", "Solution name", "Solution description", "Implementation start date", "Implementation expected end date", "Status"], "Primary key": ["Technical solution ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Contact number", "Email"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Technical solution feedback": {"Attributes": ["User ID", "Technical solution ID", "Feedback content", "Satisfaction", "Feedback date", "User suggestion"], "Primary key": ["User ID", "Technical solution ID", "Feedback date"], "Foreign key": {"Technical solution ID": {"Technical solution": "Technical solution ID"}, "User ID": {"User": "User ID"}}}, "Technical solution evaluation": {"Attributes": ["Technical solution ID", "Employee ID", "Evaluation date", "Evaluation indicators", "Evaluation results", "Evaluation content"], "Primary key": ["Technical solution ID", "Employee ID", "Evaluation date"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Technical solution ID": {"Technical solution": "Technical solution ID"}}}}}
{"id": "67552f0a13602ec03b41a8b0", "question": "Here is the database requirement description for the conference management system: The system manages information for speakers and conferences. Speakers (Speaker ID, Email, Surname) record detailed information for each speaker, with email and surname serving as basic contact information for the speaker. Conferences (Conference ID, Conference Time) document basic information for each conference, which requires a speaker, and the conference time specifies the exact time of the conference. The system is capable of effectively managing information for both conferences and speakers.\n", "answer": {"Speaker": {"Attributes": ["Speaker ID", "Email", "Surname"], "Primary key": ["Speaker ID"], "Foreign key": {}}, "Conference": {"Attributes": ["Conference ID", "Conference Time"], "Primary key": ["Conference ID"], "Foreign key": {"Speaker ID": {"Speaker": "Speaker ID"}}}, "Speaker Conference": {"Attributes": ["Conference ID", "Speaker ID"], "Primary key": ["Conference ID", "Speaker ID"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "Speaker ID": {"Speaker": "Speaker ID"}}}}}
{"id": "67552f0a13602ec03b41a8b5", "question": "The following is the database requirements analysis for the customer order management system: The system involves the management of customers, orders, order items, and quotations, including the roles of users in customer order creation and quotation.\n\nFirst, there is the customer (Customer ID, Creation Time, Update Time, Deletion Time, Email, Name) entity, which records the detailed information of the customer. Customer ID serves as the Primary key, while Email and Name serve as the basic contact information of the customer. The customer table ensures that each customer's record is complete, including the creation, update, and deletion times of the customer.\n\nThe order (Order ID, Creation Time, Update Time, Deletion Time, Order Description, Delivery Date, Invoice Number, Currency Type, Order Number, Creator User ID, Customer ID) entity records the detailed information of the order. Each order is identified by the Order ID as the Primary key, and the Creator User ID and Customer ID are associated with the user table and customer table, ensuring the relationship between the order creator and the customer. The order table also records important information such as the delivery date and invoice number of the order.\n\nThe order item (Order Item ID, Creation Time, Update Time, Deletion Time, Description, Quantity, Unit, Unit Price, Order ID) entity records the specific items under each order, and each order can contain multiple order items. The order item is associated with the order table through a Foreign key, ensuring that each order item belongs to a specific order.\n\nThe user (User ID, Creation Time, Update Time, Deletion Time, Email, Username, Password) entity records all user information in the system, including the basic information and authentication information of the user. The user table is the creator of orders and quotations, managing the interaction between customers and orders.\n\nIn addition, the user creates orders for customers (Order ID, Customer ID) relationship table represents the many-to-many relationship between users and customers. A user can create multiple orders for a customer, and each customer can also have orders created by multiple users.\n\nThe order items of an order (Order Item ID, Order ID) relationship table is used to record the multiple order items contained in each order, ensuring that each order item is associated with a specific order in the order table.\n\nThe user quotes for customers (Quotation ID, Customer ID) relationship table records the quotation information provided by users to customers, representing the many-to-many relationship between users and customers.\n\nThese designs ensure that the system can effectively manage the relationships between customers, orders, order items, and quotations, and support the role of users in the order creation and quotation process.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Creation Time", "Update Time", "Deletion Time", "Email", "Name"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Creation Time", "Update Time", "Deletion Time", "Order Description", "Delivery Date", "Invoice Number", "Currency Type", "Order Number", "Creator User ID", "Customer ID"], "Primary key": ["Order ID"], "Foreign key": {"Creator User ID": {"User": "User ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Order Item": {"Attributes": ["Order Item ID", "Creation Time", "Update Time", "Deletion Time", "Description", "Quantity", "Unit", "Unit Price", "Order ID"], "Primary key": ["Order Item ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}}}, "Quotation": {"Attributes": ["Quotation ID", "Creation Time", "Update Time", "Deletion Time", "Description", "Quotation Number", "Creator User ID", "Customer ID"], "Primary key": ["Quotation ID"], "Foreign key": {"Creator User ID": {"User": "User ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "User": {"Attributes": ["User ID", "Creation Time", "Update Time", "Deletion Time", "Email", "Username", "Password"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8b6", "question": "An employee management system, whose main function is to manage the company's employee information, attendance records, department transfers, and employee performance evaluation. The system supports detailed employee file management, attendance data tracking, department transfer records, and employee performance evaluation. The following is a specific business description:\nEmployee information management: The system can record employees' basic personal information, including name, gender, date of birth, phone number, ID number, place of origin, age, department, position, level, and contract type. Employee personal information is the core of the system, which can help managers understand the basic situation of each employee and arrange work and job promotion based on this information.\nDepartment management: The system can record and manage the basic information of each department of the company, including department name, responsibilities, head ID, department location and total number of people. The head and members of each department will be tracked to effectively supervise department management and employee transfers.\nEmployee attendance tracking: The system records employees' clock-in data, including clock-in time and clock-in type (such as sign-in, sign-out, etc.). Attendance data helps calculate employees' working hours and attendance rate, and is used for salary calculation and work performance evaluation.\nEmployee department transfer: The system can track the department transfer of employees, including the transfer of employees to and from departments, the transfer time and the position after the transfer. By recording these transfer data, the system can help managers understand the history of employee position changes and evaluate the performance of employees in different departments.\nEmployee performance evaluation: The system supports employee performance evaluation records, including evaluation content, evaluation results and evaluators. Performance evaluation can be recorded based on different time points and different evaluation contents, helping managers to regularly evaluate employee performance and provide a basis for salary adjustments, promotions or job changes.\nThe design focus of the system is to integrate employee personal files, attendance records, department transfers and performance evaluation data to ensure the comprehensiveness and efficiency of the company's human resources management and help management make more scientific decisions.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Date of Birth", "Phone", "ID Number", "Place of Origin", "Age", "Department ID", "Position", "Level", "Contract Type"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Responsibilities", "Department Head ID", "Total Number of People in the Department", "Department Location"], "Primary key": ["Department ID"], "Foreign key": {"Department Head ID": {"Employee": "Employee ID"}}}, "employee department transfer": {"Attributes": ["employee ID", "transfer-in department ID", "transfer-out department ID", "transfer time", "post-transfer position"], "Primary key": ["Employee ID", "Transfer Time"], "Foreign key": {"employee ID": {"Employee": "employee ID"}, "transfer-in department ID": {"Department": "department ID"}, "transfer-out department ID": {"Department": "department ID"}}}, "employee attendance": {"Attributes": ["employee ID", "punch-in time", "punch-in type"], "Primary key": ["employee ID", "punch-in time"], "Foreign key": {"employee ID": {"Employee": "employee ID"}}}, "Performance evaluation": {"Attributes": ["Employee ID", "Evaluation time", "Evaluation content", "Evaluation result", "Evaluator ID"], "Primary key": ["employee ID", "Evaluation time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Evaluator ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a8ba", "question": "This is a system for managing users and torrent files, such as an online torrent sharing platform. For user management, the system allows users to create accounts by providing username and password, users can log in to the system using username and password. The system supports different role assignments, such as ADMIN, CONTRIBUTOR, and VISITOR. Users can update their username and password, and the system records the creation time and last update time of users. For torrent file management, users can upload torrent files, each torrent file is associated with a user, the system records the name, upload time, and last update time of torrent files. When a user is deleted, all torrent files uploaded by that user will also be deleted. Users can update the information of their uploaded torrent files. For permission management, ADMINs can manage all users and torrent files, CONTRIBUTORs can upload and manage their own torrent files, and VISITORs can only view torrent files, cannot upload or modify them.", "answer": {"User": {"Attributes": ["Username", "Password", "User ID", "Creation time", "Update time", "Role ID"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role name", "Permissions"], "Primary key": ["Role ID"], "Foreign key": {}}, "Torrent file": {"Attributes": ["Name", "Upload time", "Last update time", "Torrent ID", "User ID"], "Primary key": ["Torrent ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8bb", "question": "This is a Human Resource Management System (HR System). The system maintains employee basic records, including employee ID, name, gender, date of birth, and hire date. It also manages employee position change history, recording original department, original position, current department, current position, entry date, and departure date. For organizational structure management, the system maintains the company's departmental structure, including department code, name, and person in charge, manages employee department affiliations, and handles personnel transfers. For compensation management, the system maintains employee salary standards (including standard description and standard value), ensures accurate and timely salary payment, and provides individual salary inquiry and departmental salary statistical analysis functions.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Date of birth", "Hire date", "Position", "Department ID", "Salary standard ID"], "Primary key": ["Employee ID"], "Foreign key": {"Salary standard ID": {"Salary standard": "Salary standard ID"}, "Department ID": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department code", "Name", "Person in charge"], "Primary key": ["Department ID"], "Foreign key": {}}, "Salary standard": {"Attributes": ["Salary standard ID", "Standard description", "Standard value"], "Primary key": ["Salary standard ID"], "Foreign key": {}}, "Employee position change": {"Attributes": ["Employee ID", "Department ID", "Original department", "Original position", "Current department", "Current position", "Entry time", "Departure time"], "Primary key": ["Employee ID", "Department ID", "Departure time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a8c0", "question": "This is an email marketing system for managing user accounts, email campaigns, mailing lists, subscriber relationships, and campaign message status. For user management, the system manages user account information, including name, email address, and account status, supporting account creation, deletion, and status updates. For email campaign management, the system supports creating and managing email campaigns, including campaign subject, content, status, and scheduled sending time. Campaigns can be associated with multiple mailing lists, and the system supports campaign planning, sending, cancellation, and failure status management. For mailing list management, the system supports creating and managing mailing lists, including list name and status, with each list being associated with a user account, supporting list creation, deletion, and status updates. For subscriber management, the system manages subscriber information, including name, email address, and subscription status, with each subscriber being associated with a user account, supporting subscriber creation, deletion, unsubscription, and status updates. For subscription relationship management, the system manages relationships between subscribers and mailing lists, supporting subscription relationship creation and deletion. For message status management, the system records creation time and message status for each subscriber in each email campaign, supporting message pending, sent, cancelled, and failed status management.", "answer": {"User": {"Attributes": ["User ID", "Name", "Email address", "Account status"], "Primary key": ["User ID"], "Foreign key": {}}, "Mailing list": {"Attributes": ["Mailing list ID", "List name", "Status", "User ID"], "Primary key": ["Mailing list ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Email campaign": {"Attributes": ["Campaign ID", "Campaign subject", "Content", "Status", "Scheduled sending time"], "Primary key": ["Campaign ID"], "Foreign key": {}}, "Subscriber": {"Attributes": ["Subscriber ID", "Name", "Email address", "Subscription status", "User ID"], "Primary key": ["Subscriber ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Campaign mailing list association": {"Attributes": ["Mailing list ID", "Campaign ID"], "Primary key": ["Mailing list ID", "Campaign ID"], "Foreign key": {"Mailing list ID": {"Mailing list": "Mailing list ID"}, "Campaign ID": {"Email campaign": "Campaign ID"}}}, "Message": {"Attributes": ["Subscriber ID", "Campaign ID", "Message status", "Creation time"], "Primary key": ["Subscriber ID", "Campaign ID", "Creation time"], "Foreign key": {"Subscriber ID": {"Subscriber": "Subscriber ID"}, "Campaign ID": {"Email campaign": "Campaign ID"}}}}}
{"id": "67552f0a13602ec03b41a8c7", "question": "In modern social platforms, interaction and relationship management between users have become particularly important. The core function of the system is to help users manage their own social networks, record the interaction history with other users, and display the dynamics and social activities posted by users. The system allows users to create personal profiles, post dynamics, establish connections and interact with other users (such as likes, comments, favorites, etc.). Through such a design, users can easily interact with each other, manage contacts, and see their social activities and dynamic feedback in real time. Main business functions:\nUser management: Users register through the system and create personal profiles. User profiles include basic information such as account, nickname, password, phone, email, gender, registration time, and birthday.\nUsers can authenticate their identities and set privacy settings through their personal profiles to ensure the security and visibility of information.\nDynamic publishing and management: Users can post social dynamics, and dynamic content can include text, pictures or other forms of multimedia content. Each dynamic includes the publisher ID, publishing time, number of likes, number of comments, number of favorites, and dynamic content.\nDynamics posted by users will be displayed on their personal homepage and possible social circles, and other users can interact.\nContact management: Users can add other users as contacts, and the system records the relationship type between contacts (for example: friends, colleagues, etc.). Each contact addition operation is timestamped and can be accompanied by notes.\nThe management of contact relationships can help users understand the structure of their social networks, and different connections can be distinguished by setting relationship types.\nSocial activity management: Users can interact with the dynamics posted by other users, including likes, comments, and favorites. Each interaction records the time and type of interaction. The system generates social activity records based on the user's interaction history and provides real-time feedback on social interactions.\nHistorical tracking of social interactions: The system not only records current social interactions, but also saves historical information for each interaction. This information helps analyze user interaction trends and preferences and provide users with personalized social recommendations. Records of user interactions with specific dynamics (likes, comments, favorites, etc.) are also saved to form a complete social activity log.\n\n\n", "answer": {"User": {"Attributes": ["User ID", "Account", "Nickname", "Password", "Phone", "Email", "Gender", "Registration time", "Birthday"], "Primary key": ["User ID"], "Foreign key": {}}, "User dynamic information": {"Attributes": ["Dynamic ID", "Publisher ID", "Publishing time", "Number of likes", "Number of comments", "Number of favorites", "Dynamic content"], "Primary key": ["Dynamic ID"], "Foreign key": {"Publisher ID": {"User": "User ID"}}}, "Add Contact": {"Attributes": ["User ID", "Added User ID", "Add Time", "Remarks", "Relationship Type"], "Primary key": ["User ID", "Added User ID", "Adding time"], "Foreign key": {"User ID": {"User": "User ID"}, "Added User ID": {"User": "User ID"}}}, "Social Activity": {"Attributes": ["User ID", "Dynamic ID", "Like", "Comment", "Collection", "Creation Time"], "Primary key": ["User ID", "User Dynamic ID", "Creation Time"], "Foreign key": {"Dynamic ID": {"User dynamic information": "Dynamic ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8dd", "question": "The database is an online forum or social media system where users can post and comment.\n\nMain functions\n\n1. User management\nUser registration: create a new user and record information such as username, email address, password, etc.\nUser login: verify username and password.\nUser information modification: allow users to modify personal information.\nUser activation status management: control whether users can use the system.\n\n2. Post management\nPost: users can post posts containing titles, descriptions, image paths, and thumbnail paths.\nPost status management: control whether posts are visible.\nPost browsing: users can view all visible posts.\nPost search: search for posts by title or description.\nPost deletion: users can delete their own posts, and administrators can delete any post.\n\n3. Comment management\nPost comments: users can comment on posts.\nComment browsing: users can view all comments on posts.\nComment deletion: users can delete their own comments, and administrators can delete any comment.\n\n4. Data association\nUser-post association: record the author of each post.\nUser-comment association: record the author of each comment.\nAssociation between posts and comments: Record all comments for each post.", "answer": {"User": {"Attributes": ["User ID", "Username", "Email", "Password", "User Type", "Activation Status", "Creation Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Post Title", "Post Description", "Image Path", "Thumbnail Path", "Activation Status", "Creation Time", "User ID"], "Primary key": ["Post ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["Comment Content", "Author ID", "Post ID", "Creation Time"], "Primary key": ["Author ID", "Post ID", "Comment Creation Time"], "Foreign key": {"Author ID": {"User Table": "ID"}, "Post ID": {"Post Table": "ID"}}}}}
{"id": "67552f0a13602ec03b41a8df", "question": "This is a simple space combat game system. For game record management, the system records basic information of each game, including number of rounds, grid size, username, and game result. For spaceship management, the system records basic information of each spaceship, including strength, position, name, and type, with each spaceship belonging to a specific game. For fighter management, the system records basic information of each fighter, including name and strength, with each fighter belonging to a specific spaceship.\n", "answer": {"Game": {"Attributes": ["Game ID", "Number of rounds", "Grid size", "Username", "Game result"], "Primary key": ["Game ID"], "Foreign key": {}}, "Spaceship": {"Attributes": ["Spaceship ID", "Strength", "Position", "Name", "Type", "Game ID"], "Primary key": ["Spaceship ID"], "Foreign key": {"Game ID": {"Game": "Game ID"}}}, "Fighter": {"Attributes": ["Fighter ID", "Name", "Strength", "Spaceship ID"], "Primary key": ["Fighter ID"], "Foreign key": {"Spaceship ID": {"Spaceship": "Spaceship ID"}}}}}
{"id": "67552f0a13602ec03b41a8e5", "question": "This is a mini Employee Management System (miniEMS). For department management, the system records company department information, including department ID, department name, and department responsibilities, where department IDs are fixed as 10, 20, 30, 40, 50, and department names are fixed as IT, Marketing, HR, Sale, president office. For employee management, the system records employee basic information, including employee ID, name, gender, age, social security number, department ID, position, email address, phone number, and base salary. The employee ID is automatically generated and uniquely identifies each employee, name is divided into first and last name with both being required, gender defaults to female but allows selection of male or female, age range is between 18 and 100, social security number is unique and used for identity verification, department ID is linked to the department table to ensure employees belong to a department, position defaults to staff but allows selection of staff, assistant, supervisor, manager, director, president, etc., email address and phone number are required for contacting employees, and base salary is required for recording employee compensation information.\n", "answer": {"Department": {"Attributes": ["Department ID", "Department name", "Department responsibilities"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Age", "Social security number", "Position", "Email address", "Phone number", "Base salary", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a8e6", "question": "The membership management system shall record each member's country code, name (with optional pronunciation), and company name, allowing the option to set whether this information is publicly accessible. To expedite the retrieval of certain member information, these details shall be cached in a data cache table. The system shall also manage multiple address entries for each member, with each address containing detailed information such as country, postal code, specific address, and telephone number.", "answer": {"Country": {"Attributes": ["Country Code", "Name"], "Primary key": ["Country Code"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Country Code", "Public Status", "Name", "Name Pronunciation", "Company Name"], "Primary key": ["Member ID"], "Foreign key": {"Country Code": {"Country": "Country Code"}}}, "Address": {"Attributes": ["Address ID", "Country Code", "Postal Code", "Specific Address", "Contact Number"], "Primary key": ["Address ID"], "Foreign key": {"Country Code": {"Country": "Country Code"}}}, "Member Address Management": {"Attributes": ["Member ID", "Address ID"], "Primary key": ["Member ID", "Address ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Address ID": {"Address": "Address ID"}}}}}
{"id": "67552f0a13602ec03b41a8e9", "question": "A social networking platform manages its users' account information and the interactions among users. Users must provide a username when registering and may optionally provide an email address and phone number. Users can enter their date of birth and upload a personal avatar; the system stores the file path for the avatar. Each user account's creation time and the time of the last information modification are recorded.\n\nUsers can post updates on the platform, which may include text, images, or videos. Each update has a posting time and content type. Users can follow each other, with the follow relationship including the follower and the followed, and the follow time is recorded.\n\nAdditionally, users can comment on other users' updates. Comment details include the comment content, comment time, and commenter information. ", "answer": {"User": {"Attributes": ["User ID", "Username", "Email Address", "Phone Number", "Date of Birth", "Avatar Path", "Creation Time", "Last Modification Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Update": {"Attributes": ["Update ID", "User ID", "Content", "Content Type", "Posting Time"], "Primary key": ["Update ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Follow Relationship": {"Attributes": ["Follower ID", "Followed ID", "Follow Time"], "Primary key": ["Follower ID", "Followed ID"], "Foreign key": {"Follower ID": {"User": "User ID"}, "Followed ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["Comment ID", "Update ID", "Commenter ID", "Comment Content", "Comment Time"], "Primary key": ["Comment ID"], "Foreign key": {"Update ID": {"Update": "Update ID"}, "Commenter ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8f2", "question": "User Management Module: Users register by providing information such as username, password, email, and phone number. The system assigns a default role to each user and records the user's registration time and update time. User information can be modified, viewed, or deleted. Each user includes the following Attributes: User ID (Primary key), username, password, email, phone number, role, registration time, and update time.\n\nCredit Management Module: Administrators can create and manage credit records for employees by filling in information such as credit number, credit type, application date, monthly factor, and number of applications. After each credit record is created, the system records the creation time and update time, and allows administrators to modify the credit information. Credit records can also be deleted, and the system records the deletion time. Credit records are associated with the following entities: user, employee, company, and payment. Each credit record includes the following Attributes: credit number (Primary key), credit type, application date, monthly factor, number of applications, creation time, update time, deletion time (nullable), User ID (Foreign key, associated with user table), Employee ID (Foreign key, associated with employee table), Company ID (Foreign key, associated with company table).\n\nCredit Record Status Management Module: The system can manage the status of credit records, and users and administrators can view the current status of credits (such as valid, invalid, terminated, etc.). Each time a credit record is updated, deleted, or activated, the system automatically records the timestamp and operator of the operation to support auditing and historical tracking. Credit record statuses include valid, invalid, terminated, etc.\n\nCompany Management Module: Administrators can manage company information, including company name and company address. Each company has the following Attributes: Company ID (Primary key), company name, company address, creation time, update time.\n\nEmployee Management Module: Administrators can manage employee information, including employee name, position, and affiliated company. Each employee has the following Attributes: Employee ID (Primary key), employee name, employee position, affiliated Company ID (Foreign key, associated with company table).\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone Number", "Role", "Registration Time", "Update Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Employee Name", "Employee Position", "Affiliated Company ID"], "Primary key": ["Employee ID"], "Foreign key": {"Affiliated Company ID": {"Company": "Company ID"}}}, "Credit Record": {"Attributes": ["Credit Number", "Credit Type", "Application Date", "Monthly Factor", "Number of Applications", "Creation Time", "Update Time", "Deletion Time", "User ID", "Employee ID", "Credit Status"], "Primary key": ["Credit Number"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "User ID": {"User": "User ID"}}}, "Company": {"Attributes": ["Company ID", "Company Name", "Company Address", "Creation Time"], "Primary key": ["Company ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8f3", "question": "This is a Sales Management System for managing company sales, orders, customers, employees, and products. For office location management, the system manages company office locations including city, street address, postal code, country, records office contact numbers and fax numbers, and assigns dedicated managers for each location. For employee management, the system records employee basic information including name, position, hire date, employee number, maintains employee office phone and email contacts, sets up direct supervisors to establish clear reporting relationships, records employee base salary and commission rates, and tracks sales performance and revenue for each fiscal year. For customer management, the system records customer company names, customer IDs, maintains detailed contact person information including name, position, phone, records detailed addresses including street, city, state/province, postal code, country, assigns dedicated sales representatives for each customer, sets and manages customer credit limits, and records payment details including check numbers, payment dates, and amounts. For product management, the system records product names, models, specifications, descriptions, sets product cost prices and suggested retail prices, tracks inventory quantities, and records product suppliers and brands. For order management, the system records order dates, requested delivery dates, actual shipping dates and ordering customers, tracks order status (such as pending, shipped, completed), records special instructions and notes, and details product quantities, unit prices, and line numbers in each order. For sales performance management, the system records each salesperson's total sales by fiscal year, analyzes sales trends and performance changes, evaluates sales strategy effectiveness, and provides data support for setting sales targets. For payment management, the system records check numbers, payment dates, invoice amounts and paying customers for each payment, registers check clearing dates, and tracks customer accounts receivable.", "answer": {"Office location": {"Attributes": ["Office location ID", "City", "Street address", "Postal code", "Country", "Contact phone", "Fax", "Manager employee ID"], "Primary key": ["Office location ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Hire date", "Employee number", "Office phone", "Email", "Base salary", "Commission rate", "Supervisor ID"], "Primary key": ["Employee ID"], "Foreign key": {"Supervisor ID": {"Employee": "Employee ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer company name", "Contact person name", "Contact person position", "Contact person phone", "Street", "City", "State/Province", "Postal code", "Country", "Credit limit", "Dedicated sales rep employee ID"], "Primary key": ["Customer ID"], "Foreign key": {"Dedicated sales rep employee ID": {"Employee": "Employee ID"}}}, "Product": {"Attributes": ["Product ID", "Name", "Model", "Specification", "Description", "Cost price", "Suggested retail price", "Inventory quantity", "Supplier", "Brand"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order date", "Required delivery date", "Actual shipping date", "Order status", "Special instructions", "Notes"], "Primary key": ["Order ID"], "Foreign key": {}}, "Order detail": {"Attributes": ["Order ID", "Product ID", "Quantity", "Unit price", "Line number"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}, "Sales performance record": {"Attributes": ["Record ID", "Year", "Total sales", "Sales person ID"], "Primary key": ["Record ID"], "Foreign key": {"Sales person ID": {"Employee": "Employee ID"}}}, "Payment record": {"Attributes": ["Record ID", "Check number", "Payment date", "Invoice amount", "Check clearing date", "Customer accounts receivable", "Paying customer ID"], "Primary key": ["Record ID"], "Foreign key": {"Paying customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a8fe", "question": "The transaction management system shall manage detailed information about orders and products. The system shall record each order's ID, associated products, customer information, order status, and relevant dates. Product information shall include name, price, inventory quantity, and supplier. The system also records each customer's name, address, and contact information to facilitate better communication with customers. In addition, the system shall track the transaction status of each order. Each order may purchase multiple products, and the system needs to track the products purchased in each order. Furthermore, the system shall track the creation and update time of each order for historical records and auditing purposes.", "answer": {"Product": {"Attributes": ["Product ID", "Name", "Price", "Inventory Quantity", "Supplier"], "Primary key": ["Product ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Address", "Contact Information"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Ordering Customer", "Transaction Status", "Order Date", "Update Time"], "Primary key": ["Order ID"], "Foreign key": {"Ordering Customer": {"Customer": "Customer ID"}}}, "Order Detail": {"Attributes": ["Order ID", "Product ID", "Purchase Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0a13602ec03b41a904", "question": "The following is a description of the business requirements for a blog system, including user management, article management, and comment management functions. User information includes username, password, email address, and creation time. Each user can choose whether to make their email address public. Users can publish articles, which have a title, body, type (public, private, or draft), and timestamp. Each article can be commented on by other users. Comments include the comment content, timestamp, and the user who posted it. Comments can also be liked, with each user being able to like each comment only once. Each comment stores the user who made the comment, the article it belongs to, the timestamp, and the content. All operations such as publishing articles, commenting, and liking are recorded in logs. Logs are associated with users and store the user's operations, including the specific operation content and timestamp.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Creation Time", "Is Email Public"], "Primary key": ["User ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Title", "Body", "Type", "Timestamp", "Publisher ID", "Is Public"], "Primary key": ["Article ID"], "Foreign key": {"Publisher ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["Comment ID", "Article ID", "User ID", "Comment Content", "Timestamp"], "Primary key": ["Article ID", "User ID"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "User ID": {"User": "User ID"}}}, "Comment Like": {"Attributes": ["User ID", "Comment ID", "Like Time"], "Primary key": ["User ID", "Comment ID", "Like Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Comment ID": {"Comment": "Comment ID"}}}, "Log": {"Attributes": ["Operation ID", "Operation Type", "Operation Time", "User ID", "Operation Object ID", "Operation Content"], "Primary key": ["Operation ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a908", "question": "The unit management of a benchmark testing system is as follows: The system contains multiple units, with unit information including Unit ID and Unit Name. The Unit ID is the Primary key and auto-incrementing, while the Unit Name is a unique value and cannot be null. Each unit is associated with a benchmark testing type, with the Benchmark Testing Type ID as a Foreign key referencing the Benchmark Testing Type table's Benchmark Testing Type ID field, which also cannot be null. Through these tables, the system effectively manages unit information and its relationship with benchmark testing types, ensuring data consistency and integrity.", "answer": {"Unit": {"Attributes": ["Unit ID", "Unit Name", "Benchmark Testing ID"], "Primary key": ["Unit ID"], "Foreign key": {"Benchmark Testing ID": {"Benchmark Testing": "Benchmark Testing ID"}}}, "Benchmark Testing": {"Attributes": ["Benchmark Testing ID", "Benchmark Testing Name"], "Primary key": ["Benchmark Testing ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a90e", "question": "The system requirements analysis for managing customer evaluations and customer bank account information in an airline company is as follows:\nCustomer information management includes basic customer information such as user ID, name, and contact number.\nFlight route management includes flight route ID, name, route, and time.\nCustomer evaluation management needs to record the customer ID, the evaluation content and score of the flight route. The flight route information is associated through AirlineID to ensure that each evaluation corresponds to a specific flight route. The customer information is associated through CustomerID to ensure that each evaluation corresponds to a specific customer.\nCustomer bank account management records the customer's bank account information, including account ID, account number, and balance. The customer information is associated through CustomerID to ensure that each bank account corresponds to a specific customer. At the same time, ensure the uniqueness of the account number to avoid duplication. ", "answer": {"Customers Table": {"Attributes": ["CustomerID", "Name", "Phone"], "Primary key": ["CustomerID"], "Foreign key": {}}, "Airlines Table": {"Attributes": ["AirlineID", "AirlineName", "Route", "Time"], "Primary key": ["AirlineID"], "Foreign key": {}}, "CustomerReviews Table": {"Attributes": ["ReviewID", "ReviewContent", "ReviewGrade", "AirlineID", "CustomerID"], "Primary key": ["ReviewID"], "Foreign key": {}}, "CustomerBankAccounts Table": {"Attributes": ["AccountID", "AccountNumber", "Balance", "CustomerID"], "Primary key": ["AccountID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a912", "question": "The database is a data management system that is mainly used to record user information, data records and their operation history, and track user operations on data (such as creation, update, deletion, etc.). User storage system user information, including the user's basic identity and contact information. Store managed data records, including the record's name, content, creator, and the user information of the most recent operation. Record various operations performed by users on data records, including operation type, time, remarks, and operation content. Track and record each user's operation history on data records, including operation type, time, and operation content.", "answer": {"User": {"Attributes": ["ID", "User name", "Password", "Phone", "Creation time"], "Primary key": ["ID"], "Foreign key": {}}, "Data record": {"Attributes": ["Data record ID", "Name", "Data content", "User ID who created the record", "Creation time", "User ID of the most recent operation", "Last operation time"], "Primary key": ["Data record ID"], "Foreign key": {"User ID of the most recent operation": {"User": "ID"}, "User ID who created the record": {"User": "ID"}}}, "Operation data": {"Attributes": ["User ID", "Data record ID", "Operation type", "Operation time", "Remarks", "Operation content"], "Primary key": ["User ID", "Data record ID", "Operation time"], "Foreign key": {"Data record ID": {"Data record": "Data record ID"}, "User ID": {"User": "ID"}}}}}
{"id": "67552f0a13602ec03b41a913", "question": "The enterprise management system is a system used to manage and record basic company information, employee information, department structure, etc. Its core purpose is to help companies effectively manage internal resources, optimize operational processes, and improve management efficiency. Through the system, managers can easily access various basic data of the company, grasp the detailed information of employees, and conduct personnel deployment, salary management, attendance management, etc. In addition, the system can also support functions such as authority management, enterprise goal setting, and employee performance appraisal. Specific functional requirements include: Employee information management: including detailed records of employees' personal information (such as name, gender, age, date of birth, contact information), position, entry time, salary, etc. Department management: manage information of different departments, including department name, department head, department responsibilities, department location, total number of department personnel, etc. Employee and department association: record the department of each employee, and support cross-department employee transfer and department management. Attendance management: record employee attendance, including attendance (punch time, punch type), leave record (leave time, leave type), overtime record (overtime time, overtime type), etc.", "answer": {"employee": {"Attributes": ["employee ID", "name", "age", "gender", "date of birth", "contact information", "department ID", "position", "time of employment", "salary"], "Primary key": ["employee ID"], "Foreign key": {"department ID": {"department": "department ID"}}}, "department": {"Attributes": ["department ID", "department name", "department responsibilities", "department location", "total number of department employees", "person in charge ID"], "Primary key": ["department ID"], "Foreign key": {}}, "employee attendance": {"Attributes": ["employee ID", "punch time", "punch type"], "Primary key": ["employee ID", "clock-in time"], "Foreign key": {}}, "employee transfer department": {"Attributes": ["employee ID", "transfer-out department ID", "transfer-in department ID", "transfer time"], "Primary key": ["employee ID", "transfer time"], "Foreign key": {"employee ID": {"employee": "employee ID"}, "transfer-in department ID": {"department": "department ID"}, "transfer-out department ID": {"department": "department ID"}}}, "employee leave": {"Attributes": ["employee ID", "leave time", "leave type"], "Primary key": ["employee ID", "leave time"], "Foreign key": {"employee ID": {"employee": "employee ID"}}}, "employee overtime": {"Attributes": ["employee ID", "overtime", "overtime type"], "Primary key": ["employee ID", "overtime"], "Foreign key": {"employee ID": {"employee": "employee ID"}}}}}
{"id": "67552f0a13602ec03b41a918", "question": "Business requirement description: Indicator management system\nThe system is used to manage and track the performance of different users on multiple indicators, aiming to help organizations monitor key performance indicators (KPIs) and the specific data provided by users during the execution process. The system supports the definition of indicators, the association of users with indicators, data submission and update, real-time evaluation and reporting of user performance, and helps managers optimize decision-making.\nUser management: The system needs to record the basic information of each user, including user ID, name, age, gender, phone number and email address. Each user can be an employee, team or other member of the organization, and the user's information is used for task allocation and data recording in the system.\nIndicator definition management: The system will manage multiple indicators, each of which has indicator ID, indicator name, indicator target, indicator description, calculation method and unit. These indicators represent key indicators that need to be tracked and measured (for example, sales, customer satisfaction, etc.), and define how to calculate and measure the goals of these indicators.\nUser and indicator association management: Each user will be assigned one or more indicators. The table records the relationship between each user and the indicator for which he is responsible, including user ID, indicator ID and allocation time. This relational table supports querying and updating the indicators that the user is responsible for, which can help system administrators view the task allocation of each user.\nIndicator data submission and record management: Users regularly submit data related to indicators according to their responsibilities. These data will be recorded in the indicator data record table, including user ID, indicator ID, submission record time, remarks, improvement relative to the last record, and recorded indicator value. Each data record will contain the data submitted by the user, the remarks, and the difference from the last record to help track changes in user performance.\nIndicator tracking and improvement analysis: The system can calculate and display the difference between the actual value and the target value of each indicator in real time based on the records submitted by the user. For example, through the improvement relative to the last record, the system can evaluate the user's progress in a certain period of time and provide timely feedback to the user or manager.\nData review and feedback mechanism: The system supports reviewing each submitted data. After the review is passed, the data will be officially stored in the database and the historical record will be kept in the indicator data record. Users can provide detailed instructions through remarks, and managers can conduct data analysis and feedback based on this.\n", "answer": {"User": {"Attributes": ["User ID", "Name", "Age", "Gender", "Phone", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Indicator": {"Attributes": ["Indicator ID", "Indicator name", "Indicator target", "Indicator description", "Calculation method", "Unit"], "Primary key": ["Indicator ID"], "Foreign key": {}}, "User assigned indicator": {"Attributes": ["User ID", "Indicator ID", "Allocation time"], "Primary key": ["User ID", "Indicator ID", "Allocation time"], "Foreign key": {"Indicator ID": {"Indicator": "Indicator ID"}, "User ID": {"User": "User ID"}}}, "Indicator data record": {"Attributes": ["User ID", "Indicator ID", "Submission record time", "Remarks", "Improvement relative to the last record", "Record indicator value"], "Primary key": ["User ID", "Indicator ID", "Submission record time"], "Foreign key": {"Indicator ID": {"Indicator": "Indicator ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a91a", "question": "The authentication system shall manage user accounts, characters, and corporation information in the EVE Online game. For each user, the system shall record the username, password, and email address, and indicate whether the account is activated. For game characters, the system shall store the character name, character ID, associated corporation, and mark whether the character is active or set as default. Corporation information shall include the corporation name, ticker, corporation ID, CEO ID, and optional API key details. The system shall also log user login attempts, including the username, source address, browser agent, login result, and timestamp, for auditing and protection against malicious access. Lastly, the system shall allow third-party application integration by storing the application name, maintainer, key, callback URL, and whether the application is active.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Active status"], "Primary key": ["User ID"], "Foreign key": {}}, "Game Character": {"Attributes": ["Character ID", "Character name", "Corporation", "Active status", "Is default character"], "Primary key": ["Character ID"], "Foreign key": {"Corporation": {"Corporation": "Corporation ID"}}}, "Corporation": {"Attributes": ["Corporation ID", "Ticker", "Corporation name", "CEO ID"], "Primary key": ["Corporation ID"], "Foreign key": {"CEO ID": {"User": "User ID"}}}, "User Login Record": {"Attributes": ["User ID", "Source address", "Browser agent", "Login result", "Timestamp"], "Primary key": ["User ID", "Source address", "Timestamp"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Application": {"Attributes": ["Application ID", "Application name", "Maintainer", "Key", "Callback URL", "Active status"], "Primary key": ["Application ID"], "Foreign key": {"Key": {"API Key": "Key"}, "Maintainer": {"User": "User ID"}}}, "API Key": {"Attributes": ["Key", "Corporation"], "Primary key": ["Key"], "Foreign key": {"Corporation": {"Corporation": "Corporation ID"}}}}}
{"id": "67552f0a13602ec03b41a92b", "question": "User Authentication and Management System\nThis system is designed to manage and authenticate users while tracking their interactions with various services and worker nodes in the system. The key functionalities of the system are:\n1.User Registration and Management:\nStore user registration information, including username, full name, email, password hash, registration date, and last login date.\nEnsure the uniqueness of usernames and email addresses.\n2.User Authentication:\nStore information of authenticated users, including username, full name, authentication level (ring), and authentication time.\nEnsure the uniqueness of authenticated usernames.\nRecord signatures and issuer information during the authentication process.\n3.User Migration:\nTrack user migrations from an old system to the new system, recording the old and new user IDs, along with the migration time.\n4.Authenticated Consumer Management:\nStore information of authenticated consumers, including name, description, type, and associated user ID.\nStore configuration data,permissions, and signatures for each consumer.\n5.Session Management:\nStore session information, including session ID, associated consumer ID, expiration time, and MFA (Multi-Factor Authentication) status.\nRecord session signatures and issuer information.\n6.Service Management:\nStore information of various services in the system, including service name, type, URL, and configuration.\nTrack the last heartbeat time and monitoring status of services.\nRecord service signatures and issuer information.\n7.Worker Node Management:\nStore information of worker nodes, including node name, status, associated service ID, operating system, architecture, and last heartbeat time.\nRecord worker node signatures and issuer information.\nEach service contains multiple worker nodes, each user may have multiple authenticated consumers, and each consumer will have multiple sessions.", "answer": {"User": {"Attributes": ["User ID", "Username", "Full Name", "Email", "Password Hash", "Registration Date", "Last Login Date"], "Primary key": ["User ID"], "Foreign key": {}}, "Authenticated User": {"Attributes": ["User ID", "Authentication Level", "Signature", "Issuer", "Authentication Time"], "Primary key": ["User ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Service": {"Attributes": ["Service ID", "Service Name", "Service Type", "Service URL", "Configuration Data", "Last Heartbeat Time", "Monitoring Status", "Signature", "Issuer"], "Primary key": ["Service ID"], "Foreign key": {}}, "Worker Node": {"Attributes": ["Node ID", "Node Name", "Status", "Service ID", "Operating System", "Architecture", "Last Heartbeat Time", "Signature", "Issuer"], "Primary key": ["Node ID"], "Foreign key": {"Service ID": {"Service": "Service ID"}}}, "Authenticated Consumer": {"Attributes": ["Consumer ID", "User ID", "Name", "Description", "Type", "Configuration Data", "Permissions", "Signature", "Issuer"], "Primary key": ["Consumer ID", "User ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User Migration": {"Attributes": ["Migration ID", "Old User ID", "New User ID", "Migration Time"], "Primary key": ["Migration ID"], "Foreign key": {"New User ID": {"User": "User ID"}, "Old User ID": {"User": "User ID"}}}, "Session": {"Attributes": ["Session ID", "Consumer ID", "Expiration Time", "MFA Status", "Signature", "Issuer"], "Primary key": ["Session ID"], "Foreign key": {"Consumer ID": {"Authenticated Consumer": "Consumer ID"}}}, "Encrypted Data Test": {"Attributes": ["Data ID", "Regular Data", "Sensitive Data 1", "Sensitive Data 2", "Signature", "Issuer"], "Primary key": ["Data ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a93c", "question": "The Customer Relationship Management (CRM) or Customer Service system is used to manage customer inquiries, conversation records, and organization information. Its main features include:\n1.Conversation Management: Records basic information about each conversation, including Conversation ID, Customer ID, Organization ID, Creation Time, Last Update Time, and baseId.\n2.Inquiry Management: Records customer inquiry information, including the status (open, closed, draft), category, content, creation time, and end time of the inquiry.\n3.Organization Information Management: Records the basic information of organizations, such as phone number, avatar, location, email, description, homepage link, and image link. Supports detailed management and updating of organization information, ensuring each organization has a unique phone number and avatar. Customers belong to specific organizations.\n4.Data Security: Ensures each conversation is linked to a secure base record, including baseId, encrypted information, creation time, and update time to enhance system security.\nEach customer has a unique Customer ID, name, and contact information.\nEach inquiry may involve multiple customers.\nEach conversation may involve multiple customers and multiple organizations.", "answer": {"Conversation": {"Attributes": ["Conversation ID", "Customer ID", "Creation Time", "Last Update Time", "baseId"], "Primary key": ["Conversation ID"], "Foreign key": {"baseId": {"Security Base Record": "baseId"}, "Customer ID": {"Customer": "Customer ID"}}}, "Message": {"Attributes": ["Message ID", "Conversation ID", "Content", "Send Time", "Status"], "Primary key": ["Message ID"], "Foreign key": {"Conversation ID": {"Conversation": "Conversation ID"}}}, "Inquiry": {"Attributes": ["Customer ID", "Inquiry Category", "Inquiry Content", "Status", "Creation Time", "End Time"], "Primary key": ["Customer ID", "Creation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Organization": {"Attributes": ["Organization ID", "Organization Name", "Phone Number", "Avatar", "Location", "Email", "Description", "Homepage Link", "Image Link"], "Primary key": ["Organization ID"], "Foreign key": {}}, "Security Base Record": {"Attributes": ["baseId", "Encrypted Information", "Record Creation Time", "Record Update Time"], "Primary key": ["baseId"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Contact Information", "Belonging Organization"], "Primary key": ["Customer ID"], "Foreign key": {"Belonging Organization": {"Organization": "Organization ID"}}}}}
{"id": "67552f0a13602ec03b41a93d", "question": "The main function of a commercial sales management system is to manage customer orders, supplier information, product information, and salesperson performance. The tables involved in the system include customers, suppliers, products, staff, and related order and sales records. The core requirements of the system are: Manage customer information: record basic customer information, including contact information, address, etc. Manage supplier information: track the supplier source of the product, and record the supplier's contact information and address. Manage product information: store detailed information about the product, including product name, description, and inventory quantity. Manage staff information: record information about staff related to operations (such as salespersons, buyers, etc.). Order and sales records: track product information purchased from suppliers and sold to customers.", "answer": {"Customer": {"Attributes": ["ID", "Name", "Contact", "Address", "Gender"], "Primary key": ["ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["ID", "Name", "Contact", "Address"], "Primary key": ["ID"], "Foreign key": {}}, "Product": {"Attributes": ["ID", "Name", "Description", "Inventory Quantity"], "Primary key": ["ID"], "Foreign key": {}}, "Staff": {"Attributes": ["ID", "Name", "Phone", "Position"], "Primary key": ["ID"], "Foreign key": {}}, "Purchase from Supplier": {"Attributes": ["Supplier ID", "Product ID", "Purchase Time", "Purchase Product Unit Price", "Purchase Quantity", "Operator ID"], "Primary key": ["Supplier ID", "Product ID", "Purchase Time"], "Foreign key": {"Operator ID": {"Staff": "ID"}, "Product ID": {"Product": "ID"}, "Supplier ID": {"Supplier": "ID"}}}, "Sales Product": {"Attributes": ["Product ID", "Sales Time", "Operator ID", "Unit Price of Sales Product", "Quantity of Sales Product", "Customer ID"], "Primary key": ["Product ID", "Customer ID", "Sales Time"], "Foreign key": {"Customer ID": {"Customer": "ID"}, "Operator ID": {"Staff": "ID"}, "Product ID": {"Product": "ID"}}}}}
{"id": "67552f0a13602ec03b41a94a", "question": "The following describes the database business requirements for a social networking management system: It is used to manage the follow and fan relationships among users. The system supports interactions among users, recording each user's following and follower information, including the creation and update times for each follow relationship. Each user can follow other users and be followed by other users. The management of follow relationships ensures that a user cannot follow themselves and avoids duplicate followings. Users can query their list of followers and the list of users they are following. They can also access recommended content or suggestions for new users. Through follow relationships, the system can push dynamic updates to users, showcasing the content they follow or the activities of other users. Additionally, the system supports statistics on the number of followers and the number of followed users, providing data support for social interaction and user relationship analysis.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "User Follow": {"Attributes": ["Follower ID", "Followed ID", "Follow Time"], "Primary key": ["Follower ID", "Followed ID"], "Foreign key": {"Follower ID": {"User": "User ID"}, "Followed ID": {"User": "User ID"}}}, "User Post": {"Attributes": ["Post ID", "User ID", "Post Time", "Post Content"], "Primary key": ["Post ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a94e", "question": "The multilingual wiki system shall record and manage page content in different languages. Each page shall have configurable settings for editability and visibility. The system shall support page version management, allowing the creation of multiple versions for a page and specifying which version is the current active version. Users shall be able to submit comments on pages, and comments shall support nested replies to other comments for discussion and communication. When creating page versions, users shall have the option to upload image information to enrich the page content. The system shall provide functionality to view page history records, facilitating the tracing and reverting to previous versions.", "answer": {"Page": {"Attributes": ["Page ID", "Edit status", "Visibility status", "Active version number"], "Primary key": ["Page ID"], "Foreign key": {}}, "Comment": {"Attributes": ["Comment ID", "Belonging page", "Reply comment", "Sending user"], "Primary key": ["Comment ID"], "Foreign key": {"Reply comment": {"Comment": "Comment ID"}, "Belonging page": {"Page": "Page ID"}}}, "Version Record": {"Attributes": ["Page number", "Version number", "Image URL", "Description information"], "Primary key": ["Page number", "Version number"], "Foreign key": {"Page number": {"Page": "Page ID"}}}}}
{"id": "67552f0a13602ec03b41a95a", "question": "This database is used in the death record management module of a medical system, especially community health centers or small hospitals, to record and manage the information of the deceased confirmed by these institutions.\n\nMain functions:\n\n1. Record death information: You can record the personal information of the deceased, including name and unique identification number.\n\n2. Manage inspectors: By recording the identification number of the inspector, you can track which staff member confirmed the death.\n\n3. Update records: Automatically update the last modification time of each record, which helps to track the latest status of the information.\n\n4. Query and statistics: You can query according to the identification number of the deceased or the inspector, and count the death records over a period of time.", "answer": {"Inspector": {"Attributes": ["Inspector ID"], "Primary key": ["Inspector ID"], "Foreign key": {}}, "Death Record": {"Attributes": ["Death Record ID", "Name", "Unique ID", "Inspector ID", "Last Modified Time"], "Primary key": ["Death Record ID"], "Foreign key": {"Inspector ID": {"Inspector": "Inspector ID"}}}, "Confirmed Death Record": {"Attributes": ["Inspector ID", "Death Record ID"], "Primary key": ["Inspector ID", "Death Record ID"], "Foreign key": {"Inspector ID": {"Inspector": "Inspector ID"}, "Death Record ID": {"Death Record": "Death Record ID"}}}}}
{"id": "67552f0a13602ec03b41a95e", "question": "Online gaming platform requirements are as follows:\nThe platform supports multiple users who can register and log in. User information includes User Name, Password, Gender, Balance, Avatar, and Registration Time.\nEach user can participate in multiple matches. Each match records the Match Name, Match Time, and Match Result (Win or Lose).\n", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Gender", "Balance", "Avatar", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Match": {"Attributes": ["Match ID", "Match Name", "Match Time"], "Primary key": ["Match ID"], "Foreign key": {}}, "User Match Record": {"Attributes": ["User ID", "Match ID", "Match Result"], "Primary key": ["User ID", "Match ID"], "Foreign key": {"Match ID": {"Match": "Match ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a95f", "question": " Task Scheduling System or Batch Processing System Requirements Description:\nThe Task Scheduling or Batch Processing system is used to manage and record the execution status, parameters, and batch information of tasks. Its main features include:\n1.Task Execution Record: Records the execution ID, start time, end time, task name, exit code, exit message, error message, and last update time for each task. Supports recording the external execution ID and parent task execution ID to facilitate hierarchical task management and tracking.\n2.Task Parameter Management: Records the parameters for each task execution, including parameter name and parameter value, and associates them with the task execution record. This helps in configuring task parameters and querying historical parameters.\n3.Task Batch Management: Records the relationship between task execution and batch execution, including batch ID, batch name, start time, and end time. This helps in managing and querying the execution status of tasks across different batches.\n", "answer": {"Task Execution Record": {"Attributes": ["Execution ID", "Task Name", "Start Time", "End Time", "Exit Code", "Exit Message", "Error Message", "Last Update Time", "External Execution ID", "Parent Task Execution ID", "Batch ID"], "Primary key": ["Execution ID"], "Foreign key": {"Batch ID": {"Task Batch": "Batch ID"}, "External Execution ID": {"Task Execution Record": "Execution ID"}, "Parent Task Execution ID": {"Task Batch": "Execution ID"}}}, "Task Parameter": {"Attributes": ["Execution ID", "Parameter Name", "Parameter Value"], "Primary key": ["Execution ID", "Parameter Name"], "Foreign key": {"Task Execution ID": {"Task Execution Record": "Execution ID"}}}, "Task Batch": {"Attributes": ["Batch ID", "Batch Name", "Start Time", "End Time"], "Primary key": ["Batch ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a96a", "question": "The following is a description of the database requirements for a certain chat management system:\n\nThe database system is an instant messaging platform that manages multiple chat rooms and message interactions between users. Each room can accommodate multiple users, and users can send and view messages in different rooms. Each message is associated with a room, a user, and the creation and update timestamps. The system manages rooms through the Room table, records message content and associates it with specific users and rooms through the Message table. The _RoomToUser table ensures the many-to-many relationship between users and rooms, allowing users to join multiple rooms and ensuring that each user combination within a room is unique. The system supports users joining and leaving rooms, and provides permission-based message viewing and manipulation functions, such as only allowing the sender of a message to update or delete their own messages. In addition, the timestamp recording mechanism provides tracking and auditing capabilities for each room and message, thus supporting more detailed operations and management of historical data.\n", "answer": {"Room": {"Attributes": ["Room ID", "Room Name", "Room Description", "Create Time", "Creator"], "Primary key": ["Room ID"], "Foreign key": {"Creator": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone Number", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Message": {"Attributes": ["Room ID", "User ID", "Message Content", "Message Type", "Update Record", "Create Time", "Update Time", "Is Deleted"], "Primary key": ["Room ID", "User ID", "Create Time"], "Foreign key": {"Room ID": {"Room": "Room ID"}, "User ID": {"User": "User ID"}}}, "User Join Room": {"Attributes": ["User ID", "Room ID", "Join Time", "Exit Time"], "Primary key": ["User ID", "Room ID", "Join Time", "Exit Time"], "Foreign key": {"Room ID": {"Room": "Room ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a971", "question": "Database design for a company is as follows:\nThe company has multiple corporate and individual clients.\nCorporate client information includes corporate tax ID, corporate name, postal code, corporate size, and corporate type.\nIndividual client information includes person's name, date of birth, and personal tax ID.\nEach client can be a corporate client or an individual client, and client information is stored in corresponding tables.\nThe company conducts several projects, project information includes project value, start date, end date, project status, service type, and whether it is a digital project.\nProjects contain multiple members, member information includes name, position, domain, date of hire, and date of departure, and members can participate in multiple projects simultaneously.", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Type"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Corporate Customer": {"Attributes": ["Corporate Tax ID", "Corporate Name", "Postal Code", "Corporate Size", "Corporate Type", "Customer ID"], "Primary key": ["Corporate Tax ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Individual Customer": {"Attributes": ["Personal Tax ID", "Name", "Date of Birth", "Customer ID"], "Primary key": ["Personal Tax ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Project": {"Attributes": ["Project ID", "Project Value", "Start Date", "End Date", "Project Status", "Service Type", "Is Digital Project"], "Primary key": ["Project ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Name", "Position", "Domain", "Date of Hire", "Date of Departure"], "Primary key": ["Member ID"], "Foreign key": {}}, "Project Member Relationship": {"Attributes": ["Project ID", "Member ID"], "Primary key": ["Project ID", "Member ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a97d", "question": "\"The enterprise management system requires management of employee information (including positions and performance), supplier information, project progress, attendance, and salaries. The system needs to record and query each employee's corresponding position and performance status, track attendance records and salary distribution, and support monitoring and management of project progress, with each project having a responsible person and a supplier. The system shall be able to retrieve project progress information. Suppliers must maintain an independent information database to interface with the enterprise\u2019s various projects or requirements. The system should be able to be managed entirely by administrators including creating, deleting, modifying, and querying various types of information, and providing functions that facilitate statistical analysis.\"", "answer": {"employee": {"Attributes": ["Employee ID", "Position", "Performance", "Name", "Age"], "Primary key": ["Employee ID"], "Foreign key": {}}, "supplier": {"Attributes": ["Supplier ID", "Supplier Name"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "project": {"Attributes": ["Project ID", "Responsible Person", "Supplier", "Project Progress"], "Primary key": ["Project ID"], "Foreign key": {"Supplier": {"supplier": "Supplier ID"}, "Responsible Person": {"employee": "Employee ID"}}}, "attendance record": {"Attributes": ["Employee", "Attendance Date", "Attendance Time"], "Primary key": ["Employee", "Attendance Date"], "Foreign key": {"Employee": {"employee": "Employee ID"}}}, "salary payment record": {"Attributes": ["Employee ID", "Payment Date", "Payment Amount"], "Primary key": ["Employee ID", "Payment Date"], "Foreign key": {"Employee ID": {"employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a980", "question": "The required functions of the student course selection system are described as follows: In the student information management module, the system will record the student's student number, name, gender, age, class, enrollment time, and place of residence, and the administrator can add, modify, and delete student information. In the course information management module, the system will store information such as the course ID, course name, course description, and course status of the course. The administrator can manage the course, including adding courses, modifying course information, and deleting courses. In the teacher information management module, the system will record the teacher's teacher number, name, gender, and title, and the administrator can manage the teacher. The student course selection management module allows students to view optional courses based on the course name and course description, and select courses. The system will record the student's student number and the course ID of the selected course. The system will automatically check the student's course selection to ensure that students cannot repeat the course selection or take a full course. The teacher teaching management module allows teachers to view the courses they teach, record the teacher number, course ID and class start time, and teachers can view detailed information about the courses they teach. The system will record the teaching situation of each course, including teacher teaching information and class start time.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Age", "Class", "Enrollment time", "Place of residence"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course name", "Course introduction", "Course status"], "Primary key": ["Course ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Teacher ID", "Name", "Gender", "Title"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Course selection": {"Attributes": ["Student ID", "Course ID"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Course ID": {"Course": "Course ID"}, "Student ID": {"Student": "Student ID"}}}, "Teaching": {"Attributes": ["Teacher ID", "Course ID", "Start time"], "Primary key": ["Teacher ID", "Course ID"], "Foreign key": {"Course ID": {"Course": "Course ID"}, "Teacher ID": {"Teacher": "Teacher ID"}}}}}
{"id": "67552f0a13602ec03b41a981", "question": "The library management system is as follows:\nThe library has multiple books, each book has a Book ID, Title, Author, Publisher, Publication Date, Price, Book Type, and Content Description.     \nBook Type information is stored in the Book Category table, which includes Book Type ID, Type Name, and Description.\nThe library has multiple readers, each reader has a Reader ID, Reader Type, Contact Number, Credit Score, and Description.\nReader Type information is stored in the Reader Category table, which includes Reader Type ID, Type Name, and Description.\nThe borrowing process is recorded in the Borrowing table, each borrowing record has a Book ID, Reader ID, Borrow Date, Return Date, Renewal Count, and Fine.\nThe system manages book borrowing and returning, as well as reader borrowing permissions and credit scores through this information.\n", "answer": {"Book": {"Attributes": ["Book ID", "Title", "Author", "Publisher", "Publication Date", "Price", "Book Type ID", "Content Description"], "Primary key": ["Book ID"], "Foreign key": {"Book Type ID": {"Book Category": "Book Type ID"}}}, "Book Category": {"Attributes": ["Book Type ID", "Type Name", "Description"], "Primary key": ["Book Type ID"], "Foreign key": {}}, "Reader": {"Attributes": ["Reader ID", "Reader Type ID", "Contact Number", "Credit Score", "Description"], "Primary key": ["Reader ID"], "Foreign key": {"Reader Type ID": {"Reader Category": "Reader Type ID"}}}, "Reader Category": {"Attributes": ["Reader Type ID", "Type Name", "Description"], "Primary key": ["Reader Type ID"], "Foreign key": {}}, "Borrowing Information": {"Attributes": ["Book ID", "Reader ID", "Borrow Date", "Return Date", "Renewal Count", "Fine"], "Primary key": ["Book ID", "Reader ID", "Borrow Date"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Reader ID": {"Reader": "Reader ID"}}}}}
{"id": "67552f0a13602ec03b41a983", "question": "The system is a housing rental platform that includes major functions such as user management, property management, order management, and demand management. Users can register, log in, and manage their personal information on the platform. Landlords can publish property information, set property prices, types, facilities, etc., and manage and update property information. Users can post rental demands based on their needs, create orders on the platform, make payments, and manage order status. The system supports matching properties and demands, displaying property information that meets the conditions according to user needs, and providing rental services. The database design includes four main tables: Users (user table), which records basic user information; Houses (property table), which records detailed property information; Orders (order table), which records user rental orders and status; and Demands (demand table), which records user rental demands. The tables are associated through Foreign key to ensure data consistency and integrity.\n", "answer": {"Users": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone", "User Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Houses": {"Attributes": ["Property ID", "Landlord ID", "Property Title", "Property Description", "Property Price", "Property Type", "Property Facilities", "Property Location", "Publisher"], "Primary key": ["Property ID"], "Foreign key": {"Landlord ID": {"Users": "User ID"}}}, "Orders": {"Attributes": ["Order ID", "User ID", "Property ID", "Order Status", "Order Price", "Lease Start Date", "Lease End Date", "Payment Status"], "Primary key": ["Order ID"], "Foreign key": {"Property ID": {"Houses": "Property ID"}, "User ID": {"Users": "User ID"}}}, "Demands": {"Attributes": ["Demand ID", "User ID", "Demand Title", "Demand Description", "Demand Type", "Demand Budget", "Demand Location"], "Primary key": ["Demand ID"], "Foreign key": {"User ID": {"Users": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a984", "question": "\"The product management system requires maintenance of basic product information (name, brand, category, etc.) and shelf information (name, ID, etc.), and manages the stocking and unstocking of products through associated control. To meet these requirements, the system shall be able to record each product's shelf location, the responsible person, and price information of the shelf products. Additionally, the system must support the maintenance of product categories and brand information to facilitate subsequent retrieval and statistical tasks.\"", "answer": {"Shelf": {"Attributes": ["Shelf ID", "Name", "Location", "Responsible Person"], "Primary key": ["Shelf ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Category", "Selling Price", "Belonging Shelf", "Specific Location", "Brand"], "Primary key": ["Product ID"], "Foreign key": {"Brand": {"Brand": "Brand ID"}, "Belonging Shelf": {"Shelf": "Shelf ID"}}}, "Brand": {"Attributes": ["Brand ID", "Brand Name"], "Primary key": ["Brand ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a985", "question": "\"The student course selection system must manage student information, teacher information, and course information simultaneously. The system should record basic student data such as Student ID and name, and register the courses they enroll in and the grades obtained. Each course should have a unique Course ID and name, and it is necessary to record which teacher is teaching it. Teachers must have their Teacher ID and name stored. The system also needs to ensure that when a student enrolls in a course or a teacher teaches a course, the correct relationship between the two can be established, and the system can store the grades obtained by students.\"", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Birthdate", "Class"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Name", "Instructor"], "Primary key": ["Course ID"], "Foreign key": {"Instructor": {"Teacher": "Teacher ID"}}}, "Teacher": {"Attributes": ["Teacher ID", "Name"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Course Selection": {"Attributes": ["Student ID", "Course ID", "Grade"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a987", "question": "In an e-commerce system,\nusers can browse products and add them to the shopping cart, select the product quantity and apply discounts. When generating an order, the shipping address and payment method need to be specified.\nThe system includes product information management. Each product has a unique Product ID, Product Name, Original Price, and Discounted Price.       \nOrder information includes Order Number, User ID, Shipping Address, Amount Paid, Order Time, Payment Time, and Order Status.\nThe shopping cart records User ID, Product ID, Product Quantity, Discount Amount, and Total Amount.\nPlease design the database for this e-commerce system based on the above description.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Original Price", "Discounted Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order Number", "User ID", "Shipping Address", "Amount Paid", "Order Time", "Payment Time", "Order Status"], "Primary key": ["Order Number"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Shopping Cart": {"Attributes": ["User ID", "Product ID", "Product Quantity", "Discount Amount", "Total Amount"], "Primary key": ["User ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a98c", "question": "The main functions of a store management system may include:\n1. Manage employee information, including employee number, name, gender and performance.\n2. Manage store information, including store number, store name and address.\n3. Manage product information, including product number, product name, specifications and unit price.\n4. Record employee employment information, including employment period and monthly salary.\n5. Record product sales information, including monthly sales volume.\n", "answer": {"Employee": {"Attributes": ["Employee number", "Name", "Gender", "Performance"], "Primary key": ["Employee number"], "Foreign key": {}}, "Store": {"Attributes": ["Store number", "Store name", "Address"], "Primary key": ["Store number"], "Foreign key": {}}, "Product table": {"Attributes": ["Product number", "Product name", "Specifications", "Unit price"], "Primary key": ["Product number"], "Foreign key": {}}, "Employment": {"Attributes": ["Employee Number", "Store Number", "Employment Period", "Monthly Salary"], "Primary key": ["Employee number", "Store number"], "Foreign key": {"Employee Number": {"Employee": "Employee Number"}, "Store number": {"Store": "Store Number"}}}, "Sales": {"Attributes": ["Store Number", "Product Number", "Monthly Sales Volume"], "Primary key": ["Store Number", "Product Number"], "Foreign key": {"Product Number": {"Product table": "Product Number"}, "Store Number": {"Store": "Store Number"}}}}}
{"id": "67552f0a13602ec03b41a98e", "question": "Hospital Information System\n\nMain functions of the system:\n1. Department management: manage hospital department information, including department name, floor, etc.\n2. Doctor management: manage doctor information, including doctor number, name, gender, title, etc.\n3. Patient management: manage patient information, including patient name, age, gender, etc.\n4. Diagnosis management: record the doctor's diagnosis information on the patient\n5. Prescription management: record the prescription information issued by the doctor for the patient\n6. Drug management: manage drug information, including drug name, price, manufacturer, etc.\n7. Drug list management: record the drugs and their quantities included in the prescription", "answer": {"Department": {"Attributes": ["Department Name", "Floor"], "Primary key": ["Department Name"], "Foreign key": {}}, "Doctor": {"Attributes": ["Doctor ID", "Name", "Gender", "Title"], "Primary key": ["Doctor ID"], "Foreign key": {}}, "Patient": {"Attributes": ["Patient Name", "Age", "Gender"], "Primary key": ["Patient Name"], "Foreign key": {}}, "Medicine": {"Attributes": ["Medicine Name", "Price", "Manufacturer"], "Primary key": ["Medicine Name"], "Foreign key": {}}, "Prescription": {"Attributes": ["Prescription Information"], "Primary key": ["Prescription Information"], "Foreign key": {}}, "Diagnosis Management": {"Attributes": ["Doctor ID", "Patient Name", "Diagnosis Information"], "Primary key": ["Doctor ID", "Patient Name"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Patient Name": {"Patient": "Patient Name"}}}, "Prescription Management": {"Attributes": ["Doctor ID", "Patient Name", "Prescription Information"], "Primary key": ["Doctor ID", "Patient Name"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Patient Name": {"Patient": "Patient Name"}}}, "Medicine List Management": {"Attributes": ["Prescription Information", "Medicine Name", "Quantity"], "Primary key": ["Prescription Information", "Medicine Name"], "Foreign key": {"Prescription Information": {"Prescription": "Prescription Information"}, "Medicine Name": {"Medicine": "Medicine Name"}}}}}
{"id": "67552f0a13602ec03b41a999", "question": "This is a Product Management System, mainly used for managing products, staff, suppliers, and customer information. For product information management, the system records basic product information, including product ID, product name, price, and inventory quantity. For staff management, the system maintains employee basic information, including employee ID and name, while also recording employee position, employment status, and department information. For supplier management, the system manages supplier basic information, including supplier ID and name, and records supplier addresses and types of products supplied. For customer management, the system maintains customer basic information, including customer ID and name.\n", "answer": {"Product": {"Attributes": ["Product ID", "Product name", "Supplier", "Price", "Inventory quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Name", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Supplier product": {"Attributes": ["Supplier ID", "Product ID"], "Primary key": ["Supplier ID", "Product ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Product ID": {"Product": "Product ID"}}}, "Staff": {"Attributes": ["Employee ID", "Name", "Position", "Employment status", "Department"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name"], "Primary key": ["Customer ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a99d", "question": "Student Management System Requirements Description:\nThis is a student management system. The main features of the system include:\n1. Student Information Management: Includes information such as name, gender, school, department, and major.\n2. Identification Information Management: Includes information such as identification number, name, gender, age, and address. Each student has unique identification information.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "School", "Department", "Major", "Identification Number"], "Primary key": ["Student ID"], "Foreign key": {"Identification Number": {"Identification": "Identification Number"}}}, "Identification": {"Attributes": ["Identification Number", "Name", "Gender", "Age", "Address"], "Primary key": ["Identification Number"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9a7", "question": "The database design for a certain sports management system is as follows: The system includes tables for coaches, teams, players, coach-team relationships, and player-team relationships. The coach table records basic information about the coaches, including Coach ID, Name, and Age. The team table records basic information about the teams, including Team Name, Representative Region, and Establishment Date. The player table records basic information about the players, including Player ID, Name, Weight, Height, and Joining Date. The coach-team relationship table records the correspondence between coaches and teams, including Coach ID and Team Name. The player-team relationship table records the correspondence between players and teams, including Player ID and Team Name. The system manages the information about coaches, teams, and players as well as their relationships through these tables to facilitate the management and querying functions of the teams.", "answer": {"Coach": {"Attributes": ["Coach ID", "Name", "Age"], "Primary key": ["Coach ID"], "Foreign key": {}}, "Player": {"Attributes": ["Player ID", "Name", "Weight", "Height"], "Primary key": ["Player ID"], "Foreign key": {}}, "Team": {"Attributes": ["Team ID", "Team Name", "Representative Region", "Establishment Date"], "Primary key": ["Team ID"], "Foreign key": {}}, "Coach Team": {"Attributes": ["Coach ID", "Team ID", "Coaching Start Date"], "Primary key": ["Coach ID", "Team ID", "Coaching Start Date"], "Foreign key": {"Coach ID": {"Coach": "Coach ID"}, "Team ID": {"Team": "Team ID"}}}, "Player Team": {"Attributes": ["Player ID", "Team ID", "Joining Date"], "Primary key": ["Player ID", "Team ID", "Joining Date"], "Foreign key": {"Player ID": {"Player": "Player ID"}, "Team ID": {"Team": "Team ID"}}}}}
{"id": "67552f0a13602ec03b41a9a9", "question": "The following is a description of the database requirements for the management system of an e-commerce platform:\n\nThe User module provides user registration, login, and personal information management functions. User information includes User ID, Username, Password, Contact Information, etc.\n\nThe Product module allows administrators to add, modify, delete, and categorize products. Product information includes Product ID, Name, Description, Price, Inventory, Images, etc.\n\nThe Order module handles order creation, viewing, modification, cancellation, shipping, and receiving. Order information includes Order ID, User ID, Product ID, Quantity, Total Price, Status, Time, etc.\n\nThe Shipping Information module manages user shipping addresses. Each user can have multiple shipping addresses and set a default shipping address. The Address Management module records detailed user address information. Address information includes Address ID, Province, City, Detailed Address, etc.\n\nThe Role Management module assigns different role permissions, such as administrator and regular user. Role information includes Role ID and Role Name, etc.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Contact Information", "Role"], "Primary key": ["User ID"], "Foreign key": {"Role": {"Role": "Role ID"}}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Description", "Product Price", "Inventory Quantity", "Product Image"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "User ID", "Total Price", "Order Status", "Order Time", "Shipping Address ID"], "Primary key": ["Order ID"], "Foreign key": {"Shipping Address ID": {"Role Shipping Address": "Address ID"}, "User ID": {"User": "User ID"}}}, "Role": {"Attributes": ["Role ID", "Role Name", "Role Permission"], "Primary key": ["Role ID"], "Foreign key": {}}, "Role Shipping Address": {"Attributes": ["User ID", "Address ID", "Add Time", "Is Default"], "Primary key": ["User ID", "Address ID"], "Foreign key": {"Address ID": {"Role Shipping Address": "Address ID"}, "User ID": {"User": "User ID"}}}, "Order Details": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a9ac", "question": "This is a School Management System. For student management, the system maintains students' basic information including student ID, name, gender, age, records students' major and class information, manages students' exam scores in various courses, and supports students in selecting different courses for study. For course management, the system maintains course information including course ID, course name, credits, arranges teaching staff for courses, and sets classroom and class time. For teacher management, the system maintains teachers' basic information including teacher ID, name, gender, age, records teachers' professional title and specialized field, and manages teachers' employment status in the school. For class management, the system maintains class ID and name, records class's specialized direction, and manages student members in the class. For school management, the system maintains school's basic information including school ID and name, records school's address and contact number, and manages the school's teaching staff.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Age", "Major", "Class"], "Primary key": ["Student ID"], "Foreign key": {"Class": {"Class": "Class ID"}}}, "Course": {"Attributes": ["Course ID", "Course name", "Credits", "Classroom", "Class time"], "Primary key": ["Course ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Teacher ID", "Name", "Gender", "Age", "Professional title", "Major", "School ID"], "Primary key": ["Teacher ID"], "Foreign key": {"School ID": {"School": "School ID"}}}, "Teacher course": {"Attributes": ["Teacher ID", "Course ID"], "Primary key": ["Teacher ID", "Course ID"], "Foreign key": {"Teacher ID": {"Teacher": "Teacher ID"}, "Course ID": {"Course": "Course ID"}}}, "Class": {"Attributes": ["Class ID", "Class name", "Specialized direction"], "Primary key": ["Class ID"], "Foreign key": {}}, "School": {"Attributes": ["School ID", "Name", "Address", "Contact number"], "Primary key": ["School ID"], "Foreign key": {}}, "Student course": {"Attributes": ["Student ID", "Course ID", "Score"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9ae", "question": "The storage management system shall coordinate business processes across departments such as procurement, warehousing, and sales. The procurement department, through procurement personnel, shall be responsible for purchasing solid state drives and storing them in the appropriate warehouse. The warehouse management department shall be responsible for the daily operations of the warehouse, including leasing, managing warehouse personnel, and ensuring the correct storage of solid state drives. The sales department, through sales personnel, shall be responsible for selling solid state drives to customers and arranging shipments. The system shall also store customer information, including name and contact details, to facilitate shipping when sales orders are placed.", "answer": {"Department": {"Attributes": ["Department ID", "Department Name"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Telephone", "Belonging Department"], "Primary key": ["Employee ID"], "Foreign key": {"Belonging Department": {"Department": "Department ID"}}}, "Purchase Record": {"Attributes": ["Purchase Order ID", "Purchase Staff", "Purchase Time", "Spending Amount"], "Primary key": ["Purchase Order ID"], "Foreign key": {"Purchase Staff": {"Employee": "Employee ID"}}}, "Warehouse": {"Attributes": ["Warehouse ID", "Warehouse Name", "Location", "Administrator"], "Primary key": ["Warehouse ID"], "Foreign key": {"Administrator": {"Employee": "Employee ID"}}}, "Solid State Disk": {"Attributes": ["Type", "Brand", "Price", "Hard Disk ID"], "Primary key": ["Hard Disk ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Contact Information"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales Order": {"Attributes": ["Order ID", "Placing Customer", "Order Time", "Order Amount"], "Primary key": ["Order ID"], "Foreign key": {"Placing Customer": {"Customer": "Customer ID"}}}, "Purchase Order Details": {"Attributes": ["Purchase Order ID", "Hard Disk ID", "Purchase Quantity"], "Primary key": ["Purchase Order ID", "Hard Disk ID"], "Foreign key": {"Hard Disk ID": {"Solid State Disk": "Hard Disk ID"}, "Purchase Order ID": {"Purchase Record": "Purchase Order ID"}}}, "Hard Disk Storage": {"Attributes": ["Hard Disk ID", "Warehouse ID", "Reserve"], "Primary key": ["Hard Disk ID", "Warehouse ID"], "Foreign key": {"Warehouse ID": {"Warehouse": "Warehouse ID"}, "Hard Disk ID": {"Solid State Disk": "Hard Disk ID"}}}, "Sales Order Details": {"Attributes": ["Sales Order ID", "Hard Disk ID", "Purchase Quantity"], "Primary key": ["Sales Order ID", "Hard Disk ID"], "Foreign key": {"Hard Disk ID": {"Solid State Disk": "Hard Disk ID"}, "Sales Order ID": {"Sales Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a9b4", "question": "A dormitory management system is used to manage dormitories, users, and related information summaries. The functional requirements are as follows:\nDormitory information management stores relevant information about dormitories, including the unique dormitory ID, dormitory number, number of dormitory members, affiliated college, and dormitory type.\nUser information management stores personal information of users, including the unique user ID, name, gender, age, contact information, and personal profile.\nDormitory member management uses Foreign key to link the dormitory information table and the user information table, thereby recording the user information contained in each dormitory.\nInformation summary management uses Foreign key to link the dormitory information table and the user information table, and stores the summarized data of dormitory and user information.", "answer": {"Dormitory": {"Attributes": ["Dormitory ID", "Dormitory Number", "Number of Dormitory Members", "Affiliated College", "Dormitory Type"], "Primary key": ["Dormitory ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Gender", "Age", "Contact Information", "Personal Profile", "Dormitory ID"], "Primary key": ["User ID"], "Foreign key": {"Dormitory ID": {"Dormitory": "Dormitory ID"}}}, "Information Summary": {"Attributes": ["Dormitory ID", "User ID", "Summary Information"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9b7", "question": "The key features of the system are as follows:\n1.Class Management: Manage class information, including class name, department name, grade, etc.\n2.Member Management: Manage the information of class members, including member ID, name, password, email, age, workplace, contact number, etc.\n3.Announcement Management: Publish and manage class announcements, including announcement ID, announcement time, and announcement content.\n4.Message Management: Manage class messages, allowing members to send messages. The system records sender ID, receiver ID, message content, send time, and read status.\n5.Log Management: Record class logs, including log ID, log content, time, mood, etc. Each member can post their own logs.\n6.Leave Management: Manage class messages, including message ID, message time, message content, and message count. Each member can leave messages.\n7.Application Management: Handle applications submitted by class members, including application ID, application time, approval status, and application content.\n", "answer": {"Class": {"Attributes": ["Class ID", "Class Name", "Department Name", "Grade"], "Primary key": ["Class ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Name", "Password", "Email", "Age", "Workplace", "Contact Number", "Class ID"], "Primary key": ["Member ID"], "Foreign key": {"Class ID": {"Class": "Class ID"}}}, "Announcement": {"Attributes": ["Announcement ID", "Announcement Time", "Announcement Content", "Class ID"], "Primary key": ["Announcement ID"], "Foreign key": {"Class ID": {"Class": "Class ID"}}}, "Message": {"Attributes": ["Sender ID", "Receiver ID", "Message Content", "Send Time", "Read Flag"], "Primary key": ["Sender ID", "Receiver ID", "Send Time"], "Foreign key": {"Sender ID": {"Member": "Member ID"}, "Receiver ID": {"Member": "Member ID"}}}, "Log": {"Attributes": ["Log ID", "Log Content", "Time", "Mood", "Member ID"], "Primary key": ["Log ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Application": {"Attributes": ["Application ID", "Application Time", "Approval Flag", "Application Content", "Member ID"], "Primary key": ["Application ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}}}
{"id": "67552f0a13602ec03b41a9bf", "question": "The following is the database requirement description for a university's academic management system, involving the management of students, majors, teachers, courses, and colleges. The system records basic student information, including Student ID, Name, Gender, Major, and College. The Major entity includes Major ID, Major Name, and College ID. Teacher records include Teacher ID, Teacher Name, Gender, Position, College, Hire Date, and Contact Information. Courses contain Course ID, Course Name, Credit, Class Hours, Major, and Teacher. The College entity includes College ID and College Name. Each student belongs to a specific major and college, and each major is associated with a specific college. Each teacher can teach multiple courses, and each course is related to a specific major. The college records information about all relevant majors. Through these entities and their Attributes, the system can effectively manage information about students, teachers, courses, and colleges.\n", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Major ID"], "Primary key": ["Student ID"], "Foreign key": {"Major ID": {"Major": "Major ID"}}}, "Major": {"Attributes": ["Major ID", "Major Name", "College ID"], "Primary key": ["Major ID"], "Foreign key": {"College ID": {"College": "College ID"}}}, "Teacher": {"Attributes": ["Teacher ID", "Teacher Name", "Gender", "Position", "College ID", "Hire Date", "Contact Information"], "Primary key": ["Teacher ID"], "Foreign key": {"College ID": {"College": "College ID"}}}, "Course": {"Attributes": ["Course ID", "Course Name", "Credit", "Class Hours", "Major ID", "Teacher ID"], "Primary key": ["Course ID"], "Foreign key": {"Major ID": {"Major": "Major ID"}, "Teacher ID": {"Teacher": "Teacher ID"}}}, "College": {"Attributes": ["College ID", "College Name"], "Primary key": ["College ID"], "Foreign key": {}}, "Student Course Selection": {"Attributes": ["Student ID", "Course ID", "Course Selection Time", "Grade"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9c5", "question": "The User Management System is designed to manage user-related information and functionalities. The primary functions include:\n1.User Management: This includes adding, modifying, deleting, and querying user information. Each user has a User ID, Username, Password, Email, Avatar, Nickname, and Registration Time. Each user is assigned a specific Role and Category.\n2.Role Management: Defines different roles and their associated permissions.\n3.Permission Management: Assigns different operation permissions to different roles. Each role includes Role ID, Role Name, and Role Description.\n4.Notification Management: Sends and manages notifications to users, including Notification Title, Notification Content, and Sending Time.\n5.Request Management: Handles user requests. Each request includes Request Content, Request Time, and Request Status.\n6.Category Management: Organizes user data into categories, including Category Name and Category Description.\n7.To-Do Management: Manages the creation, modification, deletion, and querying of user to-do items. Each to-do item includes Item ID, Item Content, Item Status, Creation Time, and Deadline.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Avatar", "Nickname", "Registration Time", "Role ID", "Category ID"], "Primary key": ["User ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}, "Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role Name", "Role Description", "Permission"], "Primary key": ["Role ID"], "Foreign key": {"Permission": {"Permission": "Permission ID"}}}, "Permission": {"Attributes": ["Permission ID", "Permission Name", "Permission Description", "Role ID"], "Primary key": ["Permission ID"], "Foreign key": {}}, "Notification": {"Attributes": ["Notification ID", "Notification Title", "Notification Content", "Sending Time", "Receiving User ID"], "Primary key": ["Notification ID"], "Foreign key": {"Receiving User ID": {"User": "User ID"}}}, "Request": {"Attributes": ["Request ID", "Request Content", "Request Time", "Request Status", "User ID"], "Primary key": ["Request ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Category": {"Attributes": ["Category ID", "Category Name", "Category Description"], "Primary key": ["Category ID"], "Foreign key": {}}, "To-Do Item": {"Attributes": ["Item ID", "Item Content", "Item Status", "Creation Time", "Deadline", "User ID"], "Primary key": ["Item ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a9c9", "question": "The following is a description of the business requirements for a supply chain management system database:\n\nThe system is a supply chain management system designed to integrate and manage key data related to suppliers, warehouses, employees, projects, parts, supplies, inventory, and other aspects to facilitate efficient supply chain operations. The system includes multiple modules such as supplier management, warehouse management, employee management, project management, part management, supply management, inventory management, and employee work management.\n\nThe supplier module records basic information about suppliers, including supplier ID, address, and phone number. The supplier ID serves as the Primary key to ensure the uniqueness of each supplier's information. The relationship between suppliers and projects is established through the \"Supplier Supplies Project\" relationship, which records specific supply details provided by suppliers for projects, such as supply quantity, start time, and end time.\n\nThe warehouse module records basic information about warehouses, such as warehouse ID, area, person in charge, and phone number. The warehouse ID serves as the Primary key to ensure the uniqueness of warehouse information. The relationship between warehouses and parts is established through the \"Warehouse Inventory Parts\" relationship, which records the inventory quantity of parts in each warehouse and links to the part information table through Foreign key. Warehouses are also associated with employees through the \"Employee Work Management\" module, which records the working relationship between employees and warehouses.\n\nThe employee module manages employee information, including employee ID, name, age, job title, and work location. The employee ID serves as the Primary key to uniquely identify each employee. The association between employees and warehouses is achieved through the work location field, indicating the specific warehouse where an employee works.\n\nThe project module records basic information about projects, including project ID, budget, and start date. The project ID serves as the Primary key to ensure the uniqueness of projects. The relationship between projects and parts is established through the \"Project Requires Parts\" relationship, which records the required parts and quantities for each project. Projects are also associated with suppliers through the \"Supplier Supplies Project\" relationship, managing the materials provided by suppliers for projects.\n\nThe part module records information about parts, such as part ID, name, specification, description, and unit price. The part ID serves as the Primary key to ensure the uniqueness of part information. The relationship between parts and warehouses is established through the \"Warehouse Inventory Parts\" relationship, which records the inventory quantity of parts in warehouses and is associated with the warehouse table through Foreign key.\n", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Address", "Phone Number"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Warehouse": {"Attributes": ["Warehouse ID", "Area", "Person in Charge", "Phone Number"], "Primary key": ["Warehouse ID"], "Foreign key": {"Person in Charge": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Age", "Job Title", "Work Location"], "Primary key": ["Employee ID"], "Foreign key": {"Work Location": {"Warehouse": "Warehouse ID"}}}, "Project": {"Attributes": ["Project ID", "Budget", "start Date"], "Primary key": ["Project ID"], "Foreign key": {}}, "Part": {"Attributes": ["Part ID", "Name", "Specification", "Description", "Unit Price"], "Primary key": ["Part ID"], "Foreign key": {}}, "Warehouse Inventory Parts": {"Attributes": ["Warehouse ID", "Part ID", "Inventory Quantity"], "Primary key": ["Warehouse ID", "Part ID"], "Foreign key": {"Warehouse ID": {"Warehouse": "Warehouse ID"}, "Part ID": {"Part": "Part ID"}}}, "Supplier Supply Project": {"Attributes": ["Supplier ID", "Project ID", "Start Time", "End Time"], "Primary key": ["Supplier ID", "Project ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Project ID": {"Project": "Project ID"}}}, "Supplier Supply Part": {"Attributes": ["Supplier ID", "Part ID", "Supply Quantity"], "Primary key": ["Supplier ID", "Part ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Part ID": {"Part": "Part ID"}}}, "Project Requires Parts": {"Attributes": ["Project ID", "Part ID", "Quantity"], "Primary key": ["Project ID", "Part ID"], "Foreign key": {"Part ID": {"Part": "Part ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a9d0", "question": "The system depicts a bank savings system\n\nMain functions of the system\n1 Customer management: including basic information of customers, such as name, address, phone number, ID number, etc.\n2 Savings bank management: including basic information of savings banks, such as name, address, phone number, etc.\n3 Deposit and withdrawal management: record customer deposit and withdrawal information, including deposit and withdrawal amount, expiration date, password, interest rate, type, etc.", "answer": {"Customer": {"Attributes": ["Name", "Address", "Phone Number", "Identity Card Number"], "Primary key": ["Identity Card Number"], "Foreign key": {}}, "Savings Institution": {"Attributes": ["Savings Institution ID", "Name", "Address", "Phone Number"], "Primary key": ["Savings Institution ID"], "Foreign key": {}}, "Transaction Record": {"Attributes": ["Identity Card Number", "Savings Institution ID", "Transaction Time", "Transaction Amount", "Maturity Date", "Password", "Interest Rate", "Type"], "Primary key": ["Identity Card Number", "Savings Institution ID", "Transaction Time"], "Foreign key": {"Savings Institution ID": {"Savings Institution": "Savings Institution ID"}, "Identity Card Number": {"Customer": "Identity Card Number"}}}}}
{"id": "67552f0a13602ec03b41a9d1", "question": "This is a Social Media System. For user management, the system maintains users' basic information (user ID, username, password, etc.), records users' personal information (name, gender, age, etc.), and manages users' personalized information (occupation, interests, personal profile). For post management, the system supports users to publish posts, each post contains a title, description and images, and has a unique ID. For comment management, the system supports users to comment on posts, records the comment time and content, and supports viewing all comments on a post.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Name", "Gender", "Age", "Occupation", "Interests", "Personal profile"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Title", "Description"], "Primary key": ["Post ID"], "Foreign key": {}}, "Image": {"Attributes": ["Image ID", "Image URL", "Post ID"], "Primary key": ["Image ID"], "Foreign key": {"Post ID": {"Post": "Post ID"}}}, "User post comment": {"Attributes": ["User ID", "Post ID", "Comment time", "Comment content"], "Primary key": ["User ID", "Post ID", "Comment time"], "Foreign key": {"Post ID": {"Post": "Post ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a9e2", "question": "The database design for an online education platform is as follows: The system includes tables for courses, teachers, students, and learning relationships. The course table records basic information about courses, including course ID, name, description, category, and the teacher ID of the instructor. The teacher table records basic information about teachers, including teacher ID, name, description, and income. The student table records basic information about students, including student ID, name, age, and balance. The learning relationship table records the correspondence between students and courses, including student ID and course ID. The system manages courses, teachers, students, and their relationships through these tables to facilitate online learning and course management functions.", "answer": {"Teacher": {"Attributes": ["Teacher ID", "Name", "Description", "Income"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Name", "Age", "Balance"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Name", "Description", "Category", "Instructor Teacher ID"], "Primary key": ["Course ID"], "Foreign key": {"Instructor Teacher ID": {"Teacher": "Teacher ID"}}}, "Student Course Selection": {"Attributes": ["Student ID", "Course ID", "Course Selection Time"], "Primary key": ["Student ID", "Course ID", "Course Selection Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9e7", "question": "A commodity supply and demand system is designed to facilitate user registration and login, personal information management, product posting and management, search and browsing, as well as the display of supply and demand information matching. The functional requirements are as follows:\n\nThe user table management stores relevant user information, including user ID, as well as username, password, gender, phone number, ID number, and email, which are used for user registration, login, and personal information management.\n\nThe product table management stores various types of product information, including title, category, price, images, content, validity period, contact person, and phone number, supporting the functions of product posting and management.\n\nThe supply and demand relationship table management uses the supply and demand ID as an identifier, combines user ID and product ID, and specifies the type of supply and demand to record the relationship between users and products, thereby achieving the function of matching and displaying supply and demand information.", "answer": {"User": {"Attributes": ["Username", "Password", "Gender", "Phone Number", "ID Number", "Email", "User ID"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Title", "Category", "Price", "Images", "Content", "Validity Period", "Contact Person", "Phone Number", "Product ID"], "Primary key": ["Product ID"], "Foreign key": {}}, "Supply and Demand Relationship": {"Attributes": ["User ID", "Product ID", "Supply and Demand ID", "Supply and Demand Type"], "Primary key": ["Supply and Demand ID"], "Foreign key": {"Product ID": {"User ID": {"schema_0": "User ID"}}, "User ID": {"Product ID": {"schema_1": "Product ID"}}}}}}
{"id": "67552f0a13602ec03b41a9ee", "question": "The online shopping system needs to manage basic information of users and administrators, and provide product browsing and order functionality. When registering, users need to provide information such as username, password, and email for authentication. The system allows users to specify purchased products and quantities when submitting orders, and tracks order statuses (such as pending payment, paid, or canceled). The product table needs to record information such as product category, name, description, price, and inventory, and associate with orders to enable selection and ordering. Administrators log in through a separate backend portal, with their account information separated from regular users, and can perform operations such as maintaining product categories, viewing and managing user order statuses. The system can also include personal profile records to store detailed user information (such as email, phone number, shipping address, etc.).", "answer": {"user": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone Number"], "Primary key": ["User ID"], "Foreign key": {}}, "admin": {"Attributes": ["Admin ID", "Admin Account", "Password", "Creation Time"], "Primary key": ["Admin ID"], "Foreign key": {}}, "product": {"Attributes": ["Product ID", "Category", "Name", "Description", "Price", "Inventory"], "Primary key": ["Product ID"], "Foreign key": {}}, "order": {"Attributes": ["Order ID", "Ordering User", "Order Time", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {"Ordering User": {"user": "User ID"}}}, "shipping address record": {"Attributes": ["User ID", "Creation Time", "Shipping Address"], "Primary key": ["User ID", "Creation Time"], "Foreign key": {"User ID": {"user": "User ID"}}}, "order detail": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"product": "Product ID"}, "Order ID": {"order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41aa06", "question": "The main functions of the e-commerce platform system include user management, product management, shopping cart function, order management, etc., which supports users to browse products, add to shopping cart, place orders to purchase products, pay orders, etc. The system includes the following functions:\n1. User management: used to record the registered users of the platform, including user ID, user name, password, phone number, email, registration time, last login time, and delivery address. It is mainly used to store the basic information of users, and record the registration and login status of users, and store the delivery address of users.\n2. Product management: record the information of products sold on the platform, including the product name, product description, product sales price, inventory quantity, and sales quantity of the products.\n3. Product addition to shopping cart: record the information of users adding products to the shopping cart. Including the time of adding to the shopping cart and the number of products, it is used to track which products each user adds to the shopping cart.\n4. Purchase of products: record the order information of users purchasing products, including the number of products purchased, the total price and the payment method. It is used to record the product information of users who have successfully placed orders.", "answer": {"User": {"Attributes": ["User ID", "User name", "Password", "Phone", "Email", "Registration time", "Last login time", "Delivery address"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Product description", "Product sales price", "Inventory quantity", "Sales quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product added to cart": {"Attributes": ["User ID", "Product ID", "Add to cart time", "Product quantity"], "Primary key": ["User ID", "Product ID", "Add to cart time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}, "Purchase product": {"Attributes": ["User ID", "Product ID", "Purchase time", "Purchase quantity", "Total order price", "Payment method"], "Primary key": ["User ID", "Product ID", "Purchase time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa22", "question": "System Requirements Function Description\n\nFront-end Function\n1: User Login: Freshmen log in through the WeChat applet. Each user needs to record the student number, student name, student gender, student class, student branch, and student dormitory.\n2: View school information: Freshmen can view the school's introduction, facilities and other information. The school needs to record the school number, school name, school introduction, and school facilities.\n3: View branch information: Freshmen can view the detailed information of their branch. The branch needs to record the branch number, branch name, and branch introduction.\n4: View class information: Freshmen can view their own class information. The class needs to record the class number, class name, and class introduction.\n5: View teacher information: Freshmen can view the detailed information of the class teacher. The teacher needs to record the teacher number, teacher name, teacher title, and teacher profile.\n6: View course information: Freshmen can view the course information of their own class. The course needs to record the course number, course name, course description, and course credits.\n7: View dormitory arrangement information: Freshmen can view their own dormitory allocation. Dormitory information includes dormitory number, dormitory building, dormitory room number, and number of dormitory beds.\n8: View the course schedule: New students can view their own course schedule.\n\nBackground functions\n1: Add school information: Administrators can add or modify the basic information of the school.\n2: Add branch information: Administrators can add or modify branch information.\n3: Add class information: Administrators can add or modify class information.\n4: Add teacher information: Administrators can add or modify teacher information.\n5: Add course information: Administrators can add or modify course information.\n6: Add student information: Administrators can add or modify student information.\n7: Add dormitory information: Administrators can add or modify dormitory information.\n8: Add course schedule information: Administrators can add or modify course schedule information.", "answer": {"School": {"Attributes": ["School ID", "School Name", "School Introduction", "School Facilities"], "Primary key": ["School ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Introduction"], "Primary key": ["Department ID"], "Foreign key": {}}, "Class": {"Attributes": ["Class ID", "Class Name", "Class Introduction"], "Primary key": ["Class ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Teacher ID", "Teacher Name", "Teacher Title", "Teacher Introduction"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Name", "Course Description", "Course Credits"], "Primary key": ["Course ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Student Name", "Student Gender", "Student Class", "Student Department", "Student Dormitory"], "Primary key": ["Student ID"], "Foreign key": {"Student Department": {"Department": "Department ID"}, "Student Dormitory": {"Dormitory": "Dormitory ID"}, "Student Class": {"Class": "Class ID"}}}, "Dormitory": {"Attributes": ["Dormitory ID", "Dormitory Building", "Dormitory Room Number", "Dormitory Bed Count"], "Primary key": ["Dormitory ID"], "Foreign key": {}}, "Course Schedule": {"Attributes": ["Course ID", "Teacher ID", "Class Time", "Class Location"], "Primary key": ["Teacher ID", "Course ID"], "Foreign key": {"Teacher ID": {"Teacher": "Teacher ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0b13602ec03b41aa24", "question": "The online examination system shall include functions such as user management, question bank management, and exam management.\nThe system shall have different user roles, such as student, teacher, and administrator. Each user shall have a unique ID, real name, contact information, and other details.\nThe question bank shall contain various questions. Each question shall have a difficulty level, content, options, correct answer, explanation, and belong to a category.\nAdministrators shall be able to create exams, set the exam name, description, time range, status, and select questions from the question bank to include in the exam, specifying the order of the questions.\nStudents shall be able to take exams. After submitting answers, the system shall record the exam score and the answer status for each question, including the user's answer and whether it is correct.\nThe exam score shall include the student's score and submission time.", "answer": {"User": {"Attributes": ["User ID", "Name", "Contact Information", "Role ID"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role Name"], "Primary key": ["Role ID"], "Foreign key": {}}, "Category": {"Attributes": ["Category ID", "Category Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "Question": {"Attributes": ["Question ID", "Difficulty Level", "Content", "Options", "Correct Answer", "Explanation", "Category ID"], "Primary key": ["Question ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}}}, "Exam": {"Attributes": ["Exam ID", "Exam Name", "Description", "Time Range", "Status", "Creator ID"], "Primary key": ["Exam ID"], "Foreign key": {"Creator ID": {"User": "User ID"}}}, "Exam Question": {"Attributes": ["Exam ID", "Question ID", "Sequence"], "Primary key": ["Exam ID", "Question ID"], "Foreign key": {"Exam ID": {"Exam": "Exam ID"}, "Question ID": {"Question": "Question ID"}}}, "User Answer Sheet": {"Attributes": ["Student ID", "Exam ID", "Score", "Submission Time"], "Primary key": ["Student ID", "Exam ID"], "Foreign key": {"Student ID": {"User": "User ID"}, "Exam ID": {"Exam": "Exam ID"}}}}}
{"id": "67552f0b13602ec03b41aa30", "question": "The Yuci Bus Dispatch System aims to optimize bus operations and management and improve passenger experience. The main functions of the system are as follows:\n1. Route management: manage bus route information, including route number, starting point, end point, passing stations, etc.\n2. Vehicle management: manage bus information, including vehicle number, vehicle type, vehicle status, etc.\n3. Allocation and dispatch: arrange drivers to drive specific vehicles at specified times and along specific routes according to passenger flow and actual needs.\n4. Employee management: manage bus system employee information, including employee number, name, ID number, position, contact information, etc. The system supports automatic addition of employee information through Baidu's ID card recognition interface.\n5. Announcement management: publish and manage announcement information of the bus system, including announcement title, content, release time, etc.\n6. Passenger user management: manage passenger information, including user number, name, contact information, registration information, etc. Support passenger registration, login, query bus routes, view announcements, register for rides, etc.\n7. Mobile terminal function: Provide an APP based on web page encapsulation, through which passengers can query bus routes, view announcements, register and log in, register for rides, etc.\n8. Statistics function: The background provides a time-sharing statistics view of bus trips and passenger flow, and uses the Echart plug-in to realize data visualization.", "answer": {"Bus Route": {"Attributes": ["Route ID", "Starting Point", "Destination", "Passing Stations"], "Primary key": ["Route ID"], "Foreign key": {}}, "Bus": {"Attributes": ["Vehicle ID", "Vehicle Type", "Vehicle Status"], "Primary key": ["Vehicle ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "ID Number", "Position", "Contact Information"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Announcement": {"Attributes": ["Announcement ID", "Announcement Title", "Announcement Content", "Release Time"], "Primary key": ["Announcement ID"], "Foreign key": {}}, "Passenger": {"Attributes": ["User ID", "Name", "Contact Information", "Registration Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Dispatch Route Arrangement": {"Attributes": ["Dispatch Task ID", "Route ID"], "Primary key": ["Dispatch Task ID"], "Foreign key": {"Route ID": {"Bus Route": "Route ID"}}}, "Dispatch Vehicle Arrangement": {"Attributes": ["Dispatch Task ID", "Vehicle ID"], "Primary key": ["Dispatch Task ID"], "Foreign key": {"Vehicle ID": {"Bus": "Vehicle ID"}}}, "Dispatch Employee Arrangement": {"Attributes": ["Dispatch Task ID", "Employee ID"], "Primary key": ["Dispatch Task ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0b13602ec03b41aa31", "question": "The system mainly revolves around the display and sale of countryside specialty resources and agricultural products. It needs to record and manage a certain amount of information about villages and scenic spots, user accounts, and behavior data, as well as provide users with the functionality to purchase agricultural products. The system requirements can be simplified as follows: Users can register and, after logging in, browse the basic information (name, location, pictures, etc.) of multiple featured villages, view the main attractions and corresponding reviews, and purchase agricultural products (name, price) in the e-commerce section, submit orders, pay for or cancel orders. In addition, the system allows users to comment on and provide feedback about the resources they have browsed or the products they have purchased, while managing resource information and users in the backend.", "answer": {"user": {"Attributes": ["User ID", "Username", "Password"], "Primary key": ["User ID"], "Foreign key": {}}, "countryside scenic spot": {"Attributes": ["Scenic Spot ID", "Name", "Location", "Image URL", "Main Scenic Spot Introduction"], "Primary key": ["Scenic Spot ID"], "Foreign key": {}}, "agricultural product": {"Attributes": ["Product ID", "Product Name", "Product Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "scenic spot comment": {"Attributes": ["Scenic Spot ID", "Comment Content", "Posting User", "Comment Time"], "Primary key": ["Posting User", "Scenic Spot ID", "Comment Time"], "Foreign key": {"Posting User": {"user": "User ID"}, "Scenic Spot ID": {"countryside scenic spot": "Scenic Spot ID"}}}, "product comment": {"Attributes": ["Product ID", "Comment Content", "Posting User", "Posting Time"], "Primary key": ["Product ID", "Posting User", "Posting Time"], "Foreign key": {"Product ID": {"agricultural product": "Product ID"}, "Posting User": {"user": "User ID"}}}, "order": {"Attributes": ["Order ID", "Ordering User", "Order Time", "Order Amount", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {"Ordering User": {"user": "User ID"}}}, "order detail": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"agricultural product": "Product ID"}, "Order ID": {"order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa40", "question": "\"The electronic commerce system shall support user registration and login, product display, shopping cart functionalities, and order management. During registration, users shall provide information such as username, password, and email, and may browse and query products via keyword search or categorization. Each product shall store details including name, description, price, inventory, and the category it belongs to. Users can add desired products to their shopping cart, and the system shall record the quantity of products and allow users to submit their final orders. Orders shall include basic information such as user ID, order amount, order status, and the times when they were created and updated. Administrators can manage products in the backend by adding, removing, modifying, or deleting listings, and can configure homepage carousels and set promotions for popular or recommended products to enhance product promotion and management.\"", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Price", "Inventory", "Brief Description"], "Primary key": ["Product ID"], "Foreign key": {}}, "Shopping Cart": {"Attributes": ["Shopping Cart ID", "Belonging User ID", "Creation Time"], "Primary key": ["Shopping Cart ID"], "Foreign key": {"Belonging User ID": {"User": "User ID"}}}, "Order": {"Attributes": ["Order ID", "Ordering User", "Order Time", "Order Status", "Update Time"], "Primary key": ["Order ID"], "Foreign key": {"Ordering User": {"User": "User ID"}}}, "Shopping Cart Details": {"Attributes": ["Shopping Cart ID", "Product ID", "Quantity"], "Primary key": ["Shopping Cart ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Shopping Cart ID": {"Shopping Cart": "Shopping Cart ID"}}}, "Order Details": {"Attributes": ["Order ID", "Product ID", "Quantity", "Unit Price"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa53", "question": "This is a Tower Base Station Monitoring Management System. For signal acquisition management, the system collects operational data through various sensors installed at the tower top, including displacement sensors, wind speed and direction sensors, acceleration sensors, and tilt sensors, used to collect tower head displacement, wind speed, acceleration, and other data. Each sensor has its basic information such as ID, type, installation location, and collection frequency. The collected data is transmitted to the backend through LoRa or 4G after microcontroller authentication processing. For data analysis management, the system establishes a theoretical displacement model for communication towers based on national regulations, compares and analyzes the measured data from each monitoring point with the theoretical model, calculates parameters such as wind speed displacement, and automatically generates alarm information when measured displacement exceeds theoretical values. All monitoring data is stored on the server and generates statistical graphs such as displacement curves and wind speed statistical curves. For environmental monitoring management, the system monitors the environmental conditions within the base station micro-network through HDC1080 temperature and humidity sensors, which feature low power consumption and high accuracy, capable of simultaneously monitoring temperature and humidity data. The system automatically issues alarm signals when environmental indicators are abnormal. For early warning and alarm management, the system displays tower working status in text or graphical form, shows the operation status of each base station on maps through B/S network combined with GIS, uses different markers to identify abnormal conditions, promptly pushes fault information to maintenance personnel, and records the processing. Maintenance personnel have employee ID, name, contact information, and responsible area.", "answer": {"Sensor": {"Attributes": ["Type", "Installation location", "Collection frequency", "ID", "Base station ID"], "Primary key": ["ID"], "Foreign key": {"Base station ID": {"Base station": "ID"}}}, "Base station": {"Attributes": ["Geographic location", "Operating status", "ID"], "Primary key": ["ID"], "Foreign key": {}}, "Monitoring data": {"Attributes": ["ID", "Collection time", "Data value", "Data type", "Sensor ID"], "Primary key": ["ID"], "Foreign key": {"Sensor ID": {"Sensor": "ID"}}}, "Maintenance personnel": {"Attributes": ["Employee ID", "Name", "Contact information", "Responsible area"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Alarm information": {"Attributes": ["ID", "Alarm time", "Alarm type", "Alarm content", "Processing status", "Base station ID"], "Primary key": ["ID"], "Foreign key": {"Base station ID": {"Base station": "ID"}}}, "Alarm information processing": {"Attributes": ["Maintenance personnel ID", "Alarm information ID", "Processing time", "Processing method", "Processing result"], "Primary key": ["Maintenance personnel ID", "Alarm information ID"], "Foreign key": {"Alarm information ID": {"Alarm information": "ID"}, "Maintenance personnel ID": {"Maintenance personnel": "Employee ID"}}}}}
{"id": "67552f0b13602ec03b41aa55", "question": "A sugar cane planting management system is mainly used to record and manage sugar cane planting plots, variety information, employee fertilization records, etc., to help agricultural managers effectively manage plots, planting and fertilization operations. The system covers the following core functions to ensure that the entire process from plot management to planting and fertilization is fully recorded and tracked.\nPlot management: including the region, area, soil type, person in charge ID, soil pH, organic matter content. Used to record the basic information of each sugar cane planting plot, including the unique identification of the plot, the geographical location, area, soil type, etc. Each plot is managed by a person in charge, and the person in charge ID is associated with the employee table.\nSugar cane variety management: including variety name, suitable climate, maturity cycle, suitable soil. Record different varieties of sugar cane information, including variety name, suitable climate, maturity cycle and suitable soil type. This table helps managers select suitable sugarcane varieties and make reasonable variety selection according to the conditions of different plots.\nEmployee management: including employee ID, name, gender, working hours, and telephone number. Record the information of each employee involved in sugar cane planting and management, including name, contact information, and working hours. This table is associated with the plot table and fertilization record table to identify the person in charge of the plot and the fertilization operator.\nPlanting record management: including plot ID, variety ID, planting time, planting quantity, planting method, and planter ID. Record the planting situation of each plot, including information such as the sugar cane variety planted, planting time, planting method, and planting quantity. The planter ID is associated with the employee table to identify the specific planting operator.\nFertilization record management: person in charge ID, plot ID, fertilization time, fertilization type, fertilization amount, fertilization method, and remarks. Record the fertilization operation of each plot, including the fertilization time, fertilization type, fertilization amount, and fertilization method. The person in charge ID is associated with the employee to identify the executor of the fertilization operation.", "answer": {"Plot": {"Attributes": ["Plot ID", "Location", "Area", "Soil type", "Person in charge ID", "Soil pH", "Organic matter content"], "Primary key": ["Plot ID"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}}}, "Sugar cane variety": {"Attributes": ["Variety ID", "Variety name", "Suitable climate", "Maturation cycle", "Suitable soil"], "Primary key": ["Variety ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Working hours", "Phone"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Planting record": {"Attributes": ["Plot ID", "Variety ID", "Planting time", "Planting quantity", "Planting method", "Planter ID"], "Primary key": ["Plot ID", "Variety ID", "Planting time"], "Foreign key": {"Planter ID": {"Employee": "Employee ID"}, "Plot ID": {"Plot": "Plot ID"}, "Variety ID": {"Sugar cane variety": "Variety ID"}}}, "Fertilization record": {"Attributes": ["Person in charge ID", "Plot ID", "Fertilization time", "Fertilization type", "Fertilization amount", "Fertilization method", "Remarks"], "Primary key": ["Person in charge ID", "Plot ID", "Fertilization time"], "Foreign key": {"Person in charge ID": {"Employee": "Employee ID"}, "Plot ID": {"Plot": "Plot ID"}}}}}
{"id": "67552f0b13602ec03b41aa56", "question": "The Tobacco Storage Monitoring and Maintenance Data Management System primarily implements the following functionalities:\n1.Warehouse Information Management: Manages the information related to each warehouse, including Warehouse Name, Warehouse Location, Warehouse Type, Warehouse Image Path, Warehouse Description, Creation Time, Creation Date, and Update Date.\n2.Stack Position Information Management: Manages the information related to each stack position, including Stack Position Name, Stack Position Type, Stack Position Image Path, Stack Position Description, Creation Time, Creation Date, and Update Date. Each stack position belongs to a specific warehouse.\n3.Sensor Management: Sensors placed in the warehouse and tobacco stacks collect real-time environmental parameters such as temperature, humidity, box temperature, and oxygen concentration. Collected information includes Sensor Type, Collected Data Value, Collection Time, Data Status, and Data Description.\n4.User Management: Registers unique information for each user, including Username, User Role, User Password, User Phone, User Email, Creation Time, Creation Date, and Update Date.\n5.Dynamic Monitoring and Risk Alerts: Each user can perform actions on stack positions and records the Operation Type, Operation Time, and Operation Description. Each stack position is monitored by sensors, and alerts are issued based on the monitoring indicators, recording Alert Type, Alert Time, Alert Level, Alert Description, and Alert Status.\n\nThe design takes into account multiple aspects such as warehouse, stack position, sensor data, operation records, user information, and alert information to support comprehensive system management and data security needs.", "answer": {"Warehouse": {"Attributes": ["Warehouse ID", "Warehouse Name", "Warehouse Location", "Warehouse Type", "Warehouse Image Path", "Warehouse Description", "Creation Time", "Creation Date", "Update Date"], "Primary key": ["Warehouse ID"], "Foreign key": {}}, "Stack Position": {"Attributes": ["Stack Position ID", "Stack Position Name", "Stack Position Type", "Belonging Warehouse ID", "Stack Position Image Path", "Stack Position Description", "Creation Time", "Creation Date", "Update Date"], "Primary key": ["Stack Position ID"], "Foreign key": {"Belonging Warehouse ID": {"Warehouse": "Warehouse ID"}}}, "Sensor": {"Attributes": ["Sensor ID", "Stack Position ID", "Sensor Type", "Collected Data Value", "Collection Time", "Data Status", "Data Description"], "Primary key": ["Sensor ID"], "Foreign key": {"Stack Position ID": {"Stack Position": "Stack Position ID"}}}, "User Operation Stack Position": {"Attributes": ["Operation User ID", "Stack Position ID", "Operation Type", "Operation Time", "Operation Description"], "Primary key": ["Operation User ID", "Stack Position ID"], "Foreign key": {"Stack Position ID": {"Stack Position": "Stack Position ID"}, "Operation User ID": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Username", "User Role", "User Password", "User Phone", "User Email", "Creation Time", "Creation Date", "Update Date"], "Primary key": ["User ID"], "Foreign key": {}}, "Stack Position Alert": {"Attributes": ["Stack Position ID", "Alert Type", "Alert Time", "Alert Level", "Alert Description", "Alert Status"], "Primary key": ["Stack Position ID", "Alert Time"], "Foreign key": {"Stack Position ID": {"Stack Position": "Stack Position ID"}}}}}
{"id": "67552f0b13602ec03b41aa5f", "question": "The meteorological information management system is designed to record and manage meteorological station information, historical evolution information, operator information, and audit records. Meteorological station information includes Station ID, Station Type (such as national station, regional station, marine station, sounding station, etc.), Station Name, Latitude, Longitude, Elevation, Geographic Environment Description, Observation Elements List, Observation Instrument Name and Model, Observation Time, Observation Record Medium, Observation Standards, and other relevant information. Historical evolution information includes Change ID, Station ID, Change Type (such as station name, station number, station location, observation elements, observation instruments, observation time, observation record medium, observation standards, etc.), Old Value, New Value, Start Time, End Time, Reason for Change, Operator ID, Operation Time, and Operation Status (such as pending selection, selected, historical data, etc.). Operator information includes Operator ID, Operator Name, Operator Level (such as provincial, city, county), Operator Role (such as system administrator, city and county user, etc.), Operator Email, and Operator Phone. Audit records include Change ID, Operator ID, Audit Time, Audit Status (such as approved, not approved), and Audit Comments. The system shall support operators in making changes to meteorological station information, recording historical evolutions, submitting audit requests, and auditors in reviewing change records and recording audit results. Each meteorological station can have multiple historical evolution records, each of which requires auditing, and each operator can submit multiple change records and participate in audits. The system shall be able to generate station change reports based on historical evolution information and record audit status and operators' operation history.", "answer": {"Meteorological Station": {"Attributes": ["Station ID", "Station Type", "Station Name", "Latitude", "Longitude", "Elevation", "Geographic Environment Description", "Observation Elements List", "Observation Instrument Name and Model", "Observation Time", "Observation Record Medium", "Observation Standards"], "Primary key": ["Station ID"], "Foreign key": {}}, "Historical Evolution Information": {"Attributes": ["Change ID", "Station ID", "Change Type", "Old Value", "New Value", "Start Time", "End Time", "Reason for Change", "Operator ID", "Operation Time", "Operation Status", "Belonging Station ID"], "Primary key": ["Change ID"], "Foreign key": {"Belonging Station ID": {"Meteorological Station": "Station ID"}}}, "Operator": {"Attributes": ["Operator ID", "Name", "Level", "Role", "Email", "Phone"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Audit Information": {"Attributes": ["Change ID", "Operator ID", "Audit Time", "Audit Status", "Audit Comments"], "Primary key": ["Change ID", "Operator ID", "Audit Time"], "Foreign key": {"Change ID": {"Historical Evolution Information": "Change ID"}, "Operator ID": {"Operator": "Operator ID"}}}}}
{"id": "67552f0b13602ec03b41aa62", "question": "1.Real-Time Capture and Query of Medical Images: The system should be able to capture and query medical images in real time, ensuring that doctors can quickly access the required image data. The medical image information to be recorded includes Image Type, Film Time, Image Data, Image Resolution, and Image Enhancement Information. Each image corresponds to a unique patient.\n2.Record All Patient Information: The system should record all relevant information for each patient, including Name, Age, Gender, Contact Information, and Medical Records.\n3.Record All Doctor Information: The system should record all relevant information for each doctor, including Name, Department, and Contact Information. Doctors should be able to operate on images and record specific operation details, including Operation Content and Operation Time. Doctors should be able to upload images, instantly uploading the edited images and their data to the server to ensure data sharing and long-term preservation. The system should also record the Upload Time and Server Path. Each image can be shared with multiple doctors, recording the Sharing Time and Target Institution.", "answer": {"Medical Image": {"Attributes": ["Image ID", "Image Type", "Film Time", "Patient ID", "Image Data", "Image Resolution", "Image Enhancement Information"], "Primary key": ["Image ID"], "Foreign key": {"Patient ID": {"Patient": "Patient ID"}}}, "Patient": {"Attributes": ["Patient ID", "Name", "Age", "Gender", "Contact Information", "Medical Records"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Doctor": {"Attributes": ["Doctor ID", "Name", "Department", "Contact Information"], "Primary key": ["Doctor ID"], "Foreign key": {}}, "Doctor Operation on Image": {"Attributes": ["Image ID", "Operation Type", "Operation Time", "Doctor ID", "Operation Remarks"], "Primary key": ["Image ID", "Doctor ID", "Operation Time"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Image ID": {"Medical Image": "Image ID"}}}, "Doctor Upload Image": {"Attributes": ["Image ID", "Upload Time", "Doctor ID", "Server Path"], "Primary key": ["Image ID", "Doctor ID"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Image ID": {"Medical Image": "Image ID"}}}, "Doctor Share Image": {"Attributes": ["Image ID", "Sharing Time", "Shared Doctor ID", "Target Institution"], "Primary key": ["Image ID", "Shared Doctor ID"], "Foreign key": {"Shared Doctor ID": {"Doctor": "Doctor ID"}, "Image ID": {"Medical Image": "Image ID"}}}}}
{"id": "67552f0b13602ec03b41aa6a", "question": "The Jinan City Natural Disaster Comprehensive Risk Data Management System is based on a Browser/Server (B/S) architecture. The system aims to integrate and manage the results of the natural disaster risk survey in Jinan City, achieving efficient data management and multi-level sharing. The main functional requirements of the system include:\n1.Natural Disaster Data Management: The system will record relevant data related to natural disasters, such as Data ID, Data Type, Data Source, Upload Time, Data Content, Data Format, and Layer Type, to analyze natural disaster risks.\n2.Regional Data Management: Each region has Attributes like Region Name, Administrative Division, Latitude and Longitude, Area, and Disaster Risk Level, and each region may contain multiple natural disaster data.\n3.Department Data Management: Each department records Attributes such as Department Name, Person-in-Charge, Contact Information, and Functional Scope. Each region can have multiple departments, and each department can manage multiple regions.\n4.User Management: Each user has a unique User ID, Username, Role, and Contact Information. Each department has multiple users, and each user has a different Permission Level.", "answer": {"Natural Disaster Data": {"Attributes": ["Data ID", "Data Type", "Data Source", "Upload Time", "Data Content", "Data Format", "Layer Type"], "Primary key": ["Data ID"], "Foreign key": {"Region ID": {"Region Information": "Region ID"}}}, "Region Information": {"Attributes": ["Region ID", "Region Name", "Administrative Division", "Latitude and Longitude", "Area", "Disaster Risk Level"], "Primary key": ["Region ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Person-in-Charge", "Contact Information", "Functional Scope"], "Primary key": ["Department ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Username", "Role", "Contact Information", "Permissions", "Department ID"], "Primary key": ["User ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Region and Department": {"Attributes": ["Region ID", "Department ID", "Division Scope"], "Primary key": ["Region ID", "Department ID"], "Foreign key": {"Region ID": {"Region Information": "Region ID"}, "Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aa79", "question": "\"The Intelligent Operation and Maintenance Management System for electrical equipment must meet core requirements including real-time monitoring, intelligent fault prediction, and remote monitoring interfaces. The system shall store basic information for each piece of equipment, such as equipment name, equipment type, manufacturer, and installation date, and shall record operational state parameters at different time points (such as temperature, vibration, etc.) to enable fault prediction through time series analysis and supervised learning models, coupled with continuous optimization using gradient descent and regularization techniques. To handle peak business periods and prevent data loss, the system shall implement a data buffering mechanism and utilize remote monitoring interfaces to ensure accurate transmission of real-time monitoring. The system shall record maintenance operations, including maintenance time, maintenance type, maintenance personnel, and maintenance costs, balancing maintenance frequency and costs based on equipment health indicators and predicted maintenance needs. For management and decision-making, the system can store historical data for each piece of equipment to perform trend analysis, providing references for decision models to achieve optimal resource allocation and fault prevention strategies.\"", "answer": {"Electrical Equipment": {"Attributes": ["Equipment ID", "Equipment Name", "Equipment Type", "Manufacturer", "Installation Date"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Log Record": {"Attributes": ["Equipment ID", "Record Time", "State Parameters"], "Primary key": ["Equipment ID", "Record Time"], "Foreign key": {"Equipment ID": {"Electrical Equipment": "Equipment ID"}}}, "Maintenance Record": {"Attributes": ["Equipment ID", "Maintenance Time", "Maintenance Personnel", "Maintenance Type", "Maintenance Cost"], "Primary key": ["Equipment ID", "Maintenance Time"], "Foreign key": {"Equipment ID": {"Electrical Equipment": "Equipment ID"}}}}}
{"id": "67552f0b13602ec03b41aa9c", "question": "The database design of an online bookstore management system includes relations for members, books, orders, and order details. The member table records member ID, username, password, address, postal code, phone number, expenditure, and points. The book table records book ID, type name, book title, author, publisher, publication date, ISBN, and price. The order table records order ID, member ID, sales amount, order date, and shipping date, where the order ID uniquely identifies an order, member ID associates with the member ID in the member table, and the order date must not be later than the shipping date. The order detail table records order ID, book ID, and quantity, describing each book and its quantity in an order. The system implements functions such as order creation, book querying, sales statistics, member spending records, and points calculation through these relations, ensuring data integrity and consistency, and supporting efficient query and management operations.", "answer": {"Member": {"Attributes": ["Member ID", "Username", "Password", "Address", "Postal Code", "Phone Number", "Expenditure", "Points"], "Primary key": ["Member ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Type Name", "Book Title", "Author", "Publisher", "Publication Date", "ISBN", "Price"], "Primary key": ["Book ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Member ID", "Sales Amount", "Order Date", "Shipping Date", "Points"], "Primary key": ["Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Order Detail": {"Attributes": ["Order ID", "Book ID", "Sales Quantity"], "Primary key": ["Book ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa9d", "question": "\"The system is designed to manage the business operations of multiple large chain stores within a corporate group. The specific functions include:\n1. Record the basic information of each store, including Store ID, name, address, and contact phone number.\n2. Record information for each department within the stores, including Department ID, name, distribution location, and contact phone number.\n3. Record employee information for each department, including Employee ID, name, position, phone number, and salary.\n4. Each department has a manager, record the manager's tenure.\n5. Each employee must register the name and contact phone number of exactly one emergency contact to allow for reaching the off-shift employee in urgent matters.\"", "answer": {"Store": {"Attributes": ["Store ID", "Name", "Address", "Contact Phone Number"], "Primary key": ["Store ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Distribution Location", "Contact Phone Number", "Manager", "Manager Tenure", "Belonging Store"], "Primary key": ["Department ID"], "Foreign key": {"Manager": {"Employee": "Employee ID"}, "Belonging Store": {"Store": "Store ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Phone Number", "Salary", "Emergency Contact", "Belonging Department"], "Primary key": ["Employee ID"], "Foreign key": {"Emergency Contact": {"Employee": "Employee ID"}, "Belonging Department": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aaa2", "question": "The business requirements description of the parking space management system is as follows:  \n\nThe parking lot has multiple parking spaces, each with a parking space number and a status (such as \"Vacant\" or \"Occupied\"). The parking lot is equipped with multiple entrances and exits, each with a unique number and specific location (such as \"East Gate\" or \"West Gate\"). After a vehicle enters the parking lot, the system records the vehicle information, including the vehicle ID, ticket number, and vehicle model.  \n\nFor each parking event, the parking lot management system needs to record the entry and exit information of each vehicle, including the vehicle ID, entry time, exit time, entrance number, exit number, and parking space number. Each parking record must be associated with specific vehicle, parking space, entrance, and exit information to enable real-time monitoring of parking space usage, optimize resource allocation in the parking lot, and provide accurate parking duration and billing basis.", "answer": {"Parking": {"Attributes": ["Parking Space ID", "Parking Space Status"], "Primary key": ["Parking Space ID"], "Foreign key": {}}, "Entrance": {"Attributes": ["Entrance Number", "Entrance Location"], "Primary key": ["Entrance Number"], "Foreign key": {}}, "Exit": {"Attributes": ["Exit Number", "Exit Location"], "Primary key": ["Exit Number"], "Foreign key": {}}, "Vehicle": {"Attributes": ["Vehicle ID", "License Plate Number", "Vehicle Model"], "Primary key": ["Vehicle ID"], "Foreign key": {}}, "Parking Record": {"Attributes": ["Parking Space ID", "Vehicle ID", "Entrance Number", "Exit Number", "Entry Time", "Exit Time", "Parking Duration", "Parking Fee"], "Primary key": ["Parking Space ID", "Vehicle ID"], "Foreign key": {"Parking Space ID": {"Parking": "Parking Space ID"}, "Entrance Number": {"Entrance": "Entrance Number"}, "Exit Number": {"Exit": "Exit Number"}, "Vehicle ID": {"Vehicle": "Vehicle ID"}}}}}
{"id": "67552f0b13602ec03b41aaa4", "question": "\"The system is required to routinely record patients' vital signs, including temperature, blood pressure, heart rate, and other data, generating a unique log ID and record time for each entry. These vital signs will be formatted and stored in a log file. If any vital sign exceeds the preset normal range, the system will send an alert message, including alert ID, patient ID, abnormal vital signs, alert time, and alert content. The preset normal ranges are maintained by doctors, and the system will save these normal range details for comparison.\"", "answer": {"Medical Record": {"Attributes": ["Record ID", "Patient ID", "Temperature", "Blood Pressure", "Heart Rate", "Record Time"], "Primary key": ["Record ID"], "Foreign key": {"Patient ID": {"Patient": "Patient ID"}}}, "Patient": {"Attributes": ["Patient ID", "Name", "Age", "Contact Number", "Emergency Contact Number"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Alert Record": {"Attributes": ["Alert ID", "Abnormal Record ID", "Alert Time", "Alert Content"], "Primary key": ["Alert ID"], "Foreign key": {"Abnormal Record ID": {"Medical Record": "Record ID"}}}}}
{"id": "67552f0b13602ec03b41aaab", "question": "The Library Management System tracks information related to borrowers and books, as well as the management of borrowing transactions and penalties for overdue returns. The main functional requirements of the system include:\n1.Borrower: Each borrower must have their borrowing-related information recorded, including Name, Overdue Books, and Fines.\n2.Books: Records detailed information about each book, such as Book Title, Author, Publication Date, Publisher, Stock, Loan Status, Loan Duration, and Fine.\n3.Borrower Loaned Books: When a borrower checks out a book, the system should record the Loan Date and the Expected Return Date.\n4.Fines: If a borrower returns a book late, a fine should be recorded, which includes the Fine Amount and Overdue Days.", "answer": {"Borrower": {"Attributes": ["Borrower ID", "Name", "Overdue Books", "Fines"], "Primary key": ["Borrower ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Book Title", "Author", "Publication Date", "Publisher", "Stock", "Loan Status", "Loan Duration", "Fine"], "Primary key": ["Book ID"], "Foreign key": {}}, "Borrower Loaned Books": {"Attributes": ["Borrower ID", "Book ID", "Loan Date", "Expected Return Date"], "Primary key": ["Borrower ID", "Book ID"], "Foreign key": {"Borrower ID": {"Borrower": "Borrower ID"}, "Book ID": {"Book": "Book ID"}}}, "Fines": {"Attributes": ["Borrower ID", "Book ID", "Fine Amount", "Overdue Days"], "Primary key": ["Borrower ID", "Book ID"], "Foreign key": {"Borrower ID": {"Borrower": "Borrower ID"}, "Book ID": {"Book": "Book ID"}}}}}
{"id": "67552f0b13602ec03b41aab0", "question": "This is a Patient Monitoring System. For patient management, the system records each patient's basic information, including unique medical record number, name, gender, address, ID card number, phone number, and admission time. For vital signs management, the system periodically collects patients' vital sign data, such as body temperature, blood pressure, heart rate, etc. Each vital sign has its upper and lower limits for normal range, which doctors can add or update. The system formats the collected vital sign data and stores it in logs, while comparing these data with preset normal ranges, sending warning messages if limits are exceeded. The system generates medical records based on vital sign data, recording diagnosis time and content. For treatment management, the system generates treatment recommendations based on vital sign data and medical records, which doctors and nurses can query to provide treatment accordingly.", "answer": {"Patient": {"Attributes": ["Medical record number", "Name", "Gender", "Address", "ID card number", "Phone number", "Admission time"], "Primary key": ["Medical record number"], "Foreign key": {}}, "Vital signs": {"Attributes": ["Feature name", "Normal range lower limit", "Normal range upper limit"], "Primary key": ["Feature name"], "Foreign key": {}}, "Monitoring": {"Attributes": ["Medical record number", "Feature name", "Feature value", "Record time"], "Primary key": ["Medical record number", "Feature name", "Record time"], "Foreign key": {"Feature name": {"Vital signs": "Feature name"}, "Medical record number": {"Patient": "Medical record number"}}}}}
{"id": "67552f0b13602ec03b41aab3", "question": "The system shall record alumni personal information, including Alumni ID, Name, Employer, Job Title, Department, Class, Enrollment Year, and ID Number. The donation management module shall record detailed information for each donation, including Donation ID, Donating Alumni, Donation Time, Donation Amount, Donation Type (such as one-time donation or recurring donation), and Donation Usage (such as sponsoring individuals or funding projects). Additionally, the system shall record basic information for each donation project, including Project ID, Project Name, and Start and End Time. Each project involves multiple beneficiary units, recording the benefit percentage for each unit and the specific benefit amount obtained by that unit from the project. Through the management of this information, the system shall effectively track the allocation and usage of alumni donations.", "answer": {"alumni": {"Attributes": ["Alumni ID", "Name", "Employer", "Job Title", "Department", "Class", "Enrollment Year", "ID Number"], "Primary key": ["Alumni ID"], "Foreign key": {"Employer": {"unit": "Unit ID"}}}, "donation record": {"Attributes": ["Donation ID", "Donating Alumni", "Donation Time", "Amount", "Type", "Usage"], "Primary key": ["Donation ID"], "Foreign key": {"Donating Alumni": {"alumni": "Alumni ID"}}}, "project": {"Attributes": ["Project ID", "Project Name", "Start Time", "End Time", "Total Donation Amount"], "Primary key": ["Project ID"], "Foreign key": {}}, "benefit detail": {"Attributes": ["Donation Project ID", "Beneficiary Unit", "Benefit Percentage"], "Primary key": ["Donation Project ID", "Beneficiary Unit"], "Foreign key": {"Beneficiary Unit": {"unit": "Unit ID"}, "Donation Project ID": {"project": "Project ID"}}}, "unit": {"Attributes": ["Unit ID", "Unit Name", "Unit Address"], "Primary key": ["Unit ID"], "Foreign key": {}}, "donation project": {"Attributes": ["Project ID", "Donation ID"], "Primary key": ["Donation ID"], "Foreign key": {"Donation ID": {"alumni": "Donation ID"}, "Project ID": {"donation record": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aabb", "question": "Business Requirements Description for Airline Ticket Reservation System:\nAn airline operates multiple flights, each of which has a Flight ID, Airline, Departure City, Departure Time, Destination, Arrival Time, and Ticket Price. The company records discount information, including Flight ID, Discount Start Date, Discount End Date, and Discount Rate. The company manages multiple passenger records, each of which includes Passenger ID, Passenger Name, Passenger Gender, Passenger Date of Birth, Passenger Phone, and VIP Discount. Each ticket purchase is recorded with a Ticket Order Number, Passenger ID, Flight ID, Travel Date, and Purchase Amount. The purchase amount may be influenced by flight discounts and VIP discounts.", "answer": {"Flight": {"Attributes": ["Flight ID", "Airline", "Departure City", "Departure Time", "Destination", "Arrival Time", "Ticket Price"], "Primary key": ["Flight ID"], "Foreign key": {}}, "Discount Information": {"Attributes": ["Flight ID", "Discount Start Date", "Discount End Date", "Discount Rate", "Discount ID"], "Primary key": ["Discount ID"], "Foreign key": {"Flight ID": {"Flight": "Flight ID"}}}, "Passenger": {"Attributes": ["Passenger ID", "Passenger Name", "Passenger Gender", "Passenger Date of Birth", "Passenger Phone", "VIP Discount"], "Primary key": ["Passenger ID"], "Foreign key": {}}, "Ticket Purchase Record": {"Attributes": ["Passenger ID", "Ticket Order Number", "Flight ID", "Travel Date", "Purchase Amount"], "Primary key": ["Ticket Order Number, Passenger ID, Flight ID"], "Foreign key": {"Passenger ID": {"Passenger": "Passenger ID"}, "Flight ID": {"Flight": "Flight ID"}}}}}
{"id": "67552f0b13602ec03b41aacb", "question": "In the File/Directory (AbstractFile) module, users can create files or directories. When creating, enter the file ID (FileID) as the Primary key to uniquely identify the file or directory; enter the name (Name) for easy identification; select the type (Type), which can only be a file or directory; the system automatically records the creation time (CreateTime) to save the creation time of the file or directory; the update time (UpdateTime) will be updated when the file or directory information is modified. Users can modify the name and type of the file or directory, and the system will update the update time accordingly.\nIn the Directory (Folder) module, when users create a directory, they enter the directory ID (FolderID) as the Primary key; associate the file ID (FileID) as the Foreign key to ensure that it is associated with the file or directory in the AbstractFile table; set the child file/directory list (ChildList) and add the ID of the child file or subdirectory to this list; users can add or delete child files/directories, and the system will update the child file/directory list and update the update time. Users can also modify the file ID of the directory, and the system will check the Foreign key association and update the update time.\nIn the File module, when creating a file, the user enters the file ID (FileID) as the Primary key; enters the name (Name) and selects the type (Type), limiting it to file; enters the file size (FileSize) to indicate the size of the file; the system will record the creation time (CreateTime) and update time (UpdateTime), and update the update time when the file information is modified. The user can modify the file name, type and file size, and the system will update the corresponding information and update the update time. \"", "answer": {"Abstract File": {"Attributes": ["File ID", "Name", "Type", "Creation Time", "Update Time"], "Primary key": ["File ID"], "Foreign key": {}}, "Directory": {"Attributes": ["Directory ID", "File ID", "Sub-file/directory list"], "Primary key": ["Directory ID"], "Foreign key": {"File ID": {"Abstract File": "File ID"}}}, "File": {"Attributes": ["File ID", "Name", "Type", "File Size", "Creation Time", "Update Time", "Abstract File ID", "Directory ID"], "Primary key": ["File ID"], "Foreign key": {"Directory ID": {"Directory": "Directory ID"}, "Abstract File ID": {"Abstract File": "File ID"}}}}}
{"id": "67552f0b13602ec03b41aadb", "question": "The database for an online pharmacy system shall be designed and implemented with the following requirements:\n\nThe system shall support customer registration, including filling out customer information, payment methods, and signing an authorization agreement; and login, allowing only registered customers to log in.\n\nThe system shall support prescription entry and submission, including filling out doctor information and medication information; and prescription validation, verifying doctor information and sending confirmation requests. The prescription status shall be set to \"Invalid Doctor Information\", \"Invalid Prescription\", \"Unable to Review\", or \"Approved for Payment\" based on the doctor's response or timeout.\n\nThe system shall support medication purchase, automatically calculating medication prices and mailing to customers who have paid.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Address", "Contact Information", "Email", "Password", "Agreement Status"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Payment Method": {"Attributes": ["Payment Method ID", "Customer ID", "Payment Type", "Payment Details"], "Primary key": ["Payment Method ID", "Customer ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Prescription": {"Attributes": ["Prescription ID", "Customer ID", "Doctor Name", "Doctor Hospital", "Doctor Contact Information", "Prescription Status", "Submission Time"], "Primary key": ["Prescription ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Medication": {"Attributes": ["Medication ID", "Medication Name", "Dosage", "Stock Quantity", "Price"], "Primary key": ["Medication ID"], "Foreign key": {}}, "Prescription Medication Association": {"Attributes": ["Prescription ID", "Medication ID", "Quantity"], "Primary key": ["Prescription ID", "Medication ID"], "Foreign key": {"Prescription ID": {"Prescription": "Prescription ID"}, "Medication ID": {"Medication": "Medication ID"}}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Prescription ID", "Total Price", "Order Status", "Order Time", "Mailing Address"], "Primary key": ["Order ID"], "Foreign key": {"Prescription ID": {"Prescription Medication Association": "Prescription ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Verification Log": {"Attributes": ["Log ID", "Prescription ID", "Verification Time", "Verification Result"], "Primary key": ["Log ID"], "Foreign key": {"Prescription ID": {"Prescription Medication Association": "Prescription ID"}}}}}
{"id": "67552f0b13602ec03b41ab0e", "question": "The supermarket chain management system is designed as follows: The system shall manage multiple supermarkets, where each supermarket information includes a unique name, address, and phone number. Each supermarket shall have multiple departments, where department information includes a unique name, department manager, and contact number. Each department shall have only one manager, and department manager is a type of employee position. Employee information shall include a unique Employee ID, name, contact information, position, and salary. Positions include manager, department manager, and sales representative. Each employee shall belong to only one department. Product information shall include a unique Product ID, name, model number, unit price, and quantity. Sales representatives shall be responsible for product allocation within the supermarket. One product can be allocated by multiple sales representatives, and one sales representative can be responsible for allocating multiple products. The system shall ensure operational efficiency and accurate product allocation through managing supermarket, department, employee, and product information.", "answer": {"Supermarket": {"Attributes": ["Supermarket ID", "Supermarket Name", "Address", "Telephone"], "Primary key": ["Supermarket ID"], "Foreign key": {"Manager": {"Department": "Employee ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Manager", "Contact Telephone"], "Primary key": ["Department ID"], "Foreign key": {"Department Manager": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Contact Information", "Position", "Salary", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Product": {"Attributes": ["Product ID", "Name", "Model", "Unit Price", "Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Distribution": {"Attributes": ["Employee ID", "Product ID", "Distribution Time"], "Primary key": ["Employee ID", "Product ID", "Distribution Time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0b13602ec03b41ab2b", "question": "Business Requirements Description for Pizza Shop Management System:\nA pizza shop offers a variety of pizzas, each of which has a Pizza ID, Pizza Name, Price, and Stock Quantity. The shop has multiple customers, and their Customer ID, Customer Name, Customer Phone, and Customer Address are recorded. The shop processes multiple orders, each of which has an Order ID, Customer ID, Order Date, Expected Delivery Date, and Order Status. Each order records the pizzas ordered and their quantities.", "answer": {"Pizza": {"Attributes": ["Pizza ID", "Pizza Name", "Price", "Stock Quantity"], "Primary key": ["Pizza ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone", "Customer Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order Date", "Expected Delivery Date", "Order Status", "Customer ID"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Ordered Pizza": {"Attributes": ["Order ID", "Pizza ID", "Pizza Quantity"], "Primary key": ["Order ID", "Pizza ID"], "Foreign key": {"Pizza ID": {"Pizza": "Pizza ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a789", "question": "A logistics company's freight management system has the following business requirements:\n\nThe company owns multiple freight trucks. Each truck has information including license plate number, model, and load capacity. The company undertakes multiple transportation tasks. Each task has information including task number, origin, destination, cargo name, weight, and transportation time. The company has multiple employees. Employee information includes employee ID, employee name, employee phone number, and employee role (driver or assistant). Each transportation task requires the assignment of one truck, one driver, and one assistant. The system records the start time and end time of each transportation task, and supports real-time monitoring and performance evaluation of transportation tasks.\n", "answer": {"Freight Truck": {"Attributes": ["License Plate Number", "Model", "Load Capacity"], "Primary key": ["License Plate Number"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Phone Number", "Role"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Transportation Task": {"Attributes": ["Task Number", "Origin", "Destination", "Cargo Name", "Weight", "Transportation Time", "Start Time", "End Time", "Assigned License Plate Number", "Driver ID", "Assistant ID"], "Primary key": ["Task Number"], "Foreign key": {"Assistant ID": {"Employee": "Employee ID"}, "Driver ID": {"Employee": "Employee ID"}, "Assigned License Plate Number": {"Freight Truck": "License Plate Number"}}}}}
{"id": "67552f0a13602ec03b41a790", "question": "Business requirements of the agricultural market sales system: The agricultural market sales system needs to manage sales in multiple markets. Each market has a market ID, name, address, and contact information. Each agricultural product has a product ID, name, specification, price, and current inventory. Each sales record includes market ID, product ID, sales date, sales quantity, sales unit price, and operator.", "answer": {"Market": {"Attributes": ["Market ID", "Name", "Address", "Contact Information"], "Primary key": ["Market ID"], "Foreign key": {}}, "Agricultural Products": {"Attributes": ["Product ID", "Name", "Specification", "Price", "Current Stock"], "Primary key": ["Product ID"], "Foreign key": {}}, "Sales Record": {"Attributes": ["Market ID", "Product ID", "Sales Date", "Sales Quantity", "Sales Unit Price", "Operator"], "Primary key": ["Market ID", "Product ID", "Sales Date"], "Foreign key": {"Product ID": {"Agricultural Products": "Product ID"}, "Market ID": {"Schema 0": "Market ID"}}}}}
{"id": "67552f0a13602ec03b41a791", "question": "To facilitate management, a fishing company has decided to introduce a database for tool management. This company manages various fishing tools, each with a unique tool ID, name, and model. The company needs to record each tool's usage, including usage time, user, and location. The system also needs to record maintenance details for the tools, including maintenance time, maintenance content, and the person performing maintenance. Additionally, the system should be able to assess the performance of each tool, including usage frequency and maintenance counts.", "answer": {"tool": {"Attributes": ["Tool ID", "Tool Name", "Tool Model", "Usage Frequency", "Maintenance Count"], "Primary key": ["Tool ID"], "Foreign key": {}}, "usage record": {"Attributes": ["Record ID", "Tool ID", "Usage Time", "User", "Usage Location"], "Primary key": ["Record ID"], "Foreign key": {"Tool ID": {"tool": "Tool ID"}}}, "maintenance record": {"Attributes": ["Maintenance ID", "Tool ID", "Maintenance Time", "Maintenance Person", "Maintenance Content"], "Primary key": ["Maintenance ID"], "Foreign key": {"Maintenance ID": {"tool": "Tool ID"}}}}}
{"id": "67552f0a13602ec03b41a794", "question": "The hotel has a membership system, and members can enjoy discounts and points. Each member has a membership number, name, phone number, registration date, and points. Members can book rooms, and each booking records member information, room information, booking status, and point changes.\n", "answer": {"Member": {"Attributes": ["Member ID", "Name", "Phone", "Registration date", "Points"], "Primary key": ["Member ID"], "Foreign key": {}}, "Room": {"Attributes": ["Room number", "Room type", "Price"], "Primary key": ["Room number"], "Foreign key": {}}, "Booking": {"Attributes": ["Member ID", "Room number", "Booking date", "Check-in date", "Check-out date", "Booking status", "Points change"], "Primary key": ["Member ID", "Room number", "Booking date"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Room number": {"Room": "Room number"}}}}}
{"id": "67552f0a13602ec03b41a7a2", "question": "The People's Political Consultative Conference requires a system to manage proposals from its members. Each proposal includes a Proposal ID, Proposal Content, Proposal Time, Proposer(s), and Status. A proposer can consist of multiple members, each with a Member ID, Name, Gender, Date of Birth, Party Affiliation, and Position. The system also needs to record the handling of each proposal, which includes Handling Time, Handler, and Handling Opinion. The handler is a member different from the proposer.\n", "answer": {"Proposal": {"Attributes": ["Proposal ID", "Proposal Content", "Proposal Time", "Status"], "Primary key": ["Proposal ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Name", "Gender", "Date of Birth", "Party Affiliation", "Position"], "Primary key": ["Member ID"], "Foreign key": {}}, "Proposal Submission": {"Attributes": ["Proposal ID", "Member ID"], "Primary key": ["Proposal ID", "Member ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Proposal ID": {"Proposal": "Proposal ID"}}}, "Proposal Handling": {"Attributes": ["Proposal ID", "Member ID", "Handling Time", "Handling Opinion"], "Primary key": ["Proposal ID", "Member ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Proposal ID": {"Proposal": "Proposal ID"}}}}}
{"id": "67552f0a13602ec03b41a7a3", "question": "A social security organization requires the management of social security information, including the basic information of the insured, types of social security, payment details, and receipt details. The insured's information includes Social Security ID, name, gender, date of birth, identity card number, and contact information; the social security types include a type ID, name, and description; payment details record the time, amount, and payer of each payment; receipt details record the time, amount, and recipient of each receipt.", "answer": {"Insured Person": {"Attributes": ["Social Security ID", "Name", "Gender", "Date of Birth", "Identity Card Number", "Contact Information"], "Primary key": ["Social Security ID"], "Foreign key": {}}, "Social Security Type": {"Attributes": ["Type ID", "Name", "Description"], "Primary key": ["Type ID"], "Foreign key": {}}, "Insured Person Payment": {"Attributes": ["Payment ID", "Social Security ID", "Type ID", "Payment Time", "Payment Amount", "Payer"], "Primary key": ["Payment ID", "Social Security ID", "Type ID"], "Foreign key": {"Social Security ID": {"Insured Person": "Social Security ID"}, "Type ID": {"Social Security Type": "Type ID"}}}, "Insured Person Receipt": {"Attributes": ["Receipt ID", "Social Security ID", "Type ID", "Receipt Time", "Receipt Amount", "Recipient"], "Primary key": ["Receipt ID", "Social Security ID", "Type ID"], "Foreign key": {"Social Security ID": {"Insured Person": "Social Security ID"}, "Type ID": {"Social Security Type": "Type ID"}}}}}
{"id": "67552f0a13602ec03b41a7a8", "question": "Business requirements description for a Farmland Management Information System: The system needs to manage multiple farms, with each farm recording farm ID, farm owner name, owner type (company or individual), owner contact information, and address. Each farm can have multiple plots of land. Each plot has a plot ID, area, soil type, crops, and current status (such as \"sowing\", \"growing\", \"harvesting\", etc.). Each crop has an ID, name, growth cycle, suitable soil type, and suitable climate conditions. For each planting operation, the system needs to record plot ID, crop, planting time, expected harvest time, planting quantity, and operator. For each harvesting operation, the system needs to record plot ID, crop, harvest time, harvest quantity, and operator.", "answer": {"Farm": {"Attributes": ["Farm ID", "Owner name", "Owner type", "Contact information", "Address"], "Primary key": ["Farm ID"], "Foreign key": {}}, "Plot": {"Attributes": ["Plot ID", "Farm ID", "Area", "Soil type", "Current status"], "Primary key": ["Plot ID"], "Foreign key": {"Farm ID": {"Farm": "Farm ID"}}}, "Crop": {"Attributes": ["Crop ID", "Crop name", "Growth cycle", "Suitable soil type", "Suitable climate conditions"], "Primary key": ["Crop ID"], "Foreign key": {}}, "Planting record": {"Attributes": ["Plot ID", "Crop ID", "Planting time", "Planting quantity", "Operator", "Expected harvest time"], "Primary key": ["Plot ID", "Crop ID", "Planting time"], "Foreign key": {"Crop ID": {"Crop": "Crop ID"}, "Plot ID": {"Plot": "Plot ID"}}}, "Harvest record": {"Attributes": ["Plot ID", "Crop ID", "Harvest time", "Harvest quantity", "Operator"], "Primary key": ["Plot ID", "Crop ID", "Harvest time"], "Foreign key": {"Crop ID": {"Crop": "Crop ID"}, "Plot ID": {"Plot": "Plot ID"}}}}}
{"id": "67552f0a13602ec03b41a7c9", "question": "Business Requirements Description for Leather Manufacturing Management System:\n\nA leather goods and footwear manufacturing company needs to manage the production, inventory, and sales of leather products and shoes. Each product has Attributes such as Product ID, Product Name, Product Type, Production Date, and Price. The company has multiple departments collaborating, and each department has a Department ID, Department Name, Manager, and Contact Information. Employee management includes Employee ID, Employee Name, Employee Gender, Employee Phone, Department ID, and Job Position. During production, the system records the products produced (one or more), Production Quantity, Producer, and Production Time. For inventory management, the system records the Product ID, Stock Quantity, and Stock In Time. For sales, the system records the Product ID, Sales Quantity, Salesperson, Customer, and Sales Time. The system also supports performance evaluation for each department.", "answer": {"Product": {"Attributes": ["Product ID", "Product Name", "Product Type", "Production Date", "Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Manager", "Contact Information"], "Primary key": ["Department ID"], "Foreign key": {"Manager": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Employee Name", "Employee Gender", "Employee Phone", "Job Position", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Production Record": {"Attributes": ["Product ID", "Producer", "Production Time", "Production Quantity"], "Primary key": ["Product ID", "Producer", "Production Time"], "Foreign key": {"Producer": {"Employee": "Employee ID"}}}, "Inventory Record": {"Attributes": ["Product ID", "Stock In Time", "Stock Quantity"], "Primary key": ["Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}, "Sales Record": {"Attributes": ["Salesperson", "Customer", "Sales Time", "Product ID", "Sales Quantity"], "Primary key": ["Salesperson", "Sales Time", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Salesperson": {"Employee": "Employee ID"}}}, "Performance Evaluation": {"Attributes": ["Department ID", "Evaluation Time", "Evaluation Score"], "Primary key": ["Department ID", "Evaluation Time"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a7ce", "question": "Business requirements description for the motor vehicle repair system: A motor vehicle repair service station wants to use a database to manage the repair information of the station, which provides vehicle repair and maintenance services. The service station has multiple repair stations, each station has several repair technicians, and it is required to record the information of the repair technicians, including Technician ID, Technician Name, Technician Contact Number, and Technician Skill Level. Each repair task has a Task ID, Vehicle Information (License Plate Number, Vehicle Model, Vehicle Owner Name, Owner Contact Number), Repair Date, Repair Type, and Repair Duration. After the repair is completed, it is necessary to record the Repair Cost, Repair Effect, and Owner Evaluation. The performance evaluation of the repair technicians is based on the number of repair tasks completed and the satisfaction of the vehicle owners.", "answer": {"station": {"Attributes": ["Station ID", "Station Name"], "Primary key": ["Station ID"], "Foreign key": {}}, "repair technician": {"Attributes": ["Technician ID", "Station ID", "Technician Name", "Contact Number", "Skill Level"], "Primary key": ["Technician ID"], "Foreign key": {"Station ID": {"station": "Station ID"}}}, "user": {"Attributes": ["User ID", "Name", "Contact Number"], "Primary key": ["User ID"], "Foreign key": {}}, "vehicle": {"Attributes": ["License Plate Number", "Vehicle Model", "Owner ID"], "Primary key": ["License Plate Number"], "Foreign key": {"Owner ID": {"user": "User ID"}}}, "repair record": {"Attributes": ["Task ID", "License Plate Number", "Repair Date", "Repair Type", "Repair Duration", "Repair Cost", "Technician ID", "Repair Effect", "Owner Evaluation"], "Primary key": ["Task ID"], "Foreign key": {"Technician ID": {"repair technician": "Technician ID"}, "License Plate Number": {"vehicle": "License Plate Number"}}}}}
{"id": "67552f0a13602ec03b41a7cf", "question": "The Electronic Device Repair Service Center provides repair services for electronic devices such as mobile phones and computers. The service center has multiple repair workstations, with multiple repair technicians at each workstation. Each repair task includes a Task ID, Customer Information (Customer Name, Customer Phone Number), Product Information (Product Name, Model Number, Fault Description), Repair Date, Repair Type, and Repair Duration. After completion of repairs, the system must record Repair Cost, Repair Results, and Customer Feedback. Repair technician performance evaluation is based on the number of completed repair tasks and customer satisfaction ratings.", "answer": {"Workstation": {"Attributes": ["Workstation ID", "Workstation Name"], "Primary key": ["Workstation ID"], "Foreign key": {}}, "Repair Technician": {"Attributes": ["Repair Technician ID", "Repair Technician Name", "Repair Technician Phone", "Workstation ID"], "Primary key": ["Repair Technician ID"], "Foreign key": {"Workstation ID": {"Workstation": "Workstation ID"}}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Model"], "Primary key": ["Product ID"], "Foreign key": {}}, "Repair Record": {"Attributes": ["Repair Technician ID", "Product ID", "Repair Time", "Repair Type", "Repair Duration", "Customer Name", "Customer Phone", "Fault Description", "Customer Feedback"], "Primary key": ["Repair Technician ID", "Product ID", "Repair Time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Repair Technician ID": {"Repair Technician": "Repair Technician ID"}}}}}
{"id": "67552f0a13602ec03b41a7d5", "question": "The daily-use products sales company sells home appliances, furniture, and other daily-use products. The company has multiple sales teams, each consisting of several sales personnel. Each sales task is identified by a task ID and includes customer information (customer name, customer telephone), product information (product name, model, price), sales date, sales quantity, and sales cost. After completing a sale, the customer evaluation must be recorded. The performance evaluation of sales personnel is based on the number of sales tasks completed and customer satisfaction.\n", "answer": {"Sales Team": {"Attributes": ["Team ID", "Team Name"], "Primary key": ["Team ID"], "Foreign key": {}}, "Salesperson": {"Attributes": ["Salesperson ID", "Name", "Age", "Sex", "Telephone", "Belongs to Team ID"], "Primary key": ["Salesperson ID"], "Foreign key": {"Belongs to Team ID": {"Sales Team": "Team ID"}}}, "Sales Task": {"Attributes": ["Task ID", "Customer Name", "Customer Telephone", "Product Name", "Product Model", "Product Price", "Sales Date", "Sales Quantity", "Sales Cost", "Belongs to Team ID"], "Primary key": ["Task ID"], "Foreign key": {"Belongs to Team ID": {"Sales Team": "Team ID"}}}, "Task Record": {"Attributes": ["Record ID", "Task ID", "Customer Evaluation"], "Primary key": ["Record ID"], "Foreign key": {"Task ID": {"Sales Task": "Task ID"}}}, "Performance Evaluation": {"Attributes": ["Evaluation ID", "Salesperson ID", "Task Completion Quantity", "Customer Satisfaction"], "Primary key": ["Evaluation ID"], "Foreign key": {"Salesperson ID": {"Salesperson": "Salesperson ID"}}}}}
{"id": "67552f0a13602ec03b41a7d7", "question": "The construction company undertakes multiple construction projects. Each project has a project manager, project name, start date, estimated completion date, actual completion date, project budget, and project location. The company has multiple departments, each responsible for different projects. Each department has a department name and department head. Each project involves multiple employees, and each employee can participate in multiple projects. Each employee has an employee number, name, date of birth, gender, phone number, and position. When an employee participates in a project, the project they participate in, participation time, role, and work hours need to be recorded. The project management information system needs to be able to track project progress and cost, as well as generate statistics on employee workload.", "answer": {"department": {"Attributes": ["Department ID", "Department Name", "Department Head"], "Primary key": ["Department ID"], "Foreign key": {"Department Head": {"employee": "Employee Number"}}}, "employee": {"Attributes": ["Employee Number", "Name", "Date of Birth", "Gender", "Phone Number", "Position", "Department ID"], "Primary key": ["Employee Number"], "Foreign key": {"Department ID": {"department": "Department ID"}}}, "project": {"Attributes": ["Project Number", "Project Manager ID", "Project Name", "Start Date", "Estimated Completion Date", "Actual Completion Date", "Project Budget", "Project Location", "Project Progress", "Actual Cost"], "Primary key": ["Project Number"], "Foreign key": {"Project Manager ID": {"employee": "Employee Number"}}}, "project participation record": {"Attributes": ["Employee Number", "Project Number", "Participation Time", "Role", "Work Hours"], "Primary key": ["Employee Number", "Project Number", "Participation Time"], "Foreign key": {"Employee Number": {"employee": "Employee Number"}, "Project Number": {"project": "Project Number"}}}}}
{"id": "67552f0a13602ec03b41a7d9", "question": "A construction and installation company is responsible for the supply of materials for multiple projects. Each material has a material number, name, specification, unit price and inventory. Each project needs to record the materials used and their quantity, date of use, department using them and employee using them. The material management information system needs to be able to count the use of materials and manage inventory.\n\n", "answer": {"Material": {"Attributes": ["Material ID", "Material Name", "Specifications", "Unit Price", "Inventory"], "Primary key": ["Material ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Start Date", "Expected Completion Date", "Actual Completion Date", "Project Budget", "Project Location"], "Primary key": ["Project ID"], "Foreign key": {}}, "Material Usage Record": {"Attributes": ["Usage Record ID", "Project ID", "Material ID", "Usage Date", "Usage Quantity", "Usage Employee ID"], "Primary key": ["Usage Record ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Material ID": {"Material": "Material ID"}, "Project ID": {"Project": "Project ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Employee Name", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a7de", "question": "A construction installation company has multiple suppliers, each of which has a Supplier ID, name, telephone, email, and address. The company undertakes multiple installation projects, each requiring the procurement of materials from suppliers. The procurement records must include Project ID, Supplier ID, purchase date, material name, material quantity, unit price of the material, and total price. The Supplier Management Information System shall be capable of managing procurement records and assessing supplier credibility.\n", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Name", "Telephone", "Email", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Start Date", "Expected Completion Date", "Actual Completion Date", "Project Budget", "Project Location"], "Primary key": ["Project ID"], "Foreign key": {}}, "Procurement Record": {"Attributes": ["Procurement Record ID", "Project ID", "Supplier ID", "Purchase Date", "Material ID", "Material Quantity", "Material Unit Price", "Total Price"], "Primary key": ["Procurement Record ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Project ID": {"Project": "Project ID"}}}, "Supplier Credit Assessment": {"Attributes": ["Assessment ID", "Supplier ID", "Assessment Date", "Assessment Content", "Assessment Score"], "Primary key": ["Assessment ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}}}, "Material": {"Attributes": ["Material ID", "Material Name", "Material Description"], "Primary key": ["Material ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7e5", "question": "Real Estate Management System stores information on multiple properties for sale. Each property has a Property ID, address, area, sale price, and sale status. Sales personnel are identified by Employee ID, name, contact phone, and commission rate. Clients are recorded with a Client ID, name, contact phone, and address. Each sale transaction records the Property ID, sale date, sale price, sales personnel information, and client information. ", "answer": {"Property": {"Attributes": ["Property ID", "Address", "Area", "Sale Price", "Sale Status"], "Primary key": ["Property ID"], "Foreign key": {}}, "Sales Personnel": {"Attributes": ["Employee ID", "Name", "Contact Phone", "Commission Rate"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Client": {"Attributes": ["Client ID", "Name", "Contact Phone", "Address"], "Primary key": ["Client ID"], "Foreign key": {}}, "Sales Record": {"Attributes": ["Property ID", "Sale Date", "Sale Price", "Sales Personnel ID", "Client ID"], "Primary key": ["Property ID", "Employee ID", "Client ID"], "Foreign key": {"Client ID": {"Client": "Client ID"}, "Property ID": {"Property": "Property ID"}, "Sales Personnel ID": {"Sales Personnel": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7ee", "question": "The database shall be designed to manage the bank's mortgage application process.\nThe system shall record basic information for each applicant, including Applicant ID, Name, Phone Number, Email Address, and Identification Number. \nEach loan application shall include a unique Application Number, Applicant ID, Requested Loan Amount, Loan Term, and current Approval Status.       \nThe loan approval process shall be recorded in detail in the Loan Approval Form, including Application Number, Approval Date, Approval Result, and Approver ID.\nAdditionally, the system shall record detailed information for each approver, including Approver ID, Name, Phone Number, and Email Address.\nEach loan application may go through multiple approval stages, with each stage handled by different approvers. The system shall record each approval action and result.\n", "answer": {"Applicant": {"Attributes": ["Applicant ID", "Name", "Phone Number", "Email Address", "Identification Number"], "Primary key": ["Applicant ID"], "Foreign key": {}}, "Loan Application": {"Attributes": ["Application Number", "Applicant ID", "Loan Amount", "Loan Term", "Approval Status"], "Primary key": ["Application Number"], "Foreign key": {"Applicant ID": {"Applicant": "Applicant ID"}}}, "Loan Approval": {"Attributes": ["Application Number", "Approval Date", "Approval Result", "Approver ID"], "Primary key": ["Approver ID", "Application Number", "Approval Date"], "Foreign key": {"Approver ID": {"Approver": "Approver ID"}, "Application Number": {"Loan Application": "Application Number"}}}, "Approver": {"Attributes": ["Approver ID", "Name", "Phone Number", "Email Address"], "Primary key": ["Approver ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7f0", "question": "A company manages multiple construction projects, each with a Project ID, Project Name, Project Location, and Project Manager.\nThe Project Manager has a unique ID, as well as a Name, Phone Number, and Email.\nEach project generates multiple construction cost records, each record includes Expense Type, Cost Amount, Record Date, and Recording Staff.        \nThe Recording Staff also have their own ID, Name, Phone Number, and Email.", "answer": {"Project": {"Attributes": ["Project ID", "Project Name", "Project Location", "Project Manager ID"], "Primary key": ["Project ID"], "Foreign key": {"Project Manager ID": {"Personnel": "Personnel ID"}}}, "Personnel": {"Attributes": ["Personnel ID", "Name", "Phone Number", "Email", "Role"], "Primary key": ["Personnel ID"], "Foreign key": {}}, "Construction Cost Record": {"Attributes": ["Record ID", "Expense Type", "Cost Amount", "Record Date", "Recording Staff ID", "Project ID"], "Primary key": ["Record ID"], "Foreign key": {"Recording Staff ID": {"Personnel": "Personnel ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a7f1", "question": "A community property management system is mainly used to manage communities, property information and maintenance tasks. The system covers the basic information of the community, detailed data of the property and the management of maintenance tasks, including the allocation of maintenance personnel, task execution, cost and status tracking, etc. The business requirements are as follows:\nCommunity management: The system manages the basic information of each community, such as the community name, location and property manager. This information can ensure the effective management of each community by the property management party.\nProperty management: Each community contains several properties, and the system records the address, area, maintenance status, etc. of each property. Property information helps to manage the maintenance and repair of each property in the community.\nMaintenance task management: The system can record the content of the maintenance task, the allocation of maintenance personnel, and the cost, duration, status and other information of the maintenance in detail. Through the maintenance task table, the administrator can track the maintenance progress of each property to ensure that the task is completed on time.\nMaintenance personnel management: The system can manage the basic information of maintenance personnel and assign different maintenance personnel according to the maintenance task to ensure the timely and effective completion of the maintenance task.", "answer": {"Community information": {"Attributes": ["Community ID", "Community name", "Location", "Property manager"], "Primary key": ["Community ID"], "Foreign key": {}}, "Property information": {"Attributes": ["Property ID", "Address", "Area", "Maintenance status", "Community ID"], "Primary key": ["Property ID"], "Foreign key": {"Community ID": {"Community information": "Community ID"}}}, "Maintenance staff information": {"Attributes": ["Maintenance staff ID", "Name", "Position", "Contact information"], "Primary key": ["Maintenance staff ID"], "Foreign key": {}}, "Maintenance task": {"Attributes": ["Property ID", "Maintenance content", "Maintenance cost", "Maintenance staff ID", "Maintenance time"], "Primary key": ["Property ID", "Maintenance staff ID", "Maintenance time"], "Foreign key": {"Maintenance staff ID": {"Maintenance staff information": "Maintenance staff ID"}, "Property ID": {"Property information": "Property ID"}}}}}
{"id": "67552f0a13602ec03b41a7f6", "question": "A retailer needs to manage its sales data, including multiple stores and the products in the stores. Each store has a store number, name, address, and manager. Each product has a product number, name, model, barcode, and price. The store needs to record daily sales, including sales time, product number, sales quantity, sales amount, and salesperson. The system also needs to conduct performance appraisals on stores, with appraisal indicators including sales and customer satisfaction.", "answer": {"Store": {"Attributes": ["Store number", "Store name", "Store address", "Store manager"], "Primary key": ["Store number"], "Foreign key": {}}, "Product": {"Attributes": ["Product number", "Product name", "Product model", "Product barcode", "Product price"], "Primary key": ["Product number"], "Foreign key": {}}, "Sales Record": {"Attributes": ["Store number", "Product Number", "Sales Time", "Sales Quantity", "Sales Amount", "Sales Personnel"], "Primary key": ["Store number", "Product number", "Sales time"], "Foreign key": {"Product number": {"Product": "Product number"}, "Store number": {"Store": "Store number"}}}, "Store Performance": {"Attributes": ["Store Number", "Sales Amount", "Customer Satisfaction"], "Primary key": ["Store Number"], "Foreign key": {"Store Number": {"Store": "Store Number"}}}}}
{"id": "67552f0a13602ec03b41a7f7", "question": "Business requirements for wholesaler customer management system: A wholesaler needs to manage its customer information, including customer number, name, address, contact person, and phone number. Every time a customer places an order, the order number, customer number, order time, product number, quantity, and total price need to be recorded. The system also needs to rate the customer's credit, and the rating indicators include the number of historical orders and the order amount (which can be exported based on order records).", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Address", "Contact Person", "Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order Time", "Total Price"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Order Detail": {"Attributes": ["Order Detail ID", "Order ID", "Product ID", "Quantity"], "Primary key": ["Order Detail ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}}}, "Customer Credit Rating": {"Attributes": ["Customer ID", "Credit Rating"], "Primary key": ["Customer ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a7f9", "question": "A retail merchant requires a system to manage member information, including Member ID, Name, Phone Number, and Points. The merchant operates multiple products and needs to record Product ID and Product Name. Each time a member shops, the system must record the Shopping Time, Store ID, Product ID, Quantity, and Total Price. The system also needs to classify members into levels, with level indicators including cumulative points range and shopping frequency range.", "answer": {"Member": {"Attributes": ["Member ID", "Name", "Phone Number", "Points", "Level ID"], "Primary key": ["Member ID"], "Foreign key": {"Level ID": {"Level": "Level ID"}}}, "Level": {"Attributes": ["Level ID", "Points Range", "Shopping Frequency Range"], "Primary key": ["Level ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name"], "Primary key": ["Product ID"], "Foreign key": {}}, "Shopping Record": {"Attributes": ["Member ID", "Product ID", "Shopping Time", "Quantity", "Store ID", "Total Price"], "Primary key": ["Member ID", "Product ID", "Shopping Time"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0a13602ec03b41a7fa", "question": "A supply chain management system primarily utilized for managing suppliers, products, and procurement information. The system supports supplier management, inventory management of goods, and records of the procurement process, including detailed information on procured goods, supplier contact information, and payment status. The system can support the following functions:\n\nSupplier Management: The system can manage basic information of multiple suppliers, including the supplier's name, address, contact person, phone number, and email. With this information, companies can establish long-term cooperative relationships with suppliers and assess the performance of suppliers based on procurement history.\n\nProduct Management: The system records information such as the product's name, model, price, shelf life, and stock quantity. This data aids in inventory management, product procurement, and sales decision-making.\n\nProcurement Management: The system tracks each procurement of goods and its details, including the procured product ID, supplier, quantity of purchase, total price, and payment status. The procured goods table is used to record the status of each procurement transaction, payment methods, and delivery information, ensuring the smooth execution of the procurement process.", "answer": {"Procured Product": {"Attributes": ["Procured Product ID", "Supplier ID", "Procurement Time", "Procurement Quantity", "Total Procurement Price", "Payment Method", "Payment Status", "Delivery Address", "Recipient Name", "Recipient Phone"], "Primary key": ["Procured Product ID", "Supplier ID", "Procurement Time"], "Foreign key": {"Procured Product ID": {"schema_3": "Supplier ID"}, "Supplier ID": {"schema_4": "Product ID"}}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Supplier Address", "Historical Procurement Quantity", "Historical Procurement Amount", "Credit Rating", "Contact Person", "Phone", "Email", "Fax", "Company Website"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Model", "Product Price", "Product Category", "Shelf Life", "Stock Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7fb", "question": "Business requirements for a retail supermarket promotion management system: A retailer manages multiple stores and needs to record their store numbers, store names, and store addresses. The retailer also sells a variety of products, each of which has a product number, product name, product model, product barcode, and product price. A retail supermarket needs to manage its promotional activities, including activity numbers, activity names, activity times, participating store numbers, promotional product numbers, and discounts. A promotional activity may include multiple stores and multiple products. After each promotion, the promotion effect needs to be recorded, including sales, sales volume, and the number of participating members. The system also needs to evaluate the effectiveness of promotional activities, and the evaluation indicators include sales growth rate and customer participation.", "answer": {"Promotion Activity": {"Attributes": ["Activity ID", "Activity Name", "Activity Time", "Discount"], "Primary key": ["Activity ID"], "Foreign key": {}}, "Store": {"Attributes": ["Store ID", "Store Name", "Store Address"], "Primary key": ["Store ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Model", "Product Barcode", "Product Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Promotion Effect Record": {"Attributes": ["Promotion Effect Record ID", "Activity ID", "Sales Amount", "Sales Quantity", "Participating Member Count"], "Primary key": ["Promotion Effect Record ID"], "Foreign key": {"Activity ID": {"Schema 0": "Activity ID"}}}, "Promotion Effect Evaluation": {"Attributes": ["Activity ID", "Sales Growth Rate", "Customer Engagement"], "Primary key": ["Activity ID"], "Foreign key": {"Activity ID": {"Schema 0": "Activity ID"}}}, "Promotion Activity Participating Store": {"Attributes": ["Activity ID", "Store ID"], "Primary key": ["Activity ID", "Store ID"], "Foreign key": {"Activity ID": {"Schema 0": "Activity ID"}, "Store ID": {"Store": "Store ID"}}}, "Promotion Activity Participating Product": {"Attributes": ["Activity ID", "Product ID", "Discount"], "Primary key": ["Activity ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Activity ID": {"Schema 0": "Activity ID"}}}}}
{"id": "67552f0a13602ec03b41a808", "question": "A sports event management company requires the development of a system to manage event, team, and referee information. The system will encompass basic event information such as event name, type, and start and end dates, team information such as team name, head coach name, and associated event, and referee information such as referee name and contact details. The system must support recording referee information for each event and associating referees with events to ensure that the arrangement of referees for each activity in the event is reasonable and transparent.", "answer": {"Participating Teams": {"Attributes": ["Team ID", "Team Name", "Team Size", "Team Members", "Team Leader Name", "Team Leader Phone", "Head Coach Name", "Head Coach Phone"], "Primary key": ["Team ID"], "Foreign key": {}}, "Referees": {"Attributes": ["Referee ID", "Referee Name", "Referee Gender", "Referee Email", "Referee Phone"], "Primary key": ["Referee ID"], "Foreign key": {}}, "Match Results": {"Attributes": ["Event ID", "Team ID", "Team Ranking", "Referee Evaluation Result"], "Primary key": ["Event ID", "Team ID"], "Foreign key": {"Event ID": {"Events": "Event ID"}, "Team ID": {"Referees": "Team ID"}}}, "Events": {"Attributes": ["Event ID", "Event Name", "Event Type", "Start Date", "End Date", "Referee ID", "Winning Team ID"], "Primary key": ["Event ID"], "Foreign key": {"Referee ID": {"Events": "Event ID"}, "Team ID": {"Referees": "Referee ID"}}}}}
{"id": "67552f0a13602ec03b41a811", "question": "Business requirement description:\n\nThe cultural and art company needs to manage multiple performances, each of which has multiple actors and multiple performance locations. The system needs to record the name, time, and location of each performance, as well as the names of the actors and detailed information of the performance location.", "answer": {"Performance Event": {"Attributes": ["Performance Event ID", "Name", "Time", "Location"], "Primary key": ["Performance Event ID"], "Foreign key": {}}, "Actor": {"Attributes": ["Actor ID", "Name"], "Primary key": ["Actor ID"], "Foreign key": {}}, "Performance List": {"Attributes": ["Actor ID", "Performance Event ID"], "Primary key": ["Actor ID", "Performance Event ID"], "Foreign key": {"Performance Event ID": {"Actor": "Performance Event ID"}, "Actor ID": {"Schema 0": "Actor ID"}}}}}
{"id": "67552f0a13602ec03b41a814", "question": "Business requirements for the ecological protection zone management system: An ecological protection zone needs to manage multiple areas, each of which has an area number, name, geographic location, and administrator. The protection zone needs to record the species and number of plants and animals in each area. Each record needs to include the plant and animal record number, record time, recorder, plant and animal species, and number. The system also needs to record environmental changes within the protection zone, including environmental change record number, temperature, humidity, rainfall, etc., and indicate the time and location of the change.", "answer": {"Region": {"Attributes": ["Region ID", "Name", "Geographical Location", "Administrator"], "Primary key": ["Region ID"], "Foreign key": {}}, "Flora and Fauna Record": {"Attributes": ["Record ID", "Region ID", "Record Time", "Recorder", "Type", "Quantity"], "Primary key": ["Record ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}}}, "Environmental Change Record": {"Attributes": ["Change ID", "Region ID", "Change Time", "Location", "Temperature", "Humidity", "Rainfall"], "Primary key": ["Change ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}}}}}
{"id": "67552f0a13602ec03b41a81a", "question": "1. Business Requirements Description (Translated):\nThe Public Facility Maintenance System is designed to help a city\u2019s management organization oversee various public facilities such as streetlights, parks, and bridges. The system needs to manage the following aspects:\nEach facility should have a unique Facility ID, Name, Location, Responsible Person, and Creation Date.The system should record the maintenance details for each facility, including Maintenance Time, Maintenance Content, Maintenance Personnel, and Maintenance Costs.Track the Usage Time, Usage Frequency, and User Feedback for each facility.Each user has a unique User ID and Name, and their interactions with the facilities are also recorded in the system.", "answer": {"Facility": {"Attributes": ["Facility ID", "Facility Name", "Facility Location", "Facility Responsible Person", "Creation Date"], "Primary key": ["Facility ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "User Name"], "Primary key": ["User ID"], "Foreign key": {}}, "Facility Maintenance": {"Attributes": ["Facility ID", "User ID", "Maintenance Time", "Maintenance Content", "Maintenance Cost"], "Primary key": ["Facility ID", "User ID", "Maintenance Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Facility ID": {"Facility": "Facility ID"}}}, "Facility Usage": {"Attributes": ["Facility ID", "User ID", "Usage Time", "Usage Frequency", "User Feedback"], "Primary key": ["Facility ID", "User ID", "Usage Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Facility ID": {"Facility": "Facility ID"}}}}}
{"id": "67552f0a13602ec03b41a820", "question": "The Water Treatment Company Equipment Management System needs to monitor the operational status of its equipment. The system will track the following details:\nEach piece of equipment has a unique Equipment ID, Name, Model, Installation Location, and Installation Date.For each operation of the equipment, the system needs to record Start Time, End Time,Operational Status, and the Operator ID responsible. Each operator has a unique Operator ID, Name, Department, and Contact Information.", "answer": {"Equipment": {"Attributes": ["Equipment ID", "Equipment Name", "Equipment Model", "Installation Location", "Installation Date"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Operator": {"Attributes": ["Operator ID", "Name", "Department", "Contact Information"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Equipment Operation": {"Attributes": ["Equipment ID", "Operator ID", "Start Time", "End Time", "Operational Status"], "Primary key": ["Equipment ID", "Operator ID", "Start Time"], "Foreign key": {"Operator ID": {"Operator": "Operator ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}}}
{"id": "67552f0a13602ec03b41a828", "question": "The laboratory center manages multiple laboratories, and each laboratory has multiple experimental equipment. Each equipment has equipment number, name, model, purchase date, and status. The laboratory has laboratory number, name, and location. Equipment maintenance records need to record maintenance number, equipment number, maintenance date, maintenance personnel, and maintenance content.\n", "answer": {"Laboratory": {"Attributes": ["Laboratory Number", "Laboratory Name", "Laboratory Location"], "Primary key": ["Laboratory Number"], "Foreign key": {}}, "Equipment": {"Attributes": ["Equipment Number", "Equipment Name", "Equipment Model", "Purchase Date", "Equipment Status", "Laboratory Number"], "Primary key": ["Equipment Number"], "Foreign key": {"Laboratory Number": {"Laboratory": "Laboratory Number"}}}, "Maintenance record": {"Attributes": ["Maintenance Number", "Equipment Number", "Maintenance Date", "Maintenance personnel", "Maintenance content"], "Primary key": ["Maintenance Number"], "Foreign key": {"Equipment Number": {"Equipment": "Equipment Number"}}}}}
{"id": "67552f0a13602ec03b41a82e", "question": "The system shall record basic information of attendees, including name, gender, organization, and position. Attendee information helps with post-conference statistical analysis, allowing conference organizers to understand the composition of participants and facilitate subsequent contact and arrangements.\n\nAttendance management:\nThe system shall track each attendee's participation and record the conferences they attend. This ensures that each attendee's attendance information is accurate and facilitates conference management and follow-up.\n\nPresentation management:\nThe system shall support recording each speaker's presentation schedule at the conference, including the topic, time, and location of the presentation. Detailed information for each presentation is recorded to track the progress of each presentation and ensure the smooth running of the conference proceedings.\n\nThe system provides comprehensive conference data management functions, from conference organization and attendee information management to presentation scheduling and tracking, efficiently supporting the organization and execution of conferences.", "answer": {"Conference": {"Attributes": ["Conference ID", "Name", "Date", "Location", "Theme"], "Primary key": ["Conference ID"], "Foreign key": {}}, "Attendee Information": {"Attributes": ["Attendee ID", "Name", "Gender", "Organization", "Position"], "Primary key": ["Attendee ID"], "Foreign key": {}}, "Attendance": {"Attributes": ["Attendee ID", "Conference ID"], "Primary key": ["Attendee ID", "Conference ID"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "Attendee ID": {"Attendee Information": "Attendee ID"}}}, "Speaker Presentation": {"Attributes": ["Speaker ID", "Conference ID", "Presentation Topic", "Presentation Time", "Presentation Address"], "Primary key": ["Speaker ID", "Conference ID", "Presentation Time"], "Foreign key": {"Conference ID": {"Conference": "Conference ID"}, "Speaker ID": {"Attendee Information": "Attendee ID"}}}}}
{"id": "67552f0a13602ec03b41a82f", "question": "Consulting Service System Business Requirement Description:\nThe Technical Consulting Department provides multiple technical consulting service projects, each of which involves multiple consultants. Consulting service projects have a Project ID, Name, Start Date, End Date, and Client Name. Consultants have a Consultant ID, Name, Date of Birth, Gender, Phone Number, and Professional Field. Consulting service records need to record the Service ID, Project ID, Consultant ID, Service Date, and Service Content.\n", "answer": {"project": {"Attributes": ["Project ID", "Name", "Start Date", "End Date", "Client Name"], "Primary key": ["Project ID"], "Foreign key": {}}, "consultant": {"Attributes": ["Consultant ID", "Name", "Date of Birth", "Gender", "Phone Number", "Professional Field"], "Primary key": ["Consultant ID"], "Foreign key": {}}, "service record": {"Attributes": ["Service ID", "Project ID", "Consultant ID", "Service Date", "Service Content"], "Primary key": ["Service ID"], "Foreign key": {"Consultant ID": {"consultant": "Consultant ID"}, "Project ID": {"project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a831", "question": "A rental company has multiple branches, with branch information including name, address, and manager name. Each branch manages a certain number of vehicles. Vehicles have license plate numbers, models, year, and rental rates. Customer information includes name, phone number, and email. Customers can rent vehicles, with each rental recording rental time, return time, and rental fee. The rental company needs to record the income of each branch for performance evaluation.", "answer": {"Customer": {"Attributes": ["Name", "Phone", "Email", "Customer ID"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Branch": {"Attributes": ["Branch ID", "Name", "Address", "Manager name", "Branch income"], "Primary key": ["Branch ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["Vehicle ID", "License plate", "Model", "Year", "Rental rate", "Branch ID"], "Primary key": ["Vehicle ID"], "Foreign key": {"Branch ID": {"Branch": "Branch ID"}}}, "Customer vehicle rental": {"Attributes": ["Vehicle ID", "Rental time", "Return time", "Rental fee", "Customer ID"], "Primary key": ["Customer ID", "Vehicle ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Vehicle ID": {"Vehicle": "Vehicle ID"}}}}}
{"id": "67552f0a13602ec03b41a835", "question": "A business services company manages multiple contracts, each contract has a Contract ID, Customer, Service Content, Start Time, End Time, and Contract Amount.\nCustomers have a Customer ID, Name, Phone, and Email.\nThe company needs to record the payment status of contracts, each payment must record the Payment Date and Payment Amount.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Email"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Contract": {"Attributes": ["Contract ID", "Customer ID", "Service Content", "Start Time", "End Time", "Contract Amount"], "Primary key": ["Contract ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Payment Record": {"Attributes": ["Payment ID", "Contract ID", "Payment Date", "Payment Amount"], "Primary key": ["Payment ID"], "Foreign key": {"Contract ID": {"Contract": "Contract ID"}}}}}
{"id": "67552f0a13602ec03b41a83a", "question": "Business service company employee assessment management business requirements description:\n\nA business service company needs to manage employee assessments. Employees have employee numbers, names, genders, phone numbers, and positions. Each assessment needs to record the assessment date, assessment content, and assessment score. The company needs to count the monthly assessment scores of each employee for performance appraisal.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Phone Number", "Position"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Assessment Record": {"Attributes": ["Assessment ID", "Employee ID", "Assessment Date", "Assessment Content", "Assessment Score"], "Primary key": ["Assessment ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}}}, "Employee Monthly Assessment Statistics": {"Attributes": ["Employee ID", "Month", "Average Score"], "Primary key": ["Employee ID", "Month"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a844", "question": "Business requirements description for a Mine Material Management System: A mining company owns multiple mines, with each mine having multiple material administrators. Material administrators have information including administrator ID, name, gender, phone number, and position. Mines have information including mine ID, name, location, and person in charge. For each material purchase, the system needs to record purchase date, material name, quantity, supplier, and purchase cost. For each material distribution, the system needs to record distribution date, material name, quantity, distributor, and recipient. The distributor must be a material administrator. This information system should be able to perform statistical analysis on the material management of mines.", "answer": {"Material administrator": {"Attributes": ["Administrator ID", "Name", "Gender", "Phone", "Position", "Mine ID"], "Primary key": ["Administrator ID"], "Foreign key": {"Mine ID": {"Mine": "Mine ID"}}}, "Mine": {"Attributes": ["Mine ID", "Name", "Location", "Person in charge"], "Primary key": ["Mine ID"], "Foreign key": {}}, "Purchase record": {"Attributes": ["Record ID", "Purchase date", "Material name", "Quantity", "Supplier", "Purchase cost"], "Primary key": ["Record ID"], "Foreign key": {}}, "Material distribution record": {"Attributes": ["Record ID", "Distribution date", "Material name", "Quantity", "Distributor", "Recipient"], "Primary key": ["Record ID"], "Foreign key": {"Distributor": {"Material administrator": "Administrator ID"}}}}}
{"id": "67552f0a13602ec03b41a849", "question": "The Credit Card Management System for a credit card company requires managing various types of credit cards and associated transactions:\nThe company issues multiple types of credit cards, each with a unique Card Type Code, Card Type Name, and Annual Fee.\nThe company has several customers, each identified by a unique Customer ID, Name, ID Number, and Contact Number. Each customer can have multiple credit cards.\nEach credit card has a unique Card Number, Card Type Code, Account Opening Date, and Credit Limit. A customer may have several credit cards.\nEvery transaction made using a credit card must record the Amount, Transaction Time, Transaction Location, and Transaction Type.\nThe system also tracks repayments made by customers, including the Repayment Amount and Repayment Time.", "answer": {"Credit Card Type": {"Attributes": ["Card Type Code", "Card Type Name", "Annual Fee"], "Primary key": ["Card Type Code"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "ID Number", "Contact Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Credit Card": {"Attributes": ["Card Number", "Card Type Code", "Account Opening Date", "Credit Limit", "Customer ID"], "Primary key": ["Card Number"], "Foreign key": {"Card Type Code": {"Credit Card Type": "Card Type Code"}, "Customer ID": {"Customer": "Customer ID"}}}, "Transaction": {"Attributes": ["Customer ID", "Card Number", "Transaction Amount", "Transaction Time", "Transaction Location", "Transaction Type"], "Primary key": ["Customer ID", "Card Number", "Transaction Time"], "Foreign key": {"Card Number": {"Credit Card": "Card Number"}, "Customer ID": {"Customer": "Customer ID"}}}, "Repayment": {"Attributes": ["Customer ID", "Card Number", "Repayment Amount", "Repayment Time"], "Primary key": ["Customer ID", "Card Number", "Repayment Time"], "Foreign key": {"Card Number": {"Credit Card": "Card Number"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a854", "question": "Business Requirements Description for the Educational Management System: A school plans to develop an educational management system aimed at integrating course management, student management, user management, system settings, and tool asset management. The course management module shall record Course ID, teacher, class hours, description, and schedule to support course inquiries and arrangements. The student management module shall record Student ID, name, grade, and class, facilitating the management and communication of student information. The course enrollment module shall record Student ID and Course ID for managing course selections by students. The user management module is responsible for maintaining User ID, email, password, and username, ensuring system security. The system settings module shall store system name, theme, page configuration, and version information for system configuration adjustments. The tool management module shall record the name, asset number, and holder, and manage tool loan records, including Record ID, borrower, asset number, and time, to optimize asset management.", "answer": {"Course": {"Attributes": ["Course ID", "Teacher", "Class Hours", "Description", "Schedule"], "Primary key": ["Course ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Name", "Grade", "Class", "User ID"], "Primary key": ["Student ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Email", "Password", "Username", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Tool": {"Attributes": ["Name", "Asset Number", "Holder"], "Primary key": ["Asset Number"], "Foreign key": {"Holder": {"User": "User ID"}}}, "Tool Loan Record": {"Attributes": ["Record ID", "Borrower", "Asset Number", "Time"], "Primary key": ["Record ID"], "Foreign key": {"Borrower": {"User": "User ID"}, "Asset Number": {"Tool": "Asset Number"}}}, "System Settings": {"Attributes": ["Setting ID", "System Name", "Theme", "Page Configuration", "Version Information"], "Primary key": ["Setting ID"], "Foreign key": {}}, "Course Enrollment": {"Attributes": ["Student ID", "Course ID"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a857", "question": "This is a printer device management system. First, it needs to maintain basic information of printer manufacturers (name, person in charge). Each model belongs to a specific manufacturer and includes standard driver configurations for that printer model. For each specific printer device, the system needs to record which model it is, where it is installed, and its network hostname. Some printers may need personalized driver settings in addition to the standard driver configuration.", "answer": {"Manufacturer": {"Attributes": ["Manufacturer ID", "Name", "Person in charge"], "Primary key": ["Manufacturer ID"], "Foreign key": {}}, "Printer": {"Attributes": ["Printer ID", "Printer location", "Hostname", "Additional driver information", "Model ID"], "Primary key": ["Printer ID"], "Foreign key": {"Model ID": {"Model": "Model ID"}}}, "Model": {"Attributes": ["Model ID", "Model name", "Manufacturer ID"], "Primary key": ["Model ID"], "Foreign key": {"Manufacturer ID": {"Manufacturer": "Manufacturer ID"}}}}}
{"id": "67552f0a13602ec03b41a873", "question": "Below is the database requirement description for a card management system: The system includes cards, card collections, and a user card exchange feature. Cards possess Attributes such as name, type, artist, effect, power, intelligence, and endurance, and can belong to one or more card collections. Users can manage personal information, including username, password, email, and phone number, and can exchange cards. Each exchange record includes the user IDs of both parties, exchange time, and the exchanged card ID. The database design of the system includes multiple entities such as \"Card\" (Card ID, Card Name, Card Type, Card Artist, Card Effect, Card Power, Card Intelligence, Card Endurance),\n\"Card Collection\" (Collection ID, Collection Name),\n\"User\" (User ID, Username, Password, Email, Phone Number), and relational tables \"Card Collection Association\" (Card ID, Collection ID, Collection Collection Number, Card Rarity) and \"User Exchange Card\" (User 1 ID, User 2 ID, Exchange Time, Exchanged Card ID). These tables are related through Foreign key to ensure the integrity of the system.\n", "answer": {"Card": {"Attributes": ["Card ID", "Card Name", "Card Type", "Card Artist", "Card Effect", "Card Power", "Card Intelligence", "Card Endurance"], "Primary key": ["Card ID"], "Foreign key": {}}, "Card Collection": {"Attributes": ["Collection ID", "Collection Name"], "Primary key": ["Collection ID"], "Foreign key": {}}, "Card Collection Association": {"Attributes": ["Card ID", "Collection ID", "Collection Number", "Card Rarity"], "Primary key": ["Card ID", "Collection ID"], "Foreign key": {"Card ID": {"Card": "Card ID"}, "Collection ID": {"Card Collection": "Collection ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone"], "Primary key": ["User ID"], "Foreign key": {}}, "User Card Exchange": {"Attributes": ["User 1 ID", "User 2 ID", "Exchange Time", "Exchanged Card ID"], "Primary key": ["User 1 ID", "User 2 ID", "Exchange Time"], "Foreign key": {"Exchanged Card ID": {"Card": "Card ID"}, "User 1 ID": {"User": "User ID"}, "User 2 ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a875", "question": "This is an e-commerce system used to manage product information, order information, as well as related tax and geographic location data. The system allows adding, editing, and deleting product information, including product title, type, brand, price, image link, and click count. Multiple descriptions can be added to each product, including description content and type.\n\nThe system also handles address management, including postal codes, states, and city information, enabling users to select addresses conveniently when placing orders. Tax rates are recorded based on different postal codes and regions to ensure accurate tax calculations.\n\nThe system records users\u2019 order information, including order price, tax, total price, order date, customers\u2019 personal information, address information, payment method, and shipping method. It keeps track of products and quantities in each order, supporting detailed query and management of orders.\n\nBy analyzing product click counts, the system helps identify user interests and behavior, providing data support for marketing strategies.", "answer": {"Product": {"Attributes": ["Product ID", "Product Title", "Product Type", "Brand", "Price", "Image Link", "Click Count"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product Description": {"Attributes": ["Description ID", "Product ID", "Description Type", "Description Content"], "Primary key": ["Description ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}, "Address": {"Attributes": ["Postal Code", "State", "City"], "Primary key": ["Postal Code"], "Foreign key": {}}, "Tax Rate": {"Attributes": ["Tax Rate ID", "Postal Code", "Tax Rate"], "Primary key": ["Tax Rate ID"], "Foreign key": {"Postal Code": {"Address": "Postal Code"}}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order Price", "Tax", "Total Price", "Payment Method", "Shipping Method", "Postal Code", "Order Date"], "Primary key": ["Order ID"], "Foreign key": {"Postal Code": {"Address": "Postal Code"}, "Customer ID": {"Customer": "Customer ID"}}}, "Order Detail": {"Attributes": ["Detail ID", "Order ID", "Product ID", "Quantity"], "Primary key": ["Detail ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}, "Customer": {"Attributes": ["Customer ID", "Name", "Email", "Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a888", "question": "The retail and wholesale industry requires efficient management systems to replace manual processes, in order to support business growth and meet increasing management needs. An effective management system can help businesses better organize customer, supplier, product, and sales records, improve work efficiency, reduce human errors, enhance customer satisfaction, and optimize inventory management and financial accounting. A small-scale retail or wholesale management system can be used to manage customer information, supplier information, product information, and sales records.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Responsible Person Name", "Responsible Person Phone", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Unit Price", "Stock", "Supplier ID"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product Purchase": {"Attributes": ["Supplier ID", "Product ID", "Purchase Quantity", "Purchase Price", "Total Purchase Price", "Purchase Time"], "Primary key": ["Supplier ID", "Product ID", "Purchase Time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Supplier ID": {"Supplier": "Supplier ID"}}}, "Sales Record": {"Attributes": ["Product ID", "Customer ID", "Sale Time", "Sale Quantity", "Total Sale Price", "Sale Price"], "Primary key": ["Product ID", "Customer ID", "Sale Time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a88e", "question": "The company plans to develop a recipe management system to record and manage recipes and related information.\nThe system shall support adding, modifying, and deleting recipes, recording recipe descriptions and images, and adding detailed preparation steps for each recipe.\nAt the same time, the system shall support defining and managing recipe types, such as main dishes and desserts, to facilitate categorization and retrieval.\nThe ingredient management function shall support adding, modifying, and deleting ingredients, recording ingredient descriptions and images, and associating required ingredients and their quantities with each recipe.\nThe system shall also provide query functionality, supporting querying recipes based on conditions such as type and ingredients, and viewing detailed recipe information, including steps and ingredients.", "answer": {"Recipe Table": {"Attributes": ["Recipe ID", "Name", "Description", "Image", "Steps", "Type ID"], "Primary key": ["Recipe ID"], "Foreign key": {"Type ID": {"Recipe Type Table": "Type ID"}}}, "Recipe Type Table": {"Attributes": ["Type ID", "Name", "Description"], "Primary key": ["Type ID"], "Foreign key": {}}, "Ingredient Table": {"Attributes": ["Ingredient ID", "Name", "Description", "Image"], "Primary key": ["Ingredient ID"], "Foreign key": {}}, "Recipe and Ingredient Relationship Table": {"Attributes": ["Recipe ID", "Ingredient ID", "Quantity"], "Primary key": ["Recipe ID", "Ingredient ID"], "Foreign key": {"Ingredient ID": {"Ingredient Table": "Ingredient ID"}, "Recipe ID": {"Recipe Table": "Recipe ID"}}}}}
{"id": "67552f0a13602ec03b41a890", "question": "This is a role management system in a role-playing game. In the game world, each creature can play different roles, such as warrior, mage, merchant, etc. Each role has its unique abilities and permissions that determine what actions they can perform. The system supports setting up multiple different role types in the game, each with its unique positioning and characteristics, and can add or adjust role types according to game needs. Each role has its specific range of behavioral capabilities, for example, warriors can fight and defend, mages can cast spells and heal, merchants can trade and craft items. By clearly defining what each role can do, the game's balance is maintained. Creatures in the game (including player characters and NPCs) can obtain different role identities. The system manages various permissions in the game through the role system, ensuring that creatures can only perform actions allowed by their roles, preventing unauthorized actions in the game.", "answer": {"Role": {"Attributes": ["Role name", "Role ID", "Role capability description"], "Primary key": ["Role ID"], "Foreign key": {}}, "Creature": {"Attributes": ["Creature ID", "Creature type", "Creature name", "Role ID"], "Primary key": ["Creature ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Permission": {"Attributes": ["Permission ID", "Permission content"], "Primary key": ["Permission ID"], "Foreign key": {}}, "Role permission": {"Attributes": ["Role ID", "Permission ID", "Is enabled"], "Primary key": ["Role ID", "Permission ID"], "Foreign key": {"Permission ID": {"Permission": "Permission ID"}, "Role ID": {"Role": "Role ID"}}}}}
{"id": "67552f0a13602ec03b41a896", "question": "The online task publishing and management system shall allow users to register and maintain personal information, including avatars and contact details. Users shall be able to publish tasks in the system, specifying the task title, description, budget, and deadline, and assigning the task to a specific category, city, or location. Other users shall be able to respond to published tasks, providing quotes and additional comments. After the task publisher selects an executor, both parties shall be able to communicate through messages within the system, exchange relevant files, and track task progress. Upon task completion, the publisher shall be able to evaluate the executor and provide ratings. The system shall also support managing basic user statistics, such as the number of completed tasks and failed tasks, to help other users better understand the reliability of executors. By associating cities, locations, categories, and tasks, the system shall effectively help users match suitable tasks with executors, improving task completion efficiency.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Avatar URL", "Contact Information", "Number of Failed Tasks", "Number of Completed Tasks"], "Primary key": ["User ID"], "Foreign key": {}}, "Task": {"Attributes": ["Task ID", "Title", "Description", "Budget", "Deadline", "Category", "Address"], "Primary key": ["Task ID"], "Foreign key": {}}, "Task Execution Status": {"Attributes": ["Task ID", "Task Executor", "Progress"], "Primary key": ["Task ID"], "Foreign key": {"Task Executor": {"User": "User ID"}, "Task ID": {"Task": "Task ID"}}}, "User Quote": {"Attributes": ["User ID", "Task ID", "Quote", "Additional Comments"], "Primary key": ["User ID", "Task ID"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "User ID": {"User": "User ID"}}}, "User Evaluation": {"Attributes": ["Evaluation Record ID", "Evaluator", "Executor", "Rating"], "Primary key": ["Evaluation Record ID"], "Foreign key": {"Executor": {"User": "User ID"}, "Evaluator": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8a6", "question": "Design and implement a database management system for an enterprise-level natural language processing (NLP) platform, which shall support:\n\nCompany management (store basic company information, authorization tokens and their hash values, record creation and modification timestamps),      \n\nUser management (store detailed user information, password salt values and their hash values, manage permissions and record creation and modification timestamps),\n\nRequest processing log recording (store request ID, user ID, status, timestamp, request data, compression results and probe information),\n\nand User feedback management (store rating, comments and creation timestamp).", "answer": {"Company": {"Attributes": ["Company ID", "Company Name", "Authorization Token", "Token Hash Value", "Creation Time", "Modification Time"], "Primary key": ["Company ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "User Name", "Password Salt Value", "Password Hash Value", "Permission Level", "Creation Time", "Modification Time", "Company ID"], "Primary key": ["User ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}, "Request Log": {"Attributes": ["Request ID", "User ID", "Status", "Timestamp", "Request Data", "Compression Result", "Probe Information"], "Primary key": ["Request ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User Feedback": {"Attributes": ["Feedback ID", "User ID", "Rating", "Comment", "Creation Time"], "Primary key": ["Feedback ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8a9", "question": "The bookstore has several branches, each with a specific location. The bookstore sells various books, each book having categories such as novels, textbooks, etc. A book may belong to multiple categories, which have a Category ID and name. Each book has a price and stock quantity. Customer information includes Customer ID, first name, last name, phone, email, and address. Bookstore customers can place orders to purchase books, with each order recording the Customer ID, Branch ID, Book ID, quantity purchased, and order date.", "answer": {"Branch": {"Attributes": ["Branch ID", "Location"], "Primary key": ["Branch ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "First Name", "Last Name", "Phone", "Email", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Category": {"Attributes": ["Category ID", "Category Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Book Name", "Category ID", "Price", "Stock Quantity"], "Primary key": ["Book ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Branch ID", "Book ID", "Purchase Quantity", "Order Date"], "Primary key": ["Order ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Branch ID": {"Branch": "Branch ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a8ae", "question": "This database could be a supply chain management system with the following primary functions:\nRegion and Country Management: Manage the geographic location information of suppliers and customers, including detailed descriptions of regions and countries. Regions include region names and descriptions, while countries include country names and descriptions.\nProduct Information Management: Maintain detailed product information such as product name, manufacturer, brand, type, size, and retail price.\nSupplier Management: Manage supplier information, including supplier name, address, associated country, contact phone number, and account balance.\nProduct-Supplier Relationship Management: Manage the supply relationships between products and suppliers, including the quantity of products supplied by suppliers and supply costs.\nCustomer Management: Manage customer information, including customer name, address, associated country, contact phone number, account balance, and market segment.\nOrder Management: Manage customer orders, including order status, total price, order date, priority, and handler. The system also details the products included in each order, including quantity, extended price, discount, tax, return indicator, status, shipment date, committed date, receipt date, shipping instructions, and shipping method.\nEach supplier and customer is associated with a region.", "answer": {"Region": {"Attributes": ["Region ID", "Region Name", "Region Description", "Country ID"], "Primary key": ["Region ID"], "Foreign key": {"Country ID": {"Country": "Country ID"}}}, "Country": {"Attributes": ["Country ID", "Country Name", "Country Description"], "Primary key": ["Country ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Manufacturer", "Brand", "Type", "Size", "Retail Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Address", "Region ID", "Phone Number", "Account Balance"], "Primary key": ["Supplier ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}}}, "Supplier Supplies Product": {"Attributes": ["Product ID", "Supplier ID", "Supply Quantity", "Supply Cost"], "Primary key": ["Product ID", "Supplier ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Supplier ID": {"Supplier": "Supplier ID"}}}, "Customer": {"Attributes": ["Customer ID", "Name", "Address", "Region ID", "Phone Number", "Account Balance", "Market Segment"], "Primary key": ["Customer ID"], "Foreign key": {"Region ID": {"Region": "Region ID"}}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order Status", "Total Price", "Order Date", "Priority", "Handler"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Order Composed of Products": {"Attributes": ["Order ID", "Product ID", "Quantity", "Extended Price", "Discount", "Tax", "Shipment Date", "Receipt Date", "Shipping Instructions", "Shipping Method", "Return Indicator", "Status"], "Primary key": ["Order ID", "Product ID", "Shipment Date"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a8bf", "question": "The system manages customer subscriptions to magazines, including magazine pricing, and the relationship between customers and magazine subscriptions.\nThe Customer entity (Customer ID, Customer Name, Customer Address) records detailed customer information. Customer ID serves as the Primary key to ensure complete records and effective retrieval of customer information.\nThe Magazine entity (Magazine Name, Publisher, Theme, Publication Frequency, Website) records basic information about the magazine. Magazine Name and Publisher serve as composite Primary key to guarantee the uniqueness of each magazine and its publisher. This table also includes additional information such as the magazine\u2019s theme, publication frequency, and website.\nThe Pricing entity (Pricing ID, Magazine Name, Publisher, Subscription Package, Subscription Period, Price) records the pricing for each magazine. Pricing ID serves as the Primary key and is associated with Magazine Name and Publisher to ensure each pricing entry is unique and related to the corresponding magazine. The pricing table also includes different subscription packages, periods, and pricing information, supporting multiple pricing strategies.\nCustomer Subscribes to Magazine (Customer ID, Pricing ID, Creation Time, Subscription Start Date) relationship table represents a many-to-many relationship between customers and magazine pricing. A customer can subscribe to multiple magazines and can subscribe according to different pricing strategies, recording the start date of the subscription.\nFurthermore, the Magazine to Pricing (Pricing ID, Magazine Name, Publisher, Subscription Package, Subscription Period, Price) relationship table represents a one-to-many relationship between magazines and pricing. A magazine can have multiple pricing entries, adapting to different subscription packages and periods.\nThis design ensures that the system can manage the subscription relationship between customers and magazines, pricing strategies, and supports various pricing and subscription modes.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Magazine": {"Attributes": ["Magazine Name", "Publisher", "Theme", "Publication Frequency", "Website"], "Primary key": ["Magazine Name", "Publisher"], "Foreign key": {}}, "Pricing": {"Attributes": ["Pricing ID", "Magazine Name", "Publisher", "Subscription Package", "Subscription Period", "Price"], "Primary key": ["Pricing ID"], "Foreign key": {"Magazine Name, Publisher": {"Magazine": "Magazine Name, Publisher"}}}, "Customer Subscribes to Magazine": {"Attributes": ["Customer ID", "Pricing ID", "Creation Time", "Subscription Start Date"], "Primary key": ["Customer ID", "Pricing ID", "Creation Time"], "Foreign key": {"Pricing ID": {"Pricing": "Pricing ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a8cc", "question": "The customer management and order processing system aims to effectively record and manage customer personal information, order details, payment information, and logistics status. Through this system, businesses can better understand customer needs, enhance customer experience, and optimize order processing efficiency.\n\nThe system not only helps businesses track each customer's historical orders, payment status, and logistics status but also provides a record of interactions between customers and the business. It offers important data support for marketing, sales, and customer service teams, helping businesses better perform customer analysis, product recommendations, and customer relationship maintenance.\n\nCustomer management:\n\nManage basic customer information, including name, contact information, address, etc.\nStore customer registration information, consumption habits, etc., to provide data support for subsequent marketing and customer service.\n\nOrder management:\n\nRecord each customer's order information, including order number, order creation time, order status, order total amount, etc.\nTrack the specific product details of each order (including product ID, quantity, price, etc.).\n\nPayment management:\n\nRecord payment information for orders, including payment method, payment time, payment status, etc.\nHandle different payment methods (such as credit card, Alipay, WeChat Pay, etc.).", "answer": {"Customer Information": {"Attributes": ["Customer ID", "Name", "Phone", "Address", "Gender"], "Primary key": ["Customer ID"], "Foreign key": {"Customer ID": {"Customer Information": "Customer ID"}}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order Creation Time", "Order Content"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer Information": "Customer ID"}, "Order ID": {"Order": "Order ID"}}}, "Customer Payment Order": {"Attributes": ["Customer ID", "Order ID", "Payment Time", "Payment Status", "Payment Amount", "Payment Method"], "Primary key": ["Customer ID", "Order ID", "Payment Time"], "Foreign key": {"Customer ID": {"Customer Information": "Customer ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a8db", "question": "\"The vehicle maintenance management system must manage customer information, mechanic information, vehicle models, maintenance tasks, and associated orders and parts concurrently. Each customer has basic information such as name and phone number; each vehicle model must have a unique name; each maintenance task must record the associated customer, vehicle model, task status, start date, and end date, and can specify the responsible mechanic. Since some maintenance tasks require the purchase or use of parts, the system should record the serial number, price, stock quantity, and supplier of the parts, and be able to place orders for the required parts, tracking the dispatch date and whether they have been delivered.\"", "answer": {"Vehicle Model": {"Attributes": ["Vehicle Model ID", "Name"], "Primary key": ["Vehicle Model ID"], "Foreign key": {}}, "Mechanic": {"Attributes": ["Employee ID", "Name", "Contact Information"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Contact Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Maintenance Record": {"Attributes": ["Record ID", "Associated Customer", "Vehicle Model", "Task Status", "Start Date", "End Date", "Mechanic"], "Primary key": ["Record ID"], "Foreign key": {"Associated Customer": {"Customer": "Customer ID"}, "Mechanic": {"Mechanic": "Employee ID"}, "Vehicle Model": {"Vehicle Model": "Vehicle Model ID"}}}, "Part": {"Attributes": ["Serial Number", "Price", "Stock Quantity", "Supplier"], "Primary key": ["Serial Number"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Dispatch Date", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {}}, "Order Detail": {"Attributes": ["Order ID", "Part Serial Number", "Purchase Quantity"], "Primary key": ["Order ID", "Part Serial Number"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Part Serial Number": {"Part": "Serial Number"}}}}}
{"id": "67552f0a13602ec03b41a8f9", "question": "Experience Management System Functional Requirements Description:\n\nUser Management: \nEach user of the Experience Management System is identified uniquely by a User ID. Additionally, each user possesses a username, a login password, a contact email, a phone number, and a registration time for efficient user management.\n\nExperience Record Management:\nThe system is capable of documenting detailed information about various experiences, including descriptions and code content. Each experience record also features a unique Experience ID (Primary key) for identification purposes.\n\nUser Activity Logging:\nEach experience record logs its creator's information, including the creator's User ID, as well as creation and modification times. This information aids in tracking the operation history of experience records and supports auditing functions.\n\nStatus Management:\nThe active status of each experience record is indicated by a status field, where a status value of 'F' signifies that the record is valid. This field allows the system to determine whether an experience record is in a valid status, and thus decide whether to display or use the record.\n\nMultilingual Support:\nThe character set and sorting rules of the table support Spanish, ensuring that the system can accurately store, retrieve, and display information of experience records in a multilingual environment.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone Number", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Experience": {"Attributes": ["Experience ID", "Creator ID", "Experience Description", "Code Content", "Creation Time", "Modification Time", "Language", "Status"], "Primary key": ["Experience ID"], "Foreign key": {"Creator ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a903", "question": "The scholarship management system contains multiple scholarship entries, each including a Scholarship ID, amount, application requirements, deadline, description, link, and name. The system allows user registrations, with user information comprising User ID, activation token, email, password hash, and username. Users can 'like' the scholarships they are interested in to record their preferences toward specific scholarships. Additionally, scholarships can be managed under different categories, with category information including Category ID and name; each scholarship may be associated with multiple categories. The association between users and scholarships is facilitated through a 'likes' table, which records which users have liked which scholarships.\n", "answer": {"User": {"Attributes": ["User ID", "Activation Token", "Email", "Password Hash", "Username"], "Primary key": ["User ID"], "Foreign key": {}}, "Scholarship": {"Attributes": ["Scholarship ID", "Scholarship Amount", "Application Requirements", "Deadline", "Description", "Link", "Scholarship Name"], "Primary key": ["Scholarship ID"], "Foreign key": {}}, "Category": {"Attributes": ["Category ID", "Category Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "User Likes Scholarship": {"Attributes": ["User ID", "Scholarship ID", "Like Time"], "Primary key": ["User ID", "Scholarship ID", "Like Time"], "Foreign key": {"Scholarship ID": {"Scholarship": "Scholarship ID"}, "User ID": {"User": "User ID"}}}, "Scholarship Category": {"Attributes": ["Scholarship ID", "Category ID"], "Primary key": ["Scholarship ID", "Category ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}, "Scholarship ID": {"Scholarship": "Scholarship ID"}}}}}
{"id": "67552f0a13602ec03b41a90d", "question": "This database is designed for an e-commerce system, which manages customer information, address details, product information, and order processing. The main functions include:\n1.Customer Management: Stores and manages the basic information of customers, such as customer ID, first name, last name, email, birthday, etc. It also tracks the creation, update, and deletion (soft delete) timestamps.\n2.Address Management: Stores address details for customers, including address line, postal code, city, state, and country. It distinguishes between billing and shipping addresses and tracks the creation, update, and deletion (soft delete) timestamps.\n3.Product Management: Manages product details, such as product ID, name, code, price, and description. It also records the creation, update, and deletion (soft delete) timestamps.\n4.Order Management: Stores order information, including order ID and customer ID. It also tracks the creation, update, and deletion (soft delete) timestamps. Orders can have a many-to-many relationship with products, meaning an order can contain multiple products, and a product can appear in multiple orders.", "answer": {"Customer": {"Attributes": ["Customer ID", "First Name", "Last Name", "Email", "Birthday", "Creation Time", "Update Time", "Deletion Time"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Address": {"Attributes": ["Address ID", "Customer ID", "Address Line", "Postal Code", "City", "State", "Country", "Type", "Creation Time", "Update Time", "Deletion Time"], "Primary key": ["Address ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Product": {"Attributes": ["Product ID", "Name", "Code", "Price", "Description", "Creation Time", "Update Time", "Deletion Time"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Creation Time", "Update Time", "Deletion Time"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Order and Product": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a911", "question": "The advertising management system requires the management of multi-level tag information. Each tag includes a primary category and a secondary category, with corresponding numerical codes assigned to each. The system needs to track the creation time and update time for each tag to facilitate subsequent queries and statistics. Additionally, the system should use a status field to indicate whether a tag is active. The system should store the tag's categories, codes, creation and update times, as well as the tag's status. It should ensure support for quick queries based on categories and codes.", "answer": {"Tag": {"Attributes": ["Tag ID", "Primary Category", "Secondary Category", "Status", "Creation Time", "Update Time"], "Primary key": ["Tag ID"], "Foreign key": {"Primary Category": {"Category": "Category Code"}, "Secondary Category": {"Category": "Category Code"}}}, "Category": {"Attributes": ["Category Code", "Category Name"], "Primary key": ["Category Code"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a91b", "question": "The system is used to manage users' digital product purchases, subscriptions, and refunds across multiple platforms (such as Android and iOS), primarily for digital content and service payment, subscription management, and financial tracking. The system is able to manage user information, storing user ID, username, email, phone number, registration time, and device platform. The system includes management of purchase records, including order number, purchase date, price, currency, and other details; management of receipts, containing receipt vouchers, data, and hash values for each purchase; and product management, supporting product inventory units, prices, and currencies for different platforms (Android and iOS). At the same time, the system also handles refunds, trial periods, promotional periods, subscription validity and its cycle types, ensuring accurate tracking of each user's purchase and subscription status. In addition, it supports cross-platform and sandbox environment purchase records and manages renewals and changes by associating purchase records, ensuring data consistency and integrity.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Email", "Phone Number", "Registration Time", "Update Time", "Platform"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Platform", "Product Name", "Inventory Unit", "Price", "Currency", "Description", "Creation Time", "Update Time"], "Primary key": ["Product ID"], "Foreign key": {}}, "Receipt": {"Attributes": ["Receipt ID", "Receipt Data", "Hash Value", "Creation Time"], "Primary key": ["Receipt ID"], "Foreign key": {}}, "User Purchased Products": {"Attributes": ["User ID", "Product ID", "Purchase Time", "Purchase Price", "Currency", "Purchase Platform", "Order Number", "Receipt ID", "Hash Value", "Refund Status", "Subscription Status"], "Primary key": ["User ID", "Product ID", "Order Number"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Receipt ID": {"Receipt": "Receipt ID"}, "User ID": {"User": "User ID"}}}, "User Subscribed Products": {"Attributes": ["User ID", "Product ID", "Subscription Time", "Start Date", "End Date", "Subscription Status", "Trial Period", "Promotional Period", "Validity Type", "Renewal Status"], "Primary key": ["User ID", "Product ID", "Subscription Time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}, "User Refunded Products": {"Attributes": ["User ID", "Product ID", "Refund Time", "Refund Amount", "Refund Date", "Refund Status"], "Primary key": ["User ID", "Product ID", "Refund Time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a935", "question": "The following is a business requirement description for a surveillance database system:\n\nThe system is used to manage cameras, video recordings, alarms, and events. System functions include camera management, video recording management, alarm and event recording, as well as real-time monitoring and historical query. The camera management module is responsible for storing camera titles, locations, RTSP stream addresses, and real-time video stream paths, while also recording camera analysis times. The video recording function includes storing the video file path, cover path, start time, and duration for each camera. The alarm management module records alarm information in videos, such as alarm type, level, start and end times, and allows quick retrieval of associated alarms via video ID. The event recording function records specific events in videos through coordinates and dimensions, as well as event type and occurrence time. In addition, the system supports real-time video monitoring via RTSP stream addresses and intelligent analysis based on camera analysis times to generate alarms and event records. With these records, the system supports data analysis functions such as event frequency statistics and alarm type analysis to help security personnel promptly identify and resolve issues. Historical query and security management functions also help trace events and address potential security risks.\n", "answer": {"Camera": {"Attributes": ["Camera ID", "Title", "Location", "RTSP Stream Address", "Video Stream Path", "Analysis Time"], "Primary key": ["Camera ID"], "Foreign key": {}}, "Video Recording": {"Attributes": ["Video ID", "Camera ID", "Video File Path", "Cover Path", "Start Time", "Duration"], "Primary key": ["Video ID"], "Foreign key": {"Camera ID": {"Camera": "Camera ID"}}}, "Alarm": {"Attributes": ["Alarm ID", "Video ID", "Alarm Type", "Alarm Level", "Start Time", "End Time"], "Primary key": ["Alarm ID"], "Foreign key": {"Video ID": {"Video Recording": "Video ID"}}}}}
{"id": "67552f0a13602ec03b41a967", "question": "This database is a house rental management system that can achieve the following main functions:\n\n1: Management of district and street information: You can add, delete, and modify district and street information to ensure that the geographical classification of house rental information is accurate.\n\n2: House type management: Define different house types, such as single room, whole rental, etc., so that users can choose the right house according to their needs.\n\n3: House information management: Record the detailed information of each house, including the street, type, description and price, etc., so that users can find and understand the details of the house.\n\n4: User management: Manage the user's registration information, including username, password and email, to ensure the information security and privacy of each user.\n\n5: Rental management: Record the user's rental behavior, including the rented house, price, description and rental date, to facilitate tracking of rental status and follow-up services.\n\n6: Query function: Support users to query house information according to conditions such as district, street, house type, etc., and view rental records.\n\n7: Rental record statistics: You can count the rental status of each area, street or house type to provide decision support for managers.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Area": {"Attributes": ["Area ID", "Area Name"], "Primary key": ["Area ID"], "Foreign key": {}}, "Street": {"Attributes": ["Street ID", "Street Name", "Belongs to Area ID"], "Primary key": ["Street ID"], "Foreign key": {"Belongs to Area ID": {"Area": "Area ID"}}}, "House Type": {"Attributes": ["Type ID", "Type Name"], "Primary key": ["Type ID"], "Foreign key": {}}, "House": {"Attributes": ["House ID", "Belongs to Street ID", "Type ID", "Description", "Price"], "Primary key": ["House ID"], "Foreign key": {"Belongs to Street ID": {"Street": "Street ID"}, "Type ID": {"House Type": "Type ID"}}}, "Lease": {"Attributes": ["User ID", "House ID", "Price", "Description", "Lease Date"], "Primary key": ["User ID", "House ID", "Lease Date"], "Foreign key": {"House ID": {"House": "House ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a9a1", "question": "This is a Student Information Management System. The main functions of the system are as follows:\n1.Student Information Management: Manages basic student information such as student ID, name, gender, school, department, major, and ID number.\n2.Teacher Information Management: Manages teacher information, including teacher ID, name, gender, title, and contact number.\n3.Course Information Management: Manages course details, including course name, hours, credits, etc.\n4.Grade Management: Stores students\u2019 performance data, including regular grades, experimental grades, mid-term grades, and final grades.\n5.Permission Management: Manages student and administrator permissions, including user ID, username, password, and role.\nEach teacher can teach multiple courses, and each course can be taught by multiple teachers.", "answer": {"Class": {"Attributes": ["Class ID", "Class Name", "Department Name", "Grade"], "Primary key": ["Class ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Name", "Password", "Email", "Age", "Work Unit", "Phone Number", "Class ID"], "Primary key": ["Member ID"], "Foreign key": {"Class ID": {"Class": "Class ID"}}}, "Announcement": {"Attributes": ["Announcement ID", "Announcement Time", "Announcement Content", "Class ID"], "Primary key": ["Announcement ID"], "Foreign key": {"Class ID": {"Class": "Class ID"}}}, "Message": {"Attributes": ["Message ID", "Sender ID", "Receiver ID", "Message Content", "Send Time", "Read Flag"], "Primary key": ["Message ID"], "Foreign key": {}}, "Log": {"Attributes": ["Log ID", "Log Content", "Time", "Mood", "Member ID"], "Primary key": ["Log ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Application": {"Attributes": ["Application ID", "Application Time", "Approval Flag", "Application Content", "Member ID"], "Primary key": ["Application ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Member Message": {"Attributes": ["Member ID", "Message ID", "Message Count"], "Primary key": ["Member ID", "Message ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Message ID": {"Message": "Message ID"}}}, "Member Sent Message": {"Attributes": ["Sender ID", "Receiver ID", "Message Content", "Send Time", "Read Flag"], "Primary key": ["Sender ID", "Receiver ID", "Send Time"], "Foreign key": {"Sender ID": {"Member": "Member ID"}, "Receiver ID": {"Member": "Member ID"}}}}}
{"id": "67552f0a13602ec03b41a9a8", "question": "The blog management system requires the recording of information for both platform users and administrators, and allows users to publish articles, post comments, and reply to comments. The system must be able to distinguish between regular users and administrators, and store the status (such as pending review, reviewed) and publication time for each article, comment, and reply. The system shall support viewing the number of reads and likes on articles, and be capable of tracking which articles, comments, or replies a user has made at what times.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Contact Information", "User Permissions"], "Primary key": ["User ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Publishing User", "Publication Time", "Status", "Number of Reads", "Number of Likes"], "Primary key": ["Article ID"], "Foreign key": {}}, "Comment": {"Attributes": ["Comment ID", "Publishing User", "Publication Time", "Status"], "Primary key": ["Comment ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9b3", "question": "The database is a naval fleet management system. Its main functions are to manage information about ships, crew members, fleets, mission execution, and supplies. The system helps the navy efficiently manage the daily operations of the fleet, including ship management, crew task scheduling, fleet resource allocation, and ship supply status. The database contains the following functions:\n\nShip Management: records basic information about ships.\nFields: Ship ID (Primary key), Name, Type, Fleet ID, Construction Date, Service Status\n\nCrew Member Management: records basic information about crew members.\nFields: Crew Member ID (Primary key), Name, Gender, Position, Fleet ID, Phone Number, Length of Service\n\nFleet Management: records basic information about fleets.\nFields: Fleet ID (Primary key), Name, Commander ID (Foreign key), Base\n\nFleet Mission Execution Management: records the status of missions executed by crew members and fleets.\nFields: Crew Member ID (Foreign key), Fleet ID (Foreign key), Execution Time, Remarks, Is Crew Member Primary Responsible\n\nShip Supply Management: records the supply status of ships.\nFields: Responsible Supply Crew Member ID (Foreign key), Ship ID (Foreign key), Supply Time, Supply Items, Supply Quantity", "answer": {"Ship": {"Attributes": ["Ship ID", "Name", "Type", "Fleet ID", "Construction Date", "Service Status"], "Primary key": ["Ship ID"], "Foreign key": {"Fleet ID": {"Fleet": "Fleet ID"}}}, "Crew Member": {"Attributes": ["Crew Member ID", "Name", "Gender", "Position", "Fleet ID", "Phone Number", "Length of Service"], "Primary key": ["Crew Member ID"], "Foreign key": {"Fleet ID": {"Fleet": "Fleet ID"}}}, "Fleet": {"Attributes": ["Fleet ID", "Name", "Commander ID", "Base"], "Primary key": ["Fleet ID"], "Foreign key": {"Commander ID": {"Crew Member": "Crew Member ID"}}}, "Fleet Mission Execution": {"Attributes": ["Crew Member ID", "Fleet ID", "Execution Time", "Remarks", "Is Crew Member Primary Responsible"], "Primary key": ["Crew Member ID", "Fleet ID", "Execution Time"], "Foreign key": {"Crew Member ID": {"Crew Member": "Crew Member ID"}, "Fleet ID": {"Fleet": "Fleet ID"}}}, "Ship Supply": {"Attributes": ["Responsible Supply Crew Member ID", "Ship ID", "Supply Time", "Supply Items", "Supply Quantity"], "Primary key": ["Responsible Supply Crew Member ID", "Ship ID", "Supply Time"], "Foreign key": {"Ship ID": {"Ship": "Ship ID"}, "Responsible Supply Crew Member ID": {"Crew Member": "Crew Member ID"}}}}}
{"id": "67552f0a13602ec03b41a9b5", "question": "This is a student course selection system. For student information management, the system maintains students' basic information, including student ID, name, gender, date of birth, class, and department. For course information management, the system records course basic information, including course name, credits, and teacher. For course selection management, the system supports students in selecting courses and records credits and scores.\n", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Date of birth", "Class", "Department"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course name", "Credits", "Teacher"], "Primary key": ["Course ID"], "Foreign key": {}}, "Student course selection": {"Attributes": ["Student ID", "Course ID", "Credits", "Score"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9be", "question": "The database design for a membership-based mall is as follows: The system includes tables for employees, orders, members, and system administrators. The employee table records basic information about employees, including Employee ID, Username, and Password. The order table records detailed information about orders, including Order ID, Order Price, Order Time, Member ID, and Employee ID. The member table records basic information about members, including Member ID, Username, Password, Balance, Phone Number, Birth Month and Year, and Gender. The system administrator table records basic information about system administrators, including Administrator ID, Username, and Password. The system uses these tables to manage information about employees, orders, members, and system administrators, in order to facilitate the operation and management functions of the mall.", "answer": {"Employee": {"Attributes": ["Employee ID", "Username", "Password"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Username", "Password", "Balance", "Phone Number", "Birth Month and Year", "Gender"], "Primary key": ["Member ID"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Username", "Password"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order Time", "Member ID", "Employee ID"], "Primary key": ["Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a9d5", "question": "A library management system needs to record the following information:\nThe library has many readers, and the reader information includes the reader number, name, email, phone number, registration date and the last information update time.\nThe library's collection includes the book number, title, author, ISBN number, publication date, current inventory, book classification and the latest data update time.\nThe borrowing process is: after registering, readers can query the book inventory through the system, record the borrowing date for each borrowing, update the return date when returning, and automatically calculate the overdue fine amount if the return is overdue.\nThe same reader can borrow different books multiple times, and each book is allowed to be borrowed by different readers in a cycle. Each borrowing is allowed to be renewed three times and the renewal number is recorded.\nThe system needs to update the book inventory status in real time. When a book is borrowed, the inventory is deducted, and the inventory is restored after the book is returned. The latest modification time of the corresponding data must be updated for each operation.", "answer": {"Reader": {"Attributes": ["Reader ID", "Reader Name", "Reader Email", "Reader Phone", "Registration Date", "Update Time"], "Primary key": ["Reader ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Book Title", "Book Author", "Book ISBN", "Book Publication Date", "Book Stock", "Book Type", "Update Time"], "Primary key": ["Book ID"], "Foreign key": {}}, "Borrowing": {"Attributes": ["Reader ID", "Book ID", "Borrow Date", "Return Date", "Renewal Count", "Overdue Fine"], "Primary key": ["Reader ID", "Book ID", "Borrow Date"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Reader ID": {"Reader": "Reader ID"}}}}}
{"id": "67552f0a13602ec03b41a9f0", "question": "System Requirements Function Description\n\n1. Query Function\nSite Query: Users can enter the site name, and the system will return all bus routes passing through the site and their related information.\nBus Route Query: Users can enter the name of the bus route, and the system will return all the stations and their related information along the route.\nStation-to-Station Query: Users can enter the starting station and the terminal station, and the system will return all transfer routes from the starting station to the terminal station, with direct routes displayed first.\n\n2. User Management Function\nRegistration: Users can register a new account and enter information including account number, password, name, phone number, etc.\nLogin: Users can log in to the system, divided into general users and administrator users.\nModify information: Registered users can modify their basic information.\nDelete user: Administrator users can delete user information in the system.\n\n3. Backstage Management Function\nRoute Management: Administrator users can add, modify, and delete bus route information.\nAnnouncement Management: Administrator users can publish, modify, and delete bus announcement information.\nQuestion Management: Administrator users can manage users' online questions, including answering questions and deleting questions.\n\n4. Online question function\nPost questions: Users can post questions or suggestions about bus routes.\nAnswer questions: Administrators or other users can answer posted questions.\n\n5. Website announcement function\nView announcements: Users can view bus news posted by administrators, including route changes, price adjustments, real-time traffic information, etc.", "answer": {"User": {"Attributes": ["Account", "Password", "Name", "Phone", "User Role"], "Primary key": ["Account"], "Foreign key": {}}, "Bus Route": {"Attributes": ["Route ID", "Route Name", "Start Station", "End Station", "Passing Stations", "Departure Time"], "Primary key": ["Route ID"], "Foreign key": {}}, "Station": {"Attributes": ["Station ID", "Station Name", "Station Location"], "Primary key": ["Station ID"], "Foreign key": {}}, "Announcement": {"Attributes": ["Announcement ID", "Announcement Title", "Announcement Content", "Publisher", "Publish Time"], "Primary key": ["Announcement ID"], "Foreign key": {}}, "Question": {"Attributes": ["Questioner Account", "Question Content", "Question Time", "Answer Content", "Responder Account", "Answer Time"], "Primary key": ["Questioner Account", "Question Time"], "Foreign key": {"Responder Account": {"Schema 0": "Account"}, "Questioner Account": {"Schema 0": "Account"}}}}}
{"id": "67552f0a13602ec03b41a9f1", "question": "System Requirements Function Description\n\nAccording to the provided file content, Weishu is a novel reading system based on WeChat applet, and the main functional modules are as follows:\n\n1: My bookshelf: Users can add their favorite novels to the bookshelf for subsequent reading.\n\n2: Bookstore: Provides browsing and search functions for various novels, and users can find their favorite novels.\n\n3: Personal Center: Users can view and manage personal information, such as changing passwords, viewing bookshelves, etc.\n\n4: H5 reader: Provides online reading function and supports reading novel content directly in WeChat applet.\n\n5: Login and registration: Users can manage their accounts through registration and login functions.\n\n6: Book reviews: Users can comment on novels and share their reading experience.\n\n7: Book rankings: Display popular novel rankings to help users discover popular books.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Creation time", "Update time"], "Primary key": ["User ID"], "Foreign key": {}}, "Novel": {"Attributes": ["Novel ID", "Novel title", "Author", "ISBN", "Publication date", "Novel description", "Creation time", "Update time"], "Primary key": ["Novel ID"], "Foreign key": {}}, "Bookshelf": {"Attributes": ["Bookshelf ID", "User ID", "Novel ID", "Add time"], "Primary key": ["Bookshelf ID"], "Foreign key": {"Novel ID": {"Novel": "Novel ID"}, "User ID": {"User": "User ID"}}}, "Book review": {"Attributes": ["Book review ID", "User ID", "Novel ID", "Review content", "Rating", "Creation time"], "Primary key": ["Book review ID"], "Foreign key": {"Novel ID": {"Novel": "Novel ID"}, "User ID": {"User": "User ID"}}}, "Novel added to Bookshelf": {"Attributes": ["Novel ID", "Bookshelf ID", "Add time"], "Primary key": ["Novel ID", "Bookshelf ID", "Add time"], "Foreign key": {"Bookshelf ID": {"Bookshelf": "Bookshelf ID"}, "Novel ID": {"Novel": "Novel ID"}}}}}
{"id": "67552f0a13602ec03b41a9f5", "question": "System Requirements Function Description\n\n1. Front-end Function\nFilm and TV Information Browsing: Users can browse the latest movie and TV series information\nFilm and TV Reviews: Users can comment on movies and TV series\nFilm and TV Sharing: Users can share their favorite movies and TV series\nFilm and TV Rankings: Users can view the most popular movie and TV series rankings\nFilm and TV Search: Users can search for movies and TV series of interest by keywords\nCrew Information Query: Users can query the crew information of movies and TV series, such as directors, actors, etc.\nUser Login: Users can register and log in to the website to enjoy more personalized services\nCrew Login: Crew members can register and log in to the website to publish and manage relevant information\nUser Registration: Users can register to become website members\nCrew Registration: Crew members can register to become website members\n\n2. Backstage functions\nGeneral user management: Administrators can manage the account information of registered users, such as adding, deleting, and modifying user information\nCrew information management: Administrators can manage the account information of registered crews, such as adding, deleting, and modifying crew information\nAdministrator information management: Administrators can manage their own account information, such as changing passwords, viewing logs, etc.\nNews information management: Administrators can publish, edit, and delete news information\nNews column management: Administrators can add, delete, and modify news columns\nFilm and television information publishing management: Administrators can publish, edit, and delete information about movies and TV series\nComment information management: Administrators can view, review, and delete user comment information\nFilm and television ranking management: Administrators can adjust the ranking rules for movies and TV series\nSystem maintenance: Administrators can perform basic system maintenance, such as backing up the database, updating the system, etc.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Login Status"], "Primary key": ["User ID"], "Foreign key": {}}, "Crew": {"Attributes": ["Crew ID", "Crew Name", "Crew Members", "Crew Information", "Login Status"], "Primary key": ["Crew ID"], "Foreign key": {}}, "Film Information": {"Attributes": ["Information ID", "Information Title", "Information Content", "Publisher", "Publish Time"], "Primary key": ["Information ID"], "Foreign key": {}}, "Comment": {"Attributes": ["User ID", "Film ID", "Comment Content", "Comment Time"], "Primary key": ["Information ID", "User ID", "Comment Time"], "Foreign key": {"Film ID": {"Film Information": "Information ID"}, "User ID": {"User": "User ID"}}}, "Film Ranking": {"Attributes": ["Ranking ID", "Film ID", "Ranking Position", "Update Time"], "Primary key": ["Ranking ID"], "Foreign key": {"Film ID": {"Film Information": "Information ID"}}}}}
{"id": "67552f0a13602ec03b41a9f9", "question": "The system includes the following functionalities:\n1.Registration and Login Functionality\nNew User Registration: Teachers and students can register new accounts. The system must verify the uniqueness of student ID or teacher ID.\nUser Login: After registration, users can log in to the system. The system must authenticate the user\u2019s identity to prevent impersonation.\nUser Information: Each user has a unique user ID, username, password, student number (or teacher ID), role, registration time, and last login time.\n2.Sign-in Functionality\nStudent Sign-in: Students can sign in online. The system uses IP address and time constraints to prevent impersonation and multiple sign-ins. The system records the current sign-in status.\nTeacher Control Sign-in: Teachers can start and stop sign-in through control flags, view sign-in details. The control flag includes flag ID, teacher ID, sign-in start time, and end time.\n3.Statistics Functionality\nStudent Attendance Statistics: The system records each sign-in event and uses the total sign-in count to calculate the student\u2019s regular performance.\n4.Class and Course Management\nClass Information: Each student\u2019s class includes class name, major, and grade.\nCourse Information: Each course includes course name and description.\nRelationships: Each class has multiple students, and each course is taught by a teacher. ", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Student ID", "Role", "Registration Time", "Last Login Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Sign-in": {"Attributes": ["User ID", "Sign-in Time", "IP Address", "Sign-in Status"], "Primary key": ["User ID", "Sign-in Time"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Course": {"Attributes": ["Course ID", "Course Name", "Course Description", "Teacher ID"], "Primary key": ["Course ID"], "Foreign key": {"Teacher ID": {"User": "User ID"}}}, "Class": {"Attributes": ["Class ID", "Class Name", "Major", "Grade"], "Primary key": ["Class ID"], "Foreign key": {}}, "Grade": {"Attributes": ["Grade ID", "Student ID", "Course ID", "Regular Grade", "Final Grade", "Total Grade"], "Primary key": ["Grade ID"], "Foreign key": {"Student ID": {"User": "User ID"}, "Course ID": {"Course": "Course ID"}}}, "Control Flag": {"Attributes": ["Teacher ID", "Sign-in Start Time", "Sign-in End Time"], "Primary key": ["Teacher ID", "Sign-in Start Time"], "Foreign key": {"Teacher ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a9fb", "question": "The system is a user-article sharing forum with the following features:\n1.User Interaction Features:\nEach user has a unique User ID, Username, Password, Registration Time, Last Login Time, and Role.\nA user can participate in multiple activities, engage in video interviews, and comment or recommend books and articles.\n2.Content Management:\nThe system manages several books and articles.\nBook Information: Each book has a Book ID, Title, Author, and Description.\nArticle Information: Each article has an Article ID, Title, Content, Author, and Publish Time.\nActivity Information: Each activity has an Activity ID, Activity Name, Activity Time, and Description.\nVideo Interview Information: Each video interview has a Video ID, Title, Video Link, and Publish Time.\n3.Activity Management:\nThe system can organize source code reading activities, record activity names, times, and descriptions.\nUsers can participate in multiple activities.\nThe system also handles lottery activities, recording winner information and awarding gifts.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Registration Time", "Last Login Time", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Title", "Content", "Author", "Publish Time"], "Primary key": ["Article ID"], "Foreign key": {}}, "User Comments": {"Attributes": ["User ID", "Article ID", "Comment Content", "Comment Time"], "Primary key": ["User ID", "Article ID"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "User ID": {"User": "User ID"}}}, "Book": {"Attributes": ["Book ID", "Title", "Author", "Book Description"], "Primary key": ["Book ID"], "Foreign key": {}}, "Book Recommendation": {"Attributes": ["Book ID", "Recommendation Time", "Recommendation Reason", "Book Review", "Recommender ID"], "Primary key": ["Book ID", "Recommender ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Recommender ID": {"User": "User ID"}}}, "Activity": {"Attributes": ["Activity ID", "Activity Name", "Activity Time", "Activity Description"], "Primary key": ["Activity ID"], "Foreign key": {}}, "Activity Lottery": {"Attributes": ["Activity ID", "Prize Name", "Winner ID"], "Primary key": ["Activity ID", "Winner ID"], "Foreign key": {"Activity ID": {"Activity": "Activity ID"}, "Winner ID": {"User": "User ID"}}}, "Video Interview": {"Attributes": ["Video ID", "Title", "Video Link", "Publish Time"], "Primary key": ["Video ID"], "Foreign key": {}}, "User Activity Participation": {"Attributes": ["User ID", "Activity ID", "Participation Time"], "Primary key": ["User ID", "Activity ID"], "Foreign key": {"Activity ID": {"Activity": "Activity ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa25", "question": "A website provides travel information and user comment functionality. Users can register accounts, leaving details such as username, password, email, and other information. Users can post comments that include the content of the message and the time of posting. The website displays various tourist attractions, including the name, description, location, image URL, and category of each attraction. Each tourist attraction may receive some honors, which include a title and description. Additionally, the website features a carousel functionality that displays some images. The details of the images include the image ID, image URL, and creation time.\n", "answer": {"user": {"Attributes": ["user id", "username", "password", "email", "creation time"], "Primary key": ["user id"], "Foreign key": {}}, "comment": {"Attributes": ["comment id", "user id", "comment content", "creation time"], "Primary key": ["comment id"], "Foreign key": {"user id": {"user": "user id"}}}, "tourist attraction": {"Attributes": ["attraction id", "attraction name", "description", "location", "image url", "category", "creation time"], "Primary key": ["attraction id"], "Foreign key": {}}, "city honor": {"Attributes": ["honor id", "attraction id", "honor title", "honor description", "creation time"], "Primary key": ["honor id"], "Foreign key": {"attraction id": {"tourist attraction": "attraction id"}}}, "carousel": {"Attributes": ["carousel id", "image url", "creation time"], "Primary key": ["carousel id"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aa28", "question": "Business Requirement Description:\n1.Frontend User Features:\nUsers can log in through the WeChat mini-program. Each user has a unique User ID, Username, Password, Phone Number, Registration Time, Last Login Time, and Role.\n2.Product Management:\nAdministrators can add, edit, and delete product information. Each product includes Product ID, Product Name, Product Description, Price, Stock Quantity, Product Category, and Shelving Time.\n3.Order Management:\nAdministrators can manage the order status, such as processing orders and shipping. Each order includes Order ID, User ID, Order Status, Total Amount, Order Time, Payment Time, and Delivery Address.\n4.Purchase Management:\nEach user can add multiple products to their shopping cart and place multiple orders, with each order containing multiple products.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone Number", "Registration Time", "Last Login Time", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Description", "Price", "Stock Quantity", "Product Category", "Shelving Time"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "User ID", "Order Status", "Total Amount", "Order Time", "Payment Time", "Delivery Address"], "Primary key": ["Order ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Order Product": {"Attributes": ["Order ID", "Product ID", "Quantity", "Unit Price", "Subtotal"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}, "User Shopping Cart": {"Attributes": ["User ID", "Product ID", "Quantity"], "Primary key": ["User ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}, "User Order": {"Attributes": ["Order ID", "User ID", "Order Status", "Total Amount", "Order Time", "Payment Time", "Delivery Address"], "Primary key": ["Order ID", "User ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Order ID": {"Order": "Order ID"}}}, "Admin Product Management": {"Attributes": ["Admin ID", "Product ID", "Operation Time", "Operation Type"], "Primary key": ["Admin ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Admin ID": {"User": "User ID"}}}, "Admin Order Management": {"Attributes": ["Admin ID", "Order ID", "Operation Time", "Operation Type"], "Primary key": ["Admin ID", "Order ID"], "Foreign key": {"Admin ID": {"User": "User ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa2d", "question": "This is a pet grooming salon management system. The shop needs to manage pet groomers, customers, and their pets' information. Groomer information includes name, specialization, years of experience, and rating. Pets need to have basic information recorded including breed, age, weight, and fur characteristics. Each grooming service needs to record the service items, service duration, pricing, and customer ratings for the groomer's service.", "answer": {"Groomer": {"Attributes": ["Groomer ID", "Name", "Specialization", "Years of experience", "Rating"], "Primary key": ["Groomer ID"], "Foreign key": {}}, "Pet": {"Attributes": ["Pet ID", "Age", "Weight", "Fur characteristics", "Breed"], "Primary key": ["Pet ID"], "Foreign key": {}}, "Grooming service": {"Attributes": ["Groomer ID", "Pet ID", "Service items", "Service market", "Price", "Customer rating", "Service time"], "Primary key": ["Groomer ID", "Pet ID", "Service time"], "Foreign key": {"Pet ID": {"Pet": "Pet ID"}, "Groomer ID": {"Groomer": "Groomer ID"}}}}}
{"id": "67552f0b13602ec03b41aa35", "question": "The database is a multiplayer online gaming system, with primary functions including player information management, game records, single-player games, two-player battle games, player communication, and game status management. Below is the business description of the database:\n\n1. Player Management\nRecord the basic information of players. Each player has a unique Player ID, which includes the player's username, password, game, phone number, and registration time. This table supports player identity authentication and basic information queries.\n\n2. Game Record Management\nRecord the basic information of the game. Each game has a unique Game ID, including game rules, game content, and the maximum number of players allowed. This table is used to define the rules and configurations of the game, ensuring the rationality of the game battles.\n\n3. Single Player Management\nRecord the game records of a single player. Each record includes Player ID, Game ID, game start time, game end time, and game status. This table supports the recording and querying of single-player games, tracking the player's status in each game.\n\n4. Player Communication Management\nRecord the communication content between players. Each record includes the first Player ID, second Player ID, communication start time, communication end time, and communication content. This table is used to save the chat records or command content between players during game battles.\n\n5. Two-Player Battle Game Management\nRecord the battle information between two players. Each record includes the first Player ID, second Player ID, Game ID, battle start time, battle end time, and battle results. This table manages two-player battle games, recording the operations and results of the battling players.", "answer": {"Player": {"Attributes": ["Player ID", "Username", "Password", "Game", "Phone Number", "Registration Time"], "Primary key": ["Player ID"], "Foreign key": {}}, "Game Record": {"Attributes": ["Game ID", "Game Rules", "Game Content", "Maximum Number of Players"], "Primary key": ["Game ID"], "Foreign key": {}}, "Single Player Game": {"Attributes": ["Player ID", "Game ID", "Game Start Time", "Game End Time", "Game Status"], "Primary key": ["Player ID", "Game ID", "Game Start Time"], "Foreign key": {"Game ID": {"Game Record": "Game ID"}, "Player ID": {"Player": "Player ID"}}}, "Player Communication": {"Attributes": ["First Player ID", "Second Player ID", "Communication Start Time", "Communication End Time", "Communication Content"], "Primary key": ["First Player ID", "Second Player ID", "Communication Start Time"], "Foreign key": {"First Player ID": {"Player": "Player ID"}, "Second Player ID": {"Player": "Player ID"}}}, "Two-Player Battle Game": {"Attributes": ["First Player ID", "Second Player ID", "Game ID", "Battle Start Time", "Battle End Time", "Battle Result"], "Primary key": ["First Player ID", "Second Player ID", "Game ID", "Battle Start Time"], "Foreign key": {"First Player ID": {"Player": "Player ID"}, "Second Player ID": {"Player": "Player ID"}, "Game ID": {"Game Record": "Game ID"}}}}}
{"id": "67552f0b13602ec03b41aa38", "question": "The database described is an instant messaging system with core capabilities supporting message exchange between users, group chat management, and storage and tracking of messages and history.It includes the following functions:\n\nUser Management, Store basic user information, including usernames, passwords, contact information, and registration times. Each user has a unique User ID.\n\nGroup Chat Management, Stores group chat information, including the unique identifier (Group Chat ID), group chat name, creator's details, and creation time and number of members of the group chat.\n\nChat Record Management, Stores the chat records between users. Each record includes the sender and receiver's User IDs, time the message was sent, type of message (such as text, image, etc.), content of the message, and the time the message was read.\n\nUser Joining Group Chat Management, Records information related to users joining a group chat, including the User ID, Group Chat ID, join time, and notes made by the user when applying to join the group chat.\n\nUser Leaving Group Chat Management, Records information related to users leaving a group chat, including the User ID, Group Chat ID, and the time of leaving.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Games", "Phone", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Group Chat": {"Attributes": ["Group Chat ID", "Group Chat Name", "Creator ID", "Creation Time", "Total Members"], "Primary key": ["Group Chat ID"], "Foreign key": {"Creator ID": {"User": "User ID"}}}, "Chat Record": {"Attributes": ["User 1 ID", "User 2 ID", "Send Time", "Message Type", "Read Time", "Message Content"], "Primary key": ["User 1 ID", "User 2 ID", "Send Time"], "Foreign key": {"User 1 ID": {"User": "User ID"}, "User 2 ID": {"User": "User ID"}}}, "User Joining Group Chat": {"Attributes": ["User ID", "Group Chat ID", "Join Time", "Application Information"], "Primary key": ["User ID", "Group Chat ID", "Join Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Group Chat ID": {"Group Chat": "Group Chat ID"}}}, "User Leaving Group Chat": {"Attributes": ["User ID", "Group Chat ID", "Leaving Time"], "Primary key": ["User ID", "Group Chat ID", "Leaving Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Group Chat ID": {"Group Chat": "Group Chat ID"}}}}}
{"id": "67552f0b13602ec03b41aa4b", "question": "System Requirements Function Description\n\nThis system is a seismometer calibration information management system based on B/S architecture, which is mainly designed for users of provincial seismic stations and central stations. The main functions of the system include:\n\n1. Data entry function:\nEnter the calibration-related information of the seismometer, such as mechanical period, equivalent pendulum length, moment of inertia, calibration coil sensitivity, comparison results, vibration table test results, etc.\n\n2. Data query function:\nQuery the calibration information of the station seismometer, such as calibration time, amplitude, width, etc.\nQuery the historical results of seismometer calibration and conduct statistical analysis.\n\n3. User management function:\nManage user information, including user name, password, name, earthquake monitoring center station, etc.\nThrough permission access control, different user roles can access different interfaces. Ordinary users mainly have the authority to query, edit and their own related information, and administrator users have the authority to edit and manage various functions.\n\n4. System management function:\nManage personnel information, seismometer voltage sensitivity, seismometer calibration coil sensitivity, moment of inertia, equivalent pendulum length and other aspects of information.", "answer": {"User": {"Attributes": ["User Name", "Password", "Name", "Affiliated Earthquake Monitoring Center Station"], "Primary key": ["User Name"], "Foreign key": {}}, "Seismometer Calibration Information": {"Attributes": ["Mechanical Cycle", "Equivalent Pendulum Length", "Moment of Inertia", "Calibration Coil Sensitivity", "Ratio Test Result", "Vibration Table Test Result", "Calibration Time", "Amplitude", "Width"], "Primary key": ["Calibration Time"], "Foreign key": {}}, "System Management Information": {"Attributes": ["Personnel Information", "Seismometer Voltage Sensitivity", "Seismometer Calibration Coil Sensitivity", "Moment of Inertia", "Equivalent Pendulum Length"], "Primary key": ["Personnel Information"], "Foreign key": {}}, "User Role Access Control": {"Attributes": ["User Name", "Calibration Time", "Role"], "Primary key": ["User Name", "Calibration Time"], "Foreign key": {"Calibration Time": {"Seismometer Calibration Information": "Calibration Time"}, "User Name": {"User": "User Name"}}}}}
{"id": "67552f0b13602ec03b41aa67", "question": "Business Requirement Description :\n1.Production Statistics:\nProduction reports, displaying production data for each process. Information to be recorded includes the report type, date, production data, production indicators, completion status, metal recovery rate, and grade.\n2.Equipment Management:\nEquipment record management, including basic information (name, model, main category, subcategory, location, etc.). Equipment operation status, with real-time monitoring and alarm notifications in case of anomalies.\nEquipment inspection management, recording inspection plans and progress, performed by the inspector.\nEquipment failure reporting, recording information about the failure, including the reporter\u2019s ID, failure type, failure time, and processing status.\nEquipment repair management, handled by repair personnel, recording repair details and progress, and managing repair work orders. Information such as repair progress and repair time should be recorded.\n3.Quality Management:\nQuality report module, displaying the recovery rate and grade for each metal. Records to include metal recovery rate, incoming warehouse sample, metal grade, recovery rate daily report, and grade daily report.\n4.User Management:\nFor each user in the system, the following details should be recorded: user ID, username, role, permissions, status, and operation history.\n5.Announcements:\nAnnouncers can create, publish, delete, and retrieve announcements. Information to record includes announcement content, release time, and announcement status.\n6.Job Positions:\nThe system should register currently available job positions, including position ID, position name, position description, position responsibilities, and job requirements. Users can apply for positions, and the system will record the position match rate.", "answer": {"Production Report": {"Attributes": ["Report ID", "Report Type", "Date", "Production Data", "Production Indicators", "Completion Status", "Metal Recovery Rate", "Grade"], "Primary key": ["Report ID"], "Foreign key": {}}, "Equipment": {"Attributes": ["Equipment ID", "Equipment Name", "Model", "Main Category", "Subcategory", "Location", "Operation Status"], "Primary key": ["Equipment ID"], "Foreign key": {}}, "Equipment Inspection": {"Attributes": ["Equipment ID", "Inspector ID", "Inspection Plan", "Execution Progress"], "Primary key": ["Equipment ID", "Inspector ID"], "Foreign key": {"Inspector ID": {"User": "User ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}, "Equipment Failure Reporting": {"Attributes": ["Equipment ID", "Failure Reporter ID", "Failure Type", "Failure Time", "Processing Status"], "Primary key": ["Equipment ID", "Failure Reporter ID"], "Foreign key": {"Failure Reporter ID": {"User": "User ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}, "Equipment Repair": {"Attributes": ["Equipment ID", "Repair Person ID", "Repair Progress", "Repair Time"], "Primary key": ["Repair ID"], "Foreign key": {"Repair Person ID": {"User": "User ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}, "Quality Report": {"Attributes": ["Report ID", "Metal Recovery Rate", "Warehouse Sample", "Metal Grade", "Recovery Rate Daily Report", "Grade Daily Report"], "Primary key": ["Report ID"], "Foreign key": {}}, "Equipment Monitoring": {"Attributes": ["Equipment ID", "Equipment Type", "Collected Data", "Status", "Monitoring Data", "Fault Alarm", "Data Visualization", "Administrator ID"], "Primary key": ["Equipment ID", "Administrator ID"], "Foreign key": {"Administrator ID": {"User": "User ID"}, "Equipment ID": {"Equipment": "Equipment ID"}}}, "User": {"Attributes": ["User ID", "Username", "Role", "Permissions", "Status", "Operation History"], "Primary key": ["User ID"], "Foreign key": {}}, "Announcement": {"Attributes": ["Announcement ID", "Announcement Content", "Release Time", "Publisher ID", "Announcement Status"], "Primary key": ["Announcement ID"], "Foreign key": {"Publisher ID": {"User": "User ID"}}}, "Job Position": {"Attributes": ["Job ID", "Job Name", "Job Description", "Job Responsibilities", "Job Requirements"], "Primary key": ["Job ID"], "Foreign key": {}}, "User Job Application": {"Attributes": ["User ID", "Job ID", "Job Match Rate"], "Primary key": ["Job ID", "User ID"], "Foreign key": {"Job ID": {"Job Position": "Job ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aaa8", "question": "This is a group company business management system. For mall management, the system records basic information of each mall, including unique mall ID, mall name, address, and contact number. For department management, the system records basic information of each department, including unique department ID, department name, location distribution, and contact number. Each mall can contain multiple departments. For employee management, the system records basic information of each employee, including unique employee ID, name, position, phone number, and salary. Each employee can only belong to one department. For manager management, each department has one manager.", "answer": {"Mall": {"Attributes": ["Mall ID", "Mall name", "Address", "Contact number"], "Primary key": ["Mall ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department name", "Location distribution", "Contact number", "Mall ID", "Manager employee ID"], "Primary key": ["Department ID"], "Foreign key": {"Mall ID": {"Mall": "Mall ID"}, "Manager employee ID": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Phone number", "Salary", "Department ID"], "Primary key": ["Employee ID", "Department ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aaa9", "question": "The business requirements description of the hotel and flight booking system is as follows:  \n\nThe hotel manages multiple customers, each with a customer ID, name, gender, type, ID number, contact information, booking date, check-in time, and check-out time. Customer types are divided into regular customers and VIP customers, with different types of customers enjoying different discount rates.  \n\nThe company manages multiple flights, each with a flight name, flight date, airline name, departure location, departure time, destination, and arrival time. Customers can book flight tickets through the system.  \n\nThe company records flight booking information, with each booking record including a booking ID, discount rate, and ticket order number. Each booking also needs to record the customer and flight information.  \n\nAdditionally, the company manages multiple customer orders, with each order recording the order ID, customer ID, flight number, ticket order number, and discount rate.", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Gender", "Customer Type", "Customer ID Number", "Customer Contact Information", "Customer Booking Date", "Customer Check-in Time", "Customer Check-out Time"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Flight": {"Attributes": ["Flight ID", "Flight Name", "Flight Date", "Airline Name", "Departure Location", "Departure Time", "Destination", "Arrival Time"], "Primary key": ["Flight ID"], "Foreign key": {}}, "Flight Booking Record": {"Attributes": ["Booking Record ID", "Discount Rate", "Ticket Order Number", "Booked Flight ID", "Customer ID"], "Primary key": ["Booking Record ID"], "Foreign key": {"Booked Flight ID": {"Flight": "Flight ID"}}}, "Order": {"Attributes": ["Order ID", "Ticket Order Number", "Discount Rate", "Order Flight ID", "Customer ID"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Order Flight ID": {"Flight": "Flight ID"}}}}}
{"id": "67552f0b13602ec03b41aaba", "question": "The database is a charity donation management system primarily designed to record donor information, manage fundraising events, and track each donor's contribution records in different fundraising activities. The system aids charitable organizations in the effective management of fundraising events and donor interactions, ensuring transparency and traceability of donation amounts.\n\nThe system includes the following functions:\n\n1. Donor Management\nStore basic information of donors. Through this table, the system can manage personal profiles of donors, including names, contact details, and addresses, ensuring effective communication with the donors.\n2. Fundraising Event Management\nRecords all information for fundraising events. It includes the names, types, timings, and locations of the events. Through this table, the system can track the progress of each fundraising activity, including the current amount raised and the status of the event (ongoing or concluded).\n3. Donation Record Management\nRecords the donation behavior of donors in different fundraising events. Each record includes the donor, donation amount, time, method, and message. Through this table, the system can trace the donation history of each donor and record details of each donation.", "answer": {"Donor": {"Attributes": ["Donor ID", "Name", "Gender", "Phone", "Address", "Date of Birth", "Identity Card Number", "Type"], "Primary key": ["Donor ID"], "Foreign key": {}}, "Fundraising Event": {"Attributes": ["Event ID", "Event Name", "Event Type", "Event Start Time", "Event End Time", "Current Event Amount", "Event Status", "Event Address"], "Primary key": ["Event ID"], "Foreign key": {}}, "Donation Record": {"Attributes": ["Donor ID", "Event ID", "Donation Amount", "Donation Time", "Donation Method", "Donation Message"], "Primary key": ["Donor ID", "Event ID", "Donation Time"], "Foreign key": {"Donor ID": {"Donor": "Donor ID"}, "Event ID": {"Fundraising Event": "Event ID"}}}}}
{"id": "67552f0b13602ec03b41aae8", "question": "This is an email client system. For user management, the system records basic information of each user, including unique username and password. For email account management, the system records basic information of each email account, including email address and corresponding password. A user can have multiple email accounts. For address book management, each user can have one address book. The system records basic information of each contact, including unique contact ID, name, phone number, work address, and up to three email addresses. Each contact can only belong to one user. For email management, the system records basic information of each email, including unique email ID, sender address, recipient address, email status (received, pending, sent, and deleted), subject, content, sending time, and receiving time. One email can be sent to multiple users. For attachment management, the system records basic information of each attachment, including unique attachment ID within the email, attachment filename, and attachment size. One attachment can only belong to one email.", "answer": {"User": {"Attributes": ["Username", "Password"], "Primary key": ["Username"], "Foreign key": {}}, "Email account": {"Attributes": ["Email address", "Email password", "Username"], "Primary key": ["Email address"], "Foreign key": {"Username": {"User": "Username"}}}, "Contact": {"Attributes": ["Contact ID", "Name", "Phone", "Work address", "Email address 1", "Email address 2", "Email address 3", "Username"], "Primary key": ["Contact ID"], "Foreign key": {"Username": {"User": "Username"}}}, "Email": {"Attributes": ["Email ID", "Subject", "Content", "Status", "Sending time", "Receiving time", "Sender address"], "Primary key": ["Email ID"], "Foreign key": {"Sender address": {"Email account": "Email address"}}}, "Receipt": {"Attributes": ["Recipient address", "Email ID"], "Primary key": ["Recipient address", "Email ID"], "Foreign key": {"Recipient address": {"Email account": "Email address"}, "Email ID": {"Email": "Email ID"}}}, "Attachment": {"Attributes": ["Attachment ID", "Attachment filename", "Attachment size", "Email ID"], "Primary key": ["Attachment ID"], "Foreign key": {"Email ID": {"Email": "Email ID"}}}}}
{"id": "67552f0b13602ec03b41aaec", "question": "The course registration system of a university is designed as follows:\nA student has information such as Student ID, Name, Date of Birth, Phone Number, Home Address, and Registration Eligibility.\nThe university offers multiple courses, each with a Course ID, Course Name, Credits, Instructor, Class Time, and Location.\nWhen a student registers for a course, the system first verifies the legality of the provided information and checks the student's degree examination results to confirm registration eligibility.\nThe degree examination result information includes Result ID, Student ID, Examination Name, Grade, and Examination Date.\nIf a student is eligible for registration, the student can select courses and proceed with registration. The registration information includes Student ID, Course ID, Registration Time, and Status.\nThe system stores the registration information in the database and associates the enrolled students with the corresponding courses.\nAfter registration is completed, the system sends a notification of successful registration to the student and sends the registered courses and student information to the academic staff for subsequent management.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Date of Birth", "Phone Number", "Home Address", "Registration Eligibility"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Name", "Credits", "Instructor", "Class Time", "Class Location"], "Primary key": ["Course ID"], "Foreign key": {}}, "Registration": {"Attributes": ["Student ID", "Course ID", "Registration Time", "Status"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}, "Degree Examination Result": {"Attributes": ["Result ID", "Student ID", "Examination Name", "Grade", "Examination Date"], "Primary key": ["Result ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}}}}}
{"id": "67552f0b13602ec03b41aafc", "question": "This is a voter information management system. For voter management, the system records basic information of each voter, including unique voter ID, name, residential address, and registration status. Each eligible voter must register their voting district through the system and can only register in one district. For address management, the system records basic information of each address, including unique address ID, detailed address, and type (city or town). For district management, the system records basic information of each district, including unique district ID, name, and type. A voter's district is determined by their residential address, and each person can only have one address. A district may contain multiple towns, while larger cities may contain multiple districts.", "answer": {"Voter": {"Attributes": ["Voter ID", "Name", "Registration status", "Address ID", "Registration district ID"], "Primary key": ["Voter ID"], "Foreign key": {"Address ID": {"Address": "Address ID"}, "Registration district ID": {"District": "District ID"}}}, "Address": {"Attributes": ["Address ID", "Detailed address", "Type"], "Primary key": ["Address ID"], "Foreign key": {}}, "District": {"Attributes": ["District ID", "Name", "Type", "City ID"], "Primary key": ["District ID"], "Foreign key": {"City ID": {"City": "City ID"}}}, "City": {"Attributes": ["City ID", "Name", "Region"], "Primary key": ["City ID"], "Foreign key": {}}, "Town": {"Attributes": ["Town ID", "Name", "Region", "District ID"], "Primary key": ["Town ID"], "Foreign key": {"District ID": {"District": "District ID"}}}}}
{"id": "67552f0b13602ec03b41ab0f", "question": "The supermarket management system is designed as follows:\nThe company owns multiple supermarkets, each with manager, address, and telephone information.\nEach supermarket has multiple departments, with name, manager, and contact telephone for each department.\nEach department employs multiple employees, with employee number, name, contact information, position, and salary for each employee.\nThe supermarket sells multiple products, with product number, name, model, unit price, and inventory quantity for each product.\nThe system needs to record the process of allocating products to salespersons, including allocation time, allocation quantity, and salesperson information such as salesperson number, name, contact information, etc.\nThrough this data, the system can manage the supermarket's operations, including employee management, product inventory, and allocation, to optimize business processes and improve efficiency.", "answer": {"Company": {"Attributes": ["Company ID", "Company Name", "Address", "Telephone"], "Primary key": ["Company ID"], "Foreign key": {}}, "Supermarket": {"Attributes": ["Supermarket ID", "Company ID", "Manager", "Address", "Telephone"], "Primary key": ["Supermarket ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}, "Department": {"Attributes": ["Department ID", "Supermarket ID", "Department Name", "Manager", "Contact Telephone"], "Primary key": ["Department ID"], "Foreign key": {"Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Employee": {"Attributes": ["Employee ID", "Department ID", "Name", "Contact Information", "Position", "Salary"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Product": {"Attributes": ["Product ID", "Name", "Model", "Unit Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Product Inventory": {"Attributes": ["Inventory ID", "Supermarket ID", "Product ID", "Inventory Quantity"], "Primary key": ["Inventory ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Salesperson": {"Attributes": ["Salesperson ID", "Name", "Contact Information"], "Primary key": ["Salesperson ID"], "Foreign key": {}}, "Allocation Record": {"Attributes": ["Allocation ID", "Salesperson ID", "Product ID", "Allocation Time", "Allocation Quantity"], "Primary key": ["Allocation ID"], "Foreign key": {"Salesperson ID": {"Salesperson": "Salesperson ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0b13602ec03b41ab16", "question": "Required function description: 1. Submitting homework: After verifying the student ID, the student submits the electronic homework online. The system stores the homework and sends a successful submission notification to the student, and notifies the lecturer that there is a homework submission.\n2. Downloading ungraded homework: After verifying the lecturer ID, the lecturer downloads the homework submitted by the student from the system, and the homework is displayed on the screen.\n3. Grading homework: The lecturer grades and scores each question according to the format and makes an overall evaluation.\n4. Uploading graded homework: The lecturer returns the graded homework (including scores and evaluations) to the system, and the system stores the graded homework.\n5. Recording scores and evaluations: The system records the scores and evaluations of the graded homework in the student information and notifies the student that the homework has been graded.\n6. Obtaining graded homework: According to the student ID, the student can view the graded homework, including the submitted homework, scores and evaluations.\n7. Random inspection of homework: The teaching staff selects the graded homework samples according to the teaching staff ID, gives random inspection opinions, and forms a random inspection report for the lecturer.", "answer": {"student": {"Attributes": ["student id", "name", "telephone", "email"], "Primary key": ["student id"], "Foreign key": {}}, "lecturer": {"Attributes": ["lecturer id", "name", "telephone", "email"], "Primary key": ["lecturer id"], "Foreign key": {}}, "assignment": {"Attributes": ["assignment id", "student id", "submission time", "content", "status"], "Primary key": ["assignment id"], "Foreign key": {"student id": {"student": "student id"}}}, "correction record": {"Attributes": ["correction id", "homework id", "lecturer id", "correction time", "score", "evaluation"], "Primary key": ["correction id"], "Foreign key": {"homework id": {"assignment": "homework id"}, "lecturer id": {"lecturer": "lecturer id"}}}, "sampling record": {"Attributes": ["sampling id", "correction id", "teaching staff id", "sampling time", "sampling opinion"], "Primary key": ["sampling id"], "Foreign key": {"correction id": {"correction record": "correction id"}}}}}
{"id": "67552f0b13602ec03b41ab18", "question": "Requirement function description:\n1. Department management: The hotel has multiple departments, each department can have multiple employees, and each employee belongs to only one department; each department has only one manager who is responsible for managing the department.\n2. Employee management: Employee information includes employee number, name, position, phone number, and salary. The employee number uniquely identifies a tuple in the employee relationship. Positions include manager and salesperson.\n3. Room management: Room information includes room number, room type, charging standard, and check-in status. The room number uniquely identifies a tuple in the room relationship. Different room types have different charging standards.\n4. Customer management: Customer information includes customer number, unit name, contact person, contact number, and contact address. The customer number uniquely identifies a tuple in the customer relationship.\n5. Reservation management: When a customer reserves a room, he needs to fill in a reservation application. The reservation application information includes application number, customer number, check-in time, number of days, room type, and number of rooms. The application number uniquely identifies a tuple in the reservation application. A customer can have multiple reservation applications, but one reservation application corresponds to a unique customer.\n6. Arrangement management: The salesperson is responsible for arranging the room according to the customer's reservation application. The arrangement information includes the room number, customer name, gender, ID number, check-in time, number of days, and telephone number. The room number, ID number, and check-in time uniquely identify one arrangement. One salesperson can arrange multiple reservation applications. One reservation application can only be arranged by one salesperson, and multiple rooms of the same type can be arranged.\n\n", "answer": {"department": {"Attributes": ["department id", "department name", "manager id", "phone"], "Primary key": ["department id"], "Foreign key": {"manager id": {"employee": "employee id"}}}, "employee": {"Attributes": ["employee id", "name", "position id", "department id", "phone", "salary"], "Primary key": ["employee id"], "Foreign key": {"position id": {"position": "position id"}, "department id": {"department": "department id"}}}, "position": {"Attributes": ["position id", "position name", "authority"], "Primary key": ["position id"], "Foreign key": {}}, "room": {"Attributes": ["room id", "room type", "charge standard", "check-in status"], "Primary key": ["room id"], "Foreign key": {}}, "customer": {"Attributes": ["customer id", "company name", "contact person", "contact number", "contact address"], "Primary key": ["customer id"], "Foreign key": {}}, "Booking": {"Attributes": ["booking id", "Customer id", "Check-in time", "Number of days stayed", "Room type", "Number of rooms"], "Primary key": ["booking id"], "Foreign key": {"customer id": {"customer": "customer id"}}}, "Arrangement": {"Attributes": ["Booking id", "Room id", "Employee id"], "Primary key": ["Booking id"], "Foreign key": {"Booking id": {"Booking": "Booking id"}, "Employee id": {"employee": "Employee id"}, "Room id": {"room": "Room id"}}}}}
{"id": "67552f0b13602ec03b41ab4d", "question": "The company produces chess pieces for various chess games. Each chessboard represents a production line or batch for a specific chess game, with a chessboard ID and chessboard name. Each chessboard contains multiple chess pieces, each with color and position information.\nThe company performs quality inspection on each chess piece, recording the inspection time and result. If the inspection fails, the defect type is recorded and a quality alert is generated.\nAdditionally, the company uses quality inspection models to predict and evaluate the quality status during the production process, recording the model running time and results.", "answer": {"Chessboard": {"Attributes": ["Chessboard ID", "Chessboard Name"], "Primary key": ["Chessboard ID"], "Foreign key": {}}, "Chess Piece": {"Attributes": ["Chess Piece ID", "Color", "Position", "Belonging Chessboard"], "Primary key": ["Chess Piece ID"], "Foreign key": {"Belonging Chessboard": {"Chessboard": "Chessboard ID"}}}, "Quality Inspection": {"Attributes": ["Inspection ID", "Inspection Time", "Inspection Result", "Chess Piece ID"], "Primary key": ["Inspection ID"], "Foreign key": {"Chess Piece ID": {"Chess Piece": "Chess Piece ID"}}}, "Quality Alert": {"Attributes": ["Alert ID", "Defect Type", "Inspection ID"], "Primary key": ["Alert ID"], "Foreign key": {"Inspection ID": {"Quality Inspection": "Inspection ID"}}}, "Quality Inspection Model": {"Attributes": ["Model ID", "Running Time", "Model Result"], "Primary key": ["Model ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a78c", "question": "The pipeline company manages multiple pipelines, each identified by a pipeline ID, starting point, ending point, length, and diameter. The company employs multiple maintenance personnel, and each maintenance task must record the pipeline ID, maintenance personnel, maintenance details, and maintenance time. The system shall support real-time monitoring of pipeline maintenance tasks and performance evaluation.", "answer": {"Pipeline": {"Attributes": ["Pipeline ID", "Starting Point", "Ending Point", "Diameter"], "Primary key": ["Pipeline ID"], "Foreign key": {}}, "Maintenance Personnel": {"Attributes": ["Maintenance Personnel ID", "Name", "Phone"], "Primary key": ["Maintenance Personnel ID"], "Foreign key": {}}, "Maintenance Activity Record": {"Attributes": ["Pipeline ID", "Maintenance Personnel ID", "Maintenance Details", "Maintenance Time"], "Primary key": ["Pipeline ID", "Maintenance Personnel ID", "Maintenance Time"], "Foreign key": {"Pipeline ID": {"Pipeline": "Pipeline ID"}, "Maintenance Personnel ID": {"Maintenance Personnel": "Maintenance Personnel ID"}}}}}
{"id": "67552f0a13602ec03b41a792", "question": "Description of the business requirements of the hotel reservation system:\n\nThe hotel has multiple rooms, each with a room number, type (such as standard room, deluxe room), and price. Customers can reserve a room, and when making a reservation, they need to record the customer's name, phone number, reservation date, check-in date, and check-out date. The hotel needs to record the room information, customer information, and reservation status (such as confirmed, cancelled) for each reservation.", "answer": {"Room Table": {"Attributes": ["Room Number", "Room Type", "Price"], "Primary key": ["Room Number"], "Foreign key": {}}, "Customer Table": {"Attributes": ["Customer ID", "Name", "Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Reservation Record Table": {"Attributes": ["Customer ID", "Room Number", "Reservation Date", "Check-in Date", "Check-out Date", "Reservation Status"], "Primary key": ["Customer ID", "Room Number", "Reservation Date"], "Foreign key": {"Customer ID": {"Customer Table": "Customer ID"}, "Room Number": {"Schema 0": "Room Number"}}}}}
{"id": "67552f0a13602ec03b41a795", "question": "The hotel has multiple restaurants, each with a name, location, and operating hours. The restaurants offer various dishes, each with a name, price, and category. Customers can make table reservations at the restaurants. Each reservation records the customer information, restaurant information, reservation time, and number of diners.\n", "answer": {"Restaurant": {"Attributes": ["Restaurant ID", "Name", "Location", "Operating Hours"], "Primary key": ["Restaurant ID"], "Foreign key": {}}, "Dish": {"Attributes": ["Dish ID", "Name", "Price", "Category"], "Primary key": ["Dish ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Customer Reservation": {"Attributes": ["Reservation ID", "Customer ID", "Restaurant ID", "Reservation Time", "Number of Diners"], "Primary key": ["Reservation ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Restaurant ID": {"Restaurant": "Restaurant ID"}}}, "Restaurant_Dish": {"Attributes": ["Restaurant ID", "Dish ID"], "Primary key": ["Restaurant ID", "Dish ID"], "Foreign key": {"Dish ID": {"Dish": "Dish ID"}, "Restaurant ID": {"Restaurant": "Restaurant ID"}}}}}
{"id": "67552f0a13602ec03b41a796", "question": "The restaurant has multiple dining tables, each with a table number, location, and seating capacity. Customers can make table reservations. Each reservation records customer information, table information, reservation time, number of diners, and reservation status (such as confirmed or cancelled).\n", "answer": {"Table": {"Attributes": ["Table ID", "Location", "Seating Capacity"], "Primary key": ["Table ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Reservation": {"Attributes": ["Customer ID", "Table ID", "Reservation Time", "Number of Diners", "Reservation Status"], "Primary key": ["Customer ID", "Table ID", "Reservation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Table ID": {"Table": "Table ID"}}}}}
{"id": "67552f0a13602ec03b41a799", "question": "Broadcast Television Company produces and broadcasts a variety of programs, encompassing news, entertainment, sports, and other content types. Each program has a unique program ID, name, type, broadcast time, and duration. To ensure the quality of the programs, the company employs multiple production staff responsible for planning, producing, and post-producing each program. Each production staff member may participate in the production of multiple programs, and multiple production staff members may be involved in the production process of each program.\n\nEach time a program production is completed, in addition to recording the participating production staff, it is also necessary to record the production time, reviewers, and review results of the program. Reviewers are responsible for examining the content of the programs to ensure compliance and quality. The system must also support querying information about the programs and their production staff, as well as the review status of each program.", "answer": {"Program": {"Attributes": ["Program ID", "Program Name", "Program Type", "Broadcast Start Time", "Broadcast End Time", "Duration"], "Primary key": ["Program ID"], "Foreign key": {}}, "Staff": {"Attributes": ["Staff ID", "Name", "Position", "Gender", "Contact Number"], "Primary key": ["Staff ID"], "Foreign key": {}}, "Program Production": {"Attributes": ["Program ID", "Production Staff ID", "Working Duration"], "Primary key": ["Program ID", "Production Staff ID"], "Foreign key": {"Production Staff ID": {"Staff": "Staff ID"}, "Program ID": {"Program": "Program ID"}}}, "Program Review": {"Attributes": ["Program ID", "Reviewer ID", "Working Duration", "Review Result"], "Primary key": ["Program ID", "Reviewer ID"], "Foreign key": {"Reviewer ID": {"Staff": "Staff ID"}, "Program ID": {"Program": "Program ID"}}}}}
{"id": "67552f0a13602ec03b41a79a", "question": "The satellite transmission service company offers multiple satellite transmission services, each characterized by a service ID, name, transmission type, transmission rate, and price. The company has multiple clients, and each client can subscribe to multiple services. For every service subscription, the subscription time, end time, and operator must be recorded.", "answer": {"Service": {"Attributes": ["Service ID", "Service Name", "Transmission Type", "Transmission Rate", "Price"], "Primary key": ["Service ID"], "Foreign key": {}}, "Client": {"Attributes": ["Client ID", "Client Name", "Client Phone", "Client Address", "Client Email"], "Primary key": ["Client ID"], "Foreign key": {}}, "Service Subscription": {"Attributes": ["Service ID", "Client ID", "Subscription Start Time", "Subscription End Time", "Operator"], "Primary key": ["Service ID", "Client ID", "Subscription Start Time"], "Foreign key": {"Client ID": {"Client": "Client ID"}, "Service ID": {"Service": "Service ID"}}}}}
{"id": "67552f0a13602ec03b41a7b2", "question": "The business requirements description of the animal husbandry management information system are as follows:  \n\nMultiple ranches need to be managed, each with a ranch ID, name, and address, and each ranch can manage multiple types of livestock.  \nEach type of livestock has a name, species, livestock ID, and ranch ID.  \n\nThe ranch needs to record the health status of the livestock (including recording time, health status, health status ID, and livestock ID),  \nvaccination status (including vaccination measures, vaccination time, vaccination status ID, and livestock ID),  \nfeed consumption (including consumption time, feed type, consumption amount, feed consumption ID, and livestock ID),  \nand entry/exit records (including time, entry/exit type, entry/exit record ID, and livestock ID).", "answer": {"Ranch": {"Attributes": ["Name", "Address", "Ranch ID"], "Primary key": ["Ranch ID"], "Foreign key": {}}, "Livestock": {"Attributes": ["Name", "Species", "Livestock ID", "Ranch ID"], "Primary key": ["Livestock ID"], "Foreign key": {"Ranch ID": {"Ranch": "Ranch ID"}}}, "Health Status": {"Attributes": ["Recording Time", "Health Status", "Livestock ID"], "Primary key": ["Livestock ID", "Recording Time"], "Foreign key": {"Livestock ID": {"Livestock": "Livestock ID"}}}, "Vaccination Status": {"Attributes": ["Vaccination Measures", "Vaccination Time", "Livestock ID"], "Primary key": ["Livestock ID", "Vaccination Time"], "Foreign key": {"Livestock ID": {"Livestock": "Livestock ID"}}}, "Feed Consumption": {"Attributes": ["Consumption Time", "Feed Type", "Consumption Amount", "Livestock ID"], "Primary key": ["Livestock ID", "Consumption Time"], "Foreign key": {"Livestock ID": {"Livestock": "Livestock ID"}}}, "Entry/Exit Records": {"Attributes": ["Time", "Entry/Exit Type", "Livestock ID"], "Primary key": ["Livestock ID", "Time"], "Foreign key": {"Livestock ID": {"Livestock": "Livestock ID"}}}}}
{"id": "67552f0a13602ec03b41a7bd", "question": "The restaurant receives customer feedback. Each feedback item has a Feedback ID, Customer Information, Feedback Content, Feedback Time, and Processing Status (such as Processed or Unprocessed). The restaurant needs to record the detailed information and processing status of each feedback item.\n", "answer": {"Feedback": {"Attributes": ["Feedback ID", "Customer ID", "Feedback Content", "Feedback Time", "Processing Status"], "Primary key": ["Feedback ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7be", "question": "The following is a description of an Internet Service Feedback Management System: The system is mainly used for managing user feedback. The system records users' basic information, including user ID, username, contact number, and email. Each feedback has a feedback ID, user ID, feedback content, feedback time, processing status, and processing result. The company has multiple customer service representatives, each with an employee ID, name, contact information, and work status. Each customer service representative can handle multiple feedback items. For each feedback processing, the system needs to record the processing time, processing result, and the processor.", "answer": {"User": {"Attributes": ["User ID", "Username", "Contact number", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Feedback": {"Attributes": ["Feedback ID", "User ID", "Feedback content", "Feedback time", "Processing status"], "Primary key": ["Feedback ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Customer service representative": {"Attributes": ["Employee ID", "Name", "Contact information", "Work status"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Feedback result": {"Attributes": ["Feedback ID", "Processor employee ID", "Processing time", "Processing result"], "Primary key": ["Feedback ID"], "Foreign key": {"Feedback ID": {"Feedback": "Feedback ID"}, "Processor employee ID": {"Customer service representative": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a7c2", "question": "Agricultural Ecosystem Monitoring System requires recording monitoring data for multiple ecosystems. Each ecosystem has a System ID, Name, Location, Type (such as \"Forest\", \"Wetland\", etc.), and Current Status (such as \"Healthy\", \"Degraded\", etc.). Each monitoring record includes System ID, Monitoring Date, Temperature, Humidity, Soil Moisture, Plant Growth, and Operator. Each operator has an Employee ID, Name, Gender, Contact Information, and Position.", "answer": {"Ecosystem": {"Attributes": ["System ID", "Name", "Location", "Type", "Current Status"], "Primary key": ["System ID"], "Foreign key": {}}, "Monitoring Record": {"Attributes": ["System ID", "Monitoring Date", "Temperature", "Humidity", "Soil Moisture", "Plant Growth", "Employee ID"], "Primary key": ["System ID", "Monitoring Date"], "Foreign key": {"Employee ID": {"Operator": "Employee ID"}, "System ID": {"Ecosystem": "System ID"}}}, "Operator": {"Attributes": ["Employee ID", "Name", "Gender", "Contact Information", "Position"], "Primary key": ["Employee ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a7d0", "question": "The maintenance task management system shall be utilized for managing maintenance technicians, maintenance teams, customer information, and records related to maintenance tasks. The system shall support the assignment and management of maintenance tasks, record customer information during the maintenance process, including maintenance costs, duration, results, and collect customer feedback and satisfaction levels. The system may store the following information:  \nMaintenance Technician Table: Stores personal information of maintenance technicians, including technician name, gender, phone number, position, employment date, and team ID.  \n\nManagement Maintenance Team: Stores relevant information of maintenance teams, including team name, team leader ID, team responsibilities, and total number of members.  \n\nManagement Customer: Stores personal information of customers, including customer name, phone number, and address.  \n\nManagement Maintenance Task: Records detailed information for each maintenance task, including maintenance time, maintenance duration, costs, results, customer feedback, and model and name of the maintenance product. Each maintenance task also records customer satisfaction levels and feedback resolution results.", "answer": {"Maintenance Technician": {"Attributes": ["Technician ID", "Name", "Gender", "Phone", "Position", "Employment Date", "Team ID"], "Primary key": ["Technician ID"], "Foreign key": {"Team ID": {"Customer": "Team ID"}}}, "Maintenance Team": {"Attributes": ["Team ID", "Team Name", "Team Leader ID", "Team Responsibilities", "Total Team Members"], "Primary key": ["Team ID"], "Foreign key": {"Team Leader ID": {"Maintenance Technician": "Technician ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Phone", "Customer Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Maintenance Task": {"Attributes": ["Maintenance Task Number", "Customer ID", "Maintenance Cost", "Maintenance Duration", "Maintenance Result", "Maintenance Time", "Maintenance Technician"], "Primary key": ["Maintenance Task Number"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Maintenance Technician": {"Maintenance Technician": "Technician ID"}}}, "Maintenance Feedback": {"Attributes": ["Maintenance Task Number", "Feedback Content", "Feedback Resolution Result", "Customer Satisfaction"], "Primary key": ["Maintenance Task Number"], "Foreign key": {"Maintenance Task Number": {"Maintenance Task": "Maintenance Task Number"}}}}}
{"id": "67552f0a13602ec03b41a7d2", "question": "The following is a description of a Residential Housekeeping Service Company System: The company provides housekeeping services such as cleaning, cooking, and care. The company has multiple service teams, with each team having multiple housekeepers. Housekeeper information includes staff ID, name, contact number, service type, years of experience, and professional skills. Each service task has a task ID, customer information (customer name, customer phone), service date, service address, service type, and service duration. After service completion, the system needs to record service fee, service effectiveness, and customer evaluation. Housekeepers' performance evaluation is based on the number of completed tasks and customer satisfaction.", "answer": {"Service team": {"Attributes": ["Team ID", "Team name"], "Primary key": ["Team ID"], "Foreign key": {}}, "Housekeeper": {"Attributes": ["Staff ID", "Name", "Contact number", "Team ID", "Service type", "Years of experience", "Professional skills"], "Primary key": ["Staff ID"], "Foreign key": {"Team ID": {"Service team": "Team ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer name", "Customer phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Service task": {"Attributes": ["Task ID", "Service date", "Service address", "Service type", "Service duration", "Evaluation ID"], "Primary key": ["Task ID"], "Foreign key": {"Evaluation ID": {"Service evaluation": "Evaluation ID"}}}, "Service evaluation": {"Attributes": ["Evaluation ID", "Service fee", "Service effectiveness", "Customer evaluation"], "Primary key": ["Evaluation ID"], "Foreign key": {}}, "Staff task": {"Attributes": ["Staff ID", "Task ID"], "Primary key": ["Staff ID", "Task ID"], "Foreign key": {"Task ID": {"Service task": "Task ID"}, "Staff ID": {"Housekeeper": "Staff ID"}}}, "Customer task": {"Attributes": ["Customer ID", "Task ID"], "Primary key": ["Customer ID", "Task ID"], "Foreign key": {"Task ID": {"Service task": "Task ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a7df", "question": "This is a Construction Company Safety Inspection Management System. For project basic information management, the system records information such as project ID, project name, project manager, construction start date, expected completion date, actual completion date, project budget, and project location. For safety inspection records, the system maintains information including inspection ID, project ID, inspection date, inspection content, inspection results, and inspector. For projects with unsatisfactory inspection results, the system conducts tracking management, recording information such as tracking record ID, project ID, tracking date, tracking content, and tracking results.", "answer": {"Project": {"Attributes": ["Project ID", "Project name", "Project manager", "Construction start date", "Expected completion date", "Actual completion date", "Project budget", "Project location"], "Primary key": ["Project ID"], "Foreign key": {}}, "Safety inspection record": {"Attributes": ["Inspection ID", "Project ID", "Inspection date", "Inspection content", "Inspection result", "Inspector"], "Primary key": ["Inspection ID"], "Foreign key": {"Project ID": {"Project": "Project ID"}}}, "Unqualified project tracking record": {"Attributes": ["Tracking record ID", "Project ID", "Tracking date", "Tracking content", "Tracking result"], "Primary key": ["Tracking record ID"], "Foreign key": {"Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a7f4", "question": "The business requirements description for the analysis and management of real estate sales data are as follows:  \nIt is necessary to store basic information about properties, such as property ID, address, area, sale price, and sale date. Additionally, details of various analysis reports need to be recorded, including report ID, report date, report type, and analysis results.", "answer": {"Property Table": {"Attributes": ["Property ID", "Address", "Area", "Sale Price", "Sale Date"], "Primary key": ["Property ID"], "Foreign key": {}}, "Analysis Report Table": {"Attributes": ["Report ID", "Report Date", "Report Type", "Analysis Results", "Property ID"], "Primary key": ["Report ID"], "Foreign key": {"Property ID": {"Property Table": "Property ID"}}}}}
{"id": "67552f0a13602ec03b41a803", "question": "The movie production company needs to manage multiple movie projects, and each project has multiple directors, actors, and producers. The system needs to record each project's name, type, budget, filming time, and relevant personnel information, including name, email, and phone number.\n", "answer": {"Movie Project": {"Attributes": ["Project ID", "Project Name", "Project Type", "Budget", "Filming Time"], "Primary key": ["Project ID"], "Foreign key": {}}, "Director": {"Attributes": ["Director ID", "Director Name", "Email", "Phone Number"], "Primary key": ["Director ID"], "Foreign key": {}}, "Actor": {"Attributes": ["Actor ID", "Actor Name", "Email", "Phone Number"], "Primary key": ["Actor ID"], "Foreign key": {}}, "Producer": {"Attributes": ["Producer ID", "Producer Name", "Email", "Phone Number"], "Primary key": ["Producer ID"], "Foreign key": {}}, "Director Participate Project": {"Attributes": ["Director ID", "Project ID"], "Primary key": ["Director ID", "Project ID"], "Foreign key": {"Director ID": {"Director": "Director ID"}, "Project ID": {"Movie Project": "Project ID"}}}, "Actor Participate Project": {"Attributes": ["Actor ID", "Project ID"], "Primary key": ["Actor ID", "Project ID"], "Foreign key": {"Actor ID": {"Actor": "Actor ID"}, "Project ID": {"Movie Project": "Project ID"}}}, "Producer Participate Project": {"Attributes": ["Producer ID", "Project ID"], "Primary key": ["Producer ID", "Project ID"], "Foreign key": {"Producer ID": {"Producer": "Producer ID"}, "Project ID": {"Movie Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a805", "question": "The Cultural Arts Company needs to manage multiple exhibitions. Each exhibition has multiple curators and exhibits. The system needs to record the name, location, start time, and end time of each exhibition, as well as the information of curators and exhibits.\n", "answer": {"Exhibition": {"Attributes": ["Exhibition ID", "Exhibition Name", "Exhibition Location", "Exhibition Start Time", "Exhibition End Time"], "Primary key": ["Exhibition ID"], "Foreign key": {}}, "Curator": {"Attributes": ["Curator ID", "Curator Name", "Email", "Phone"], "Primary key": ["Curator ID"], "Foreign key": {}}, "Exhibit": {"Attributes": ["Exhibit ID", "Exhibit Name", "Exhibit Description", "Exhibit Image Path", "Exhibit Source"], "Primary key": ["Exhibit ID"], "Foreign key": {}}, "Exhibition Management": {"Attributes": ["Curator ID", "Exhibition ID"], "Primary key": ["Curator ID", "Exhibition ID"], "Foreign key": {"Exhibition ID": {"Exhibition": "Exhibition ID"}, "Curator ID": {"Curator": "Curator ID"}}}, "Exhibit Association": {"Attributes": ["Exhibit ID", "Exhibition ID"], "Primary key": ["Exhibit ID", "Exhibition ID"], "Foreign key": {"Exhibit ID": {"Exhibit": "Exhibit ID"}, "Exhibition ID": {"Exhibition": "Exhibition ID"}}}}}
{"id": "67552f0a13602ec03b41a80b", "question": "This is a Publishing House Book Management System. For book management, the system needs to manage multiple books, with each book containing information such as ISBN number, book title, publication date, and category. For author management, the system records multiple authors' information for each book, including author ID, name, email, and address. For editor management, the system maintains multiple editors' information for each book, including editor ID, name, email, and office location. For book relationship management, the system needs to record authors and editors for each book, including book ISBN number, author ID, and editor ID.\n", "answer": {"Book": {"Attributes": ["ISBN", "Book title", "Publication date", "Category"], "Primary key": ["ISBN"], "Foreign key": {}}, "Author": {"Attributes": ["Author ID", "Name", "Email", "Address"], "Primary key": ["Author ID"], "Foreign key": {}}, "Editor": {"Attributes": ["Editor ID", "Name", "Email", "Office location"], "Primary key": ["Editor ID"], "Foreign key": {}}, "Book author": {"Attributes": ["ISBN", "Author ID"], "Primary key": ["ISBN", "Author ID"], "Foreign key": {"ISBN": {"Book": "ISBN"}, "Author ID": {"Author": "Author ID"}}}, "Book editor": {"Attributes": ["ISBN", "Editor ID"], "Primary key": ["ISBN", "Editor ID"], "Foreign key": {"ISBN": {"Book": "ISBN"}, "Editor ID": {"Editor": "Editor ID"}}}}}
{"id": "67552f0a13602ec03b41a80c", "question": "The business requirements description for the book management system are as follows:  \nFor books, it is necessary to record key information for each book, such as the unique identifier BookID, title (Title), International Standard Book Number (ISBN), publication date (PublicationDate), and category (Category).  \nAn author can write many books, and for authors, the system needs to store AuthorID, name (Name), email (Email), and phone number (Phone).  \nAdditionally, an editor can edit multiple books, and the editor's information includes EditorID, name (Name), email (Email), and phone number (Phone).  \nThe system aims to achieve effective management of books, authors, editors, and the relationships between them.", "answer": {"Book": {"Attributes": ["BookID", "Title", "ISBN", "PublicationDate", "Category", "AuthorID", "EditorID"], "Primary key": ["BookID"], "Foreign key": {}}, "Author": {"Attributes": ["AuthorID", "Name", "Email", "Phone"], "Primary key": ["AuthorID"], "Foreign key": {}}, "Editor": {"Attributes": ["EditorID", "Name", "Email", "Phone"], "Primary key": ["EditorID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a80d", "question": "The radio station needs to manage multiple advertisements. Each advertisement has multiple clients and multiple broadcast time slots. The system needs to record the name, content, and broadcast time of each advertisement, as well as the contact information of clients and the arrangement of time slots.", "answer": {"Advertisement": {"Attributes": ["Advertisement ID", "Name", "Content"], "Primary key": ["Advertisement ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Broadcast Record": {"Attributes": ["Advertisement ID", "Time Slot"], "Primary key": ["Advertisement ID", "Time Slot"], "Foreign key": {"Advertisement ID": {"Advertisement": "Advertisement ID"}}}, "Advertisement Push": {"Attributes": ["Advertisement ID", "User ID"], "Primary key": ["Advertisement ID", "User ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Advertisement ID": {"Advertisement": "Advertisement ID"}}}}}
{"id": "67552f0a13602ec03b41a80e", "question": "The database is an advertising management system, whose main function is to manage the broadcast of advertisements and track the advertising broadcast data of customers. The following is a specific description of the requirements:\nAdvertising management: The system can manage the basic information of multiple advertisements, including the name, content, duration, etc. of the advertisement. Each advertisement can have a different broadcast schedule.\n\nCustomer management: The system can record the basic information of customers, including name, email and contact number.\n\nAdvertising broadcast tracking: The system tracks the detailed information of each advertisement broadcast, including the start time, end time, broadcast duration, ratings, etc. of the advertisement.", "answer": {"Advertisement": {"Attributes": ["Advertisement ID", "Advertisement Name", "Advertisement Content", "Advertisement Duration"], "Primary key": ["Advertisement ID"], "Foreign key": {}}, "Client": {"Attributes": ["Client ID", "Client Name", "Client Email", "Client Phone"], "Primary key": ["Client ID"], "Foreign key": {}}, "Play Advertisement": {"Attributes": ["Advertisement ID", "Client ID", "Start Time", "End Time", "Play Duration", "Viewership Rating"], "Primary key": ["Advertisement ID", "Client ID"], "Foreign key": {"Client ID": {"Client": "Client ID"}, "Advertisement ID": {"Advertisement": "Advertisement ID"}}}}}
{"id": "67552f0a13602ec03b41a812", "question": "The theater management system needs to manage information about performances, actors, and venues, and record the participation of actors in each performance. Specifically:\nFor each performance, the system shall record the name, start time, end time, and venue.\nThe theater has multiple venues, each with a name, address, and seating capacity.\nThe theater also has multiple actors, each with a name, email address, and phone number.\nEach performance will invite some actors to participate.", "answer": {"Performance": {"Attributes": ["Performance ID", "Name", "Start Time", "End Time", "Venue ID"], "Primary key": ["Performance ID"], "Foreign key": {"Venue ID": {"Venue": "Venue ID"}}}, "Venue": {"Attributes": ["Venue ID", "Name", "Address", "Seating Capacity"], "Primary key": ["Venue ID"], "Foreign key": {}}, "Actor": {"Attributes": ["Actor ID", "Name", "Email", "Phone Number"], "Primary key": ["Actor ID"], "Foreign key": {}}, "Actor Participation in Performance": {"Attributes": ["Performance ID", "Actor ID"], "Primary key": ["Performance ID", "Actor ID"], "Foreign key": {"Performance ID": {"Performance": "Performance ID"}, "Actor ID": {"Actor": "Actor ID"}}}}}
{"id": "67552f0a13602ec03b41a816", "question": "The urban greening management department requires a system to manage multiple parks. Each park shall have Attributes including name, location, area, and responsible person. The system shall record the plant species, quantity, and growth status for each park. Each record shall include the recording time, recorder, plant species, and quantity. Additionally, the system shall track greening maintenance activities, including maintenance time, maintenance content, maintenance personnel, and maintenance costs.", "answer": {"Park": {"Attributes": ["Park ID", "Park Name", "Park Location", "Park Area", "Responsible Person"], "Primary key": ["Park ID"], "Foreign key": {}}, "Plant": {"Attributes": ["Plant ID", "Plant Name", "Plant Category"], "Primary key": ["Plant ID"], "Foreign key": {}}, "Park Maintenance": {"Attributes": ["Maintenance ID", "Park ID", "Maintenance Time", "Maintenance Content", "Maintenance Personnel", "Maintenance Cost"], "Primary key": ["Maintenance ID"], "Foreign key": {"Park ID": {"Park": "Park ID"}}}, "Park Ecological Record": {"Attributes": ["Park ID", "Recorder", "Recording Time", "Record Number"], "Primary key": ["Record Number"], "Foreign key": {"Park ID": {"Park": "Park ID"}}}, "Plant Growth Record": {"Attributes": ["Record Number", "Plant ID", "Growth Status", "Quantity"], "Primary key": ["Record Number", "Plant ID"], "Foreign key": {"Plant ID": {"Plant": "Plant ID"}, "Record Number": {"Park Ecological Record": "Record Number"}}}}}
{"id": "67552f0a13602ec03b41a81c", "question": "Environmental Monitoring System Requirements:\nThe system needs to manage multiple monitoring sites. Each site has a unique ID, name, location, and a responsible person. Each monitoring personnel includes an ID, name, contact details, and the scope of monitoring. Each maintenance personnel includes an ID, name, contact details, and the scope of maintenance. Each monitoring session needs to record the air quality, water quality, noise level, timestamp, monitoring personnel, and the monitoring result for each site.\nThe system also needs to record maintenance activities for each monitoring site, including maintenance time, maintenance content, maintenance personnel, and maintenance cost.", "answer": {"Monitoring Site": {"Attributes": ["site ID", "site name", "location", "responsible person"], "Primary key": ["site ID"], "Foreign key": {}}, "Monitoring Personnel": {"Attributes": ["monitoring personnel ID", "name", "contact information", "monitoring scope"], "Primary key": ["monitoring personnel ID"], "Foreign key": {}}, "Maintenance Personnel": {"Attributes": ["maintenance personnel ID", "name", "contact information", "maintenance scope"], "Primary key": ["maintenance personnel ID"], "Foreign key": {}}, "Site Monitoring Data": {"Attributes": ["site ID", "monitoring personnel ID", "record time", "air quality", "water quality", "noise level", "monitoring result"], "Primary key": ["site ID", "monitoring personnel ID", "record time"], "Foreign key": {"monitoring personnel ID": {"Monitoring Personnel": "monitoring personnel ID"}, "site ID": {"Monitoring Site": "site ID"}}}, "Site Maintenance Data": {"Attributes": ["site ID", "maintenance personnel ID", "maintenance time", "maintenance content", "maintenance cost"], "Primary key": ["site ID", "maintenance personnel ID", "maintenance time"], "Foreign key": {"site ID": {"Monitoring Site": "site ID"}, "maintenance personnel ID": {"Maintenance Personnel": "maintenance personnel ID"}}}}}
{"id": "67552f0a13602ec03b41a81f", "question": "A gas company needs to monitor its production processes. Each production process has a process ID, name, start time, end time, and operator ID. Operators have operator ID, name, department, and contact information. Each monitoring record includes recording time, monitoring parameters, production process ID, and operator ID.", "answer": {"Operator": {"Attributes": ["Operator ID", "Name", "Department", "Contact information"], "Primary key": ["Operator ID"], "Foreign key": {}}, "Production process": {"Attributes": ["Process ID", "Name", "Start time", "End time", "Operator ID"], "Primary key": ["Process ID"], "Foreign key": {"Operator ID": {"Operator": "Operator ID"}}}, "Monitoring record": {"Attributes": ["Production process ID", "Recording time", "Monitoring parameters"], "Primary key": ["Production process ID", "Recording time"], "Foreign key": {"Production process ID": {"Production process": "Process ID"}}}}}
{"id": "67552f0a13602ec03b41a82c", "question": "The following is a database requirement description for a project fund management system:\n\nThe system aims to manage the fund flow of multiple projects. The project fund management department is responsible for monitoring and recording the financial status of each project. The Projects table records the basic information of each project, including \"Project ID\" (ProjectID, Primary key),\n\"Name\" (Name), and \"Budget\" (Budget), which are used to define and track the basic information and budget of each project. The Fund Flows table records all fund flow information related to the projects, including \"Flow ID\" (FlowID, Primary key),\n\"Project ID\" (ProjectID, Foreign key, associated with the Projects table),\n\"Fund Type\" (Type, income or expenditure),\n\"Amount\" (Amount),\n\"Date\" (Date), and \"Remarks\" (Remarks). By associating the Project ID and Flow ID, the system can accurately track the income and expenditure of each project, ensuring transparent and accurate financial management.\n", "answer": {"Project": {"Attributes": ["Project ID", "Name", "Budget"], "Primary key": ["Project ID"], "Foreign key": {}}, "Fund Flow Record": {"Attributes": ["Flow ID", "Project ID", "Fund Type", "Amount", "Date", "Remarks"], "Primary key": ["Flow ID"], "Foreign key": {"Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a82d", "question": "The laboratory reagent management department is responsible for managing multiple laboratory reagents, ensuring the accuracy and real-time updates of information such as inventory, usage status, and expiration dates. Each reagent is utilized by multiple laboratories to ensure an orderly distribution and usage process.\n\nReagent information includes Reagent ID, name, specifications, inventory quantity, and expiration date. Each laboratory has a unique Laboratory ID, name, person in charge, and location. To track the usage of reagents, it is necessary to record each instance of reagent usage, including Usage ID, Reagent ID, Laboratory ID, usage date, user, and usage quantity.\n\nThe system shall support querying reagent usage records and inventory status and shall be able to generate statistical reports based on reagents, laboratories, and usage dates, assisting management in timely monitoring of inventory information and reagent usage status. Additionally, the system shall provide alerts for impending reagent expiration to ensure laboratory experiments are not affected.", "answer": {"Reagent": {"Attributes": ["Reagent ID", "Reagent Name", "Reagent Specifications", "Inventory Quantity", "Expiration Date"], "Primary key": ["Reagent ID"], "Foreign key": {}}, "Laboratory": {"Attributes": ["Laboratory ID", "Laboratory Name", "Laboratory Location", "Laboratory Person in Charge ID"], "Primary key": ["Laboratory ID"], "Foreign key": {}}, "Personnel": {"Attributes": ["Personnel ID", "Name", "Gender", "Age", "Affiliated Laboratory ID"], "Primary key": ["Personnel ID"], "Foreign key": {"Affiliated Laboratory ID": {"Laboratory": "Laboratory ID"}}}, "Reagent Usage Record": {"Attributes": ["Reagent ID", "Usage Start Time", "Usage Duration", "Usage Quantity", "Usage Personnel ID"], "Primary key": ["Reagent ID", "Usage Personnel ID", "Usage Start Time"], "Foreign key": {"Usage Personnel ID": {"Personnel": "Personnel ID"}, "Reagent ID": {"Reagent": "Reagent ID"}}}}}
{"id": "67552f0a13602ec03b41a838", "question": "Business Requirements Description:\n\nA property management company manages multiple facilities within a residential community. Each facility has an ID, name, and location. For each maintenance event, the maintenance time, content, cost, and personnel involved need to be recorded. Maintenance personnel include their ID, name, and contact information.\n", "answer": {"Facility Table": {"Attributes": ["facility ID", "facility name", "facility location"], "Primary key": ["facility ID"], "Foreign key": {}}, "Maintenance Personnel Table": {"Attributes": ["maintenance personnel ID", "name", "contact number"], "Primary key": ["maintenance personnel ID"], "Foreign key": {}}, "Facility Maintenance Table": {"Attributes": ["maintenance personnel ID", "facility ID", "maintenance time", "maintenance content", "maintenance cost"], "Primary key": ["maintenance personnel ID", "facility ID", "maintenance time"], "Foreign key": {"maintenance personnel ID": {"Maintenance Personnel Table": "maintenance personnel ID"}, "facility ID": {"Facility Table": "facility ID"}}}}}
{"id": "67552f0a13602ec03b41a83b", "question": "Business Requirements Description:\nA coal mining company operates several mines, and each mine uses various types of equipment. Equipment has an ID, name, model, purchase date, and other relevant details. Mines have a mine ID, name, location, and person in charge. For each equipment maintenance event, the maintenance date, maintenance content, personnel, and maintenance cost need to be recorded. Maintenance personnel include their ID, name, and contact number. The information system should provide statistical analysis of the usage and maintenance of the equipment.", "answer": {"Mine Table": {"Attributes": ["mine ID", "mine name", "location", "person in charge"], "Primary key": ["mine ID"], "Foreign key": {}}, "Equipment Table": {"Attributes": ["equipment ID", "name", "model", "purchase date", "mine ID"], "Primary key": ["equipment ID"], "Foreign key": {"mine ID": {"Mine Table": "mine ID"}}}, "Maintenance Personnel Table": {"Attributes": ["maintenance personnel ID", "name", "contact number"], "Primary key": ["maintenance personnel ID"], "Foreign key": {}}, "Maintenance Record Table": {"Attributes": ["equipment ID", "maintenance personnel ID", "maintenance date", "maintenance content", "maintenance cost"], "Primary key": ["equipment ID", "maintenance date"], "Foreign key": {"maintenance personnel ID": {"Maintenance Personnel Table": "maintenance personnel ID"}, "equipment ID": {"Equipment Table": "equipment ID"}}}}}
{"id": "67552f0a13602ec03b41a845", "question": "The bank management system requirements are described as follows: The bank has multiple branch offices, and the name and address of each branch office are recorded. Each branch office has multiple customers, and each customer has a Customer ID, name, ID number, contact phone number, and email address.\nCustomers can open accounts at multiple branch offices, and each account has a unique Account number, Account type (Savings, Checking), balance, and open date.\nThe bank needs to record the transaction history of customers, including Transaction type (Deposit, Withdrawal), Transaction amount, Transaction time, and Transaction location.", "answer": {"Branch Office": {"Attributes": ["Branch Office ID", "Name", "Address"], "Primary key": ["Branch Office ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "ID Number", "Contact Phone Number", "Email Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Account": {"Attributes": ["Account Number", "Account Type", "Balance", "Open Date", "Customer ID", "Branch Office ID"], "Primary key": ["Account Number"], "Foreign key": {"Branch Office ID": {"Branch Office": "Branch Office ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Transaction Record": {"Attributes": ["Transaction ID", "Transaction Type", "Transaction Amount", "Transaction Time", "Transaction Location", "Account Number"], "Primary key": ["Transaction ID"], "Foreign key": {"Account Number": {"Account": "Account Number"}}}}}
{"id": "67552f0a13602ec03b41a84a", "question": "The futures company employs multiple traders, each of whom is assigned a unique trader ID, name, hire date, and contact number. Traders execute futures transactions for clients, with each client identified by a client ID, name, ID number, and contact number. Each transaction must record the futures code, transaction type (buy, sell), transaction quantity, transaction price, and transaction time. Additionally, the futures company shall maintain records of each trader's transaction performance and the risk level of each client.", "answer": {"Trader": {"Attributes": ["Trader ID", "Name", "Hire Date", "Contact Number"], "Primary key": ["Trader ID"], "Foreign key": {}}, "Client": {"Attributes": ["Client ID", "Client Name", "ID Number", "Contact Number", "Risk Level"], "Primary key": ["Client ID"], "Foreign key": {}}, "Transaction": {"Attributes": ["Trader ID", "Client ID", "Futures Code", "Transaction Type", "Transaction Quantity", "Transaction Price", "Transaction Time"], "Primary key": ["Trader ID", "Client ID", "Futures Code"], "Foreign key": {"Trader ID": {"Trader": "Trader ID"}, "Client ID": {"Client": "Client ID"}}}}}
{"id": "67552f0a13602ec03b41a84c", "question": "Here is the English translation in database requirement description style:\n\nThe following describes the business requirements for a private wealth management system database: The private wealth management company is responsible for providing asset management services to multiple clients, and financial advisors are responsible for developing investment plans based on clients' needs and risk preferences. The Financial Advisor (Advisor ID, Name, Hire Date, Contact Number) table records the basic information of each advisor for identifying and managing the company's financial advisors. The Client (Client ID, Name, ID Number, Contact Number, Risk Preference, Total Assets) table records detailed information about clients, managing each client's basic situation and financial needs.\n\nThe Financial Product (Product Code, Product Name, Product Type, Product Value) table contains various financial products offered by the company, helping manage and display products available for client investment. The Investment Portfolio (Portfolio ID, Client ID, Product Code, Quantity Held) table is used to record the financial products held by each client, ensuring the ability to track clients' investment situations.\n\nThe Transaction Record (Record ID, Portfolio ID, Product Code, Transaction Type, Transaction Quantity, Transaction Price, Transaction Time) table records each client transaction to track and manage client trading behavior.\n\nThrough the above data tables, the system can comprehensively manage client assets, risk preferences, investment portfolios, and transaction records, assisting financial advisors in developing appropriate wealth management plans for clients.\n", "answer": {"Financial Advisor": {"Attributes": ["Advisor ID", "Name", "Hire Date", "Contact Number"], "Primary key": ["Advisor ID"], "Foreign key": {}}, "Client": {"Attributes": ["Client ID", "Name", "ID Number", "Contact Number", "Risk Preference", "Total Assets"], "Primary key": ["Client ID"], "Foreign key": {}}, "Financial Product": {"Attributes": ["Product Code", "Product Name", "Product Type", "Product Value"], "Primary key": ["Product Code"], "Foreign key": {}}, "Client Holds Financial Products": {"Attributes": ["Client ID", "Product Code", "Quantity Held"], "Primary key": ["Client ID", "Product Code"], "Foreign key": {"Product Code": {"Financial Product": "Product Code"}, "Client ID": {"Client": "Client ID"}}}, "Client Transactions Products": {"Attributes": ["Client ID", "Product Code", "Transaction Time", "Transaction Type", "Transaction Quantity", "Transaction Price"], "Primary key": ["Client ID", "Product Code", "Transaction Time"], "Foreign key": {"Product Code": {"Financial Product": "Product Code"}, "Client ID": {"Client": "Client ID"}}}, "Client Inquiry Advisor": {"Attributes": ["Advisor ID", "Client ID", "Inquiry Time", "Inquiry Content"], "Primary key": ["Advisor ID", "Client ID", "Inquiry Time"], "Foreign key": {"Client ID": {"Client": "Client ID"}, "Advisor ID": {"Financial Advisor": "Advisor ID"}}}}}
{"id": "67552f0a13602ec03b41a850", "question": "The document management system of a university needs to manage multiple types of documents. Each document type has a unique identifier and name, as well as a version number.\nEach document type can have multiple status categories, such as \"Lifecycle Status\", \"Approval Status\", etc. Each status category has a corresponding version number and multiple statuses. Each status has a sequence number indicating its position in the process.", "answer": {"Document Type": {"Attributes": ["Document Type ID", "Name", "Version Number"], "Primary key": ["Document Type ID"], "Foreign key": {}}, "Status Category": {"Attributes": ["Status Category ID", "Name", "Version Number"], "Primary key": ["Status Category ID"], "Foreign key": {}}, "Status": {"Attributes": ["Status ID", "Name", "Sequence Number"], "Primary key": ["Status ID"], "Foreign key": {}}, "Status_Status Category": {"Attributes": ["Status ID", "Status Category ID"], "Primary key": ["Status ID", "Status Category ID"], "Foreign key": {"Status ID": {"Status": "Status ID"}, "Status Category ID": {"Status Category": "Status Category ID"}}}, "Status Category_Document Type": {"Attributes": ["Document Type ID", "Status Category ID"], "Primary key": ["Status Category ID", "Document Type ID"], "Foreign key": {"Document Type ID": {"Document Type": "Document Type ID"}, "Status Category ID": {"Status Category": "Status Category ID"}}}}}
{"id": "67552f0a13602ec03b41a855", "question": "The employee management system of a company requires the following:\nThe system shall record the basic information of employees, including name, position, phone number, salary level, supervisor, and department.       \nDefine different salary levels and their corresponding salary ranges.\nMeanwhile, the system shall manage department information, such as department number, name, and location, and assign employees to the corresponding departments.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Position", "Phone Number", "Salary Level ID", "Supervisor ID", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Supervisor ID": {"Employee": "Employee ID"}, "Salary Level ID": {"Salary Level": "Salary Level ID"}, "Department ID": {"Department": "Department ID"}}}, "Salary Level": {"Attributes": ["Salary Level ID", "Minimum Salary", "Maximum Salary"], "Primary key": ["Salary Level ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Location"], "Primary key": ["Department ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a85a", "question": "Business Requirements Description:\nA weather forecasting system is used to store and manage weather forecast data for different cities. The system should record basic city information, including city name, longitude, latitude, country, population, and timezone. The system should also store daily weather forecast data for each city, including date, sunrise and sunset times, temperature at different times of the day, \u201cfeels like\u201d temperature, atmospheric pressure, humidity, wind speed, wind direction, cloud cover, and precipitation probability. Additionally, the weather type should include a main description, detailed description, and icon.", "answer": {"City": {"Attributes": ["city ID", "city name", "longitude", "latitude", "country", "population", "timezone"], "Primary key": ["city ID"], "Foreign key": {}}, "Weather Forecast": {"Attributes": ["forecast ID", "city ID", "date", "sunrise time", "sunset time", "morning temperature", "noon temperature", "afternoon temperature", "feels like temperature", "atmospheric pressure", "humidity", "wind speed", "wind direction", "cloud cover", "precipitation probability", "weather type ID"], "Primary key": ["forecast ID"], "Foreign key": {"city ID": {"City": "city ID"}, "weather type ID": {"Weather Description": "weather type ID"}}}, "Weather Description": {"Attributes": ["weather type ID", "main description", "detailed description", "icon"], "Primary key": ["weather type ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a874", "question": "This database is a database used to manage and record the central material supply and billing system, mainly used for material procurement and expense management of scientific research institutions or laboratories.\n\nMain functions that the database can achieve\n\n1. Central material supply project management:\nRecord detailed information of each material supply project, including project number, material code, description, quantity, unit, cost, charge amount, etc.\nManage time information such as the creation date and closing date of the material supply project.\nRecord project number, bill and other information.\n\n2. Bill management:\nGenerate and record bill details for each material supply project, including material quantity, unit, cost, charge amount, etc.\nRecord the creation and modification time of the bill.\nManage the verification errors of the bill and their handling.", "answer": {"Material Table": {"Attributes": ["Material ID", "Name", "Unit Price"], "Primary key": ["Material ID"], "Foreign key": {}}, "Project Table": {"Attributes": ["Project ID", "Creation Date", "Close Date"], "Primary key": ["Project ID"], "Foreign key": {}}, "Bill Table": {"Attributes": ["Bill ID", "Total Sale Amount", "Creation Time", "Modification Time", "Unit", "Project ID"], "Primary key": ["Bill ID"], "Foreign key": {"Project ID": {"Project Table": "Project ID"}}}, "Bill Details Table": {"Attributes": ["Bill ID", "Material ID", "Quantity", "Selling Price"], "Primary key": ["Bill ID", "Material ID"], "Foreign key": {"Material ID": {"Material Table": "Material ID"}, "Bill ID": {"Bill Table": "Bill ID"}}}}}
{"id": "67552f0a13602ec03b41a877", "question": "Business Requirements Description:\nThis database can be used for an online seat reservation system, such as for cinemas, theaters, or conference halls. The system can record and manage seat information for different areas, including seat locations (X-coordinate, Y-coordinate, row, column), type, price, creation time, update time, etc. The system can mark the validity of seats using a flag field, such as whether a seat has been reserved or purchased. The system supports multiple seat layout templates, including template name and description, which are suitable for different occasions or time periods. Users have a unique ID, name, contact number, and email address. Users can query available seats based on seat location, type, price, etc. Users can select seats online for reservation or purchase, and the system will update the seat status accordingly.", "answer": {"Seat": {"Attributes": ["seat ID", "location X", "location Y", "row", "column", "type", "price", "flag", "creation time", "update time", "reservedPurchasedUserID"], "Primary key": ["seat ID"], "Foreign key": {"reservedPurchasedUserID": {"User": "user ID"}}}, "Seat Template": {"Attributes": ["template ID", "template name", "description"], "Primary key": ["template ID"], "Foreign key": {}}, "Seat Template Layout": {"Attributes": ["seat ID", "template ID", "time period", "occasion"], "Primary key": ["seat ID", "template ID"], "Foreign key": {"seat ID": {"Seat": "seat ID"}, "template ID": {"Seat Template": "template ID"}}}, "User": {"Attributes": ["user ID", "name", "email", "contact number"], "Primary key": ["user ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a87e", "question": "The requirement analysis for a medical record management system is as follows: record basic information of doctors, including name, gender, telephone number, date of birth, age, department affiliation, and level. Record various medicines\u2019 name, function, unit price, and inventory. Record basic information of patients, including name, gender, date of birth, age, phone, address, and emergency contact number; also, patient medication records need to be recorded, including Patient ID, Medicine ID, dosage, frequency of medication, precautions, and prescription time; in addition, consultation records including consultation time, diagnosis results, and treatment recommendations need to be recorded.", "answer": {"Patient": {"Attributes": ["Patient ID", "Name", "Gender", "Date of Birth", "Age", "Phone", "Address", "Emergency Contact Number"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Doctor": {"Attributes": ["Doctor ID", "Name", "Gender", "Phone Number", "Date of Birth", "Age", "Department Affiliation", "Level"], "Primary key": ["Doctor ID"], "Foreign key": {}}, "Medicine": {"Attributes": ["Medicine ID", "Medicine Name", "Medicine Function", "Medicine Unit Price", "Medicine Inventory"], "Primary key": ["Medicine ID"], "Foreign key": {}}, "Consultation Record": {"Attributes": ["Patient ID", "Doctor ID", "Consultation Time", "Diagnosis Results", "Treatment Recommendations"], "Primary key": ["Patient ID", "Doctor ID", "Consultation Time"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Patient ID": {"Patient": "Patient ID"}}}, "Patient Medication Record": {"Attributes": ["Patient ID", "Medicine ID", "Dosage", "Frequency of Medication", "Precautions", "Prescription Time"], "Primary key": ["Patient ID", "Medicine ID", "Prescription Time"], "Foreign key": {"Patient ID": {"Patient": "Patient ID"}, "Medicine ID": {"Medicine": "Medicine ID"}}}}}
{"id": "67552f0a13602ec03b41a87f", "question": "Business Requirements Description:\nThis database is for an Agile Development Management System used to manage stories (requirements), tasks, sprints (iterations), and acceptance criteria within a project. The primary features include:\n1.Manage Stories (Requirements): Create and edit stories, including story descriptions, status, story points, and titles. Assign stories to specific projects and sprints.\n2.Manage Tasks: For each story, create and assign tasks, including task titles, descriptions, and status.\n3.Manage Sprints (Iterations): Create and manage sprints within a project. Each sprint belongs to a project and includes a name, start time, end time, and status. Assign stories to specific sprints.\n4.Manage Acceptance Criteria: For each story, create acceptance criteria, including criteria ID, description, and status. Track and manage the acceptance criteria for stories.\n5.Message Event Management: Record message events related to specific topics, including event ID, subject, message reference, version, creation time, and update time. This is used for messaging and event recording within the project.\nThrough these features, the system helps teams better manage and track project progress, ensuring each story and task is completed on time and meets the acceptance criteria.", "answer": {"Project": {"Attributes": ["project ID", "project name", "project description", "creation time", "update time"], "Primary key": ["project ID"], "Foreign key": {}}, "Story": {"Attributes": ["story ID", "title", "description", "status", "story points", "project ID", "sprint ID"], "Primary key": ["story ID"], "Foreign key": {"sprint ID": {"Sprint": "sprint ID"}, "project ID": {"Project": "project ID"}}}, "Task": {"Attributes": ["task ID", "title", "description", "status", "story ID"], "Primary key": ["task ID"], "Foreign key": {"story ID": {"Story": "story ID"}}}, "Sprint": {"Attributes": ["sprint ID", "sprint name", "start time", "end time", "status", "project ID"], "Primary key": ["sprint ID"], "Foreign key": {"project ID": {"Project": "project ID"}}}, "Acceptance Criteria Table": {"Attributes": ["acceptance criteria ID", "description", "status"], "Primary key": ["acceptance criteria ID"], "Foreign key": {}}, "Message Event": {"Attributes": ["message event ID", "subject", "message reference", "version", "creation time", "update time", "project ID"], "Primary key": ["message event ID"], "Foreign key": {"project ID": {"Project": "project ID"}}}}}
{"id": "67552f0a13602ec03b41a883", "question": "The database business requirement description for a role-based access control system is as follows: The system is designed to manage the association between roles and permissions. Each role has Attributes such as name, description, creation time, and update time. Each permission also has information such as name, description, creation time, and update time. The system records the relationship between roles and permissions, including Role ID, Permission ID, creation time, and update time. The association between roles and permissions ensures the consistency and completeness of the system data.\n", "answer": {"Role": {"Attributes": ["Role ID", "Role Name", "Role Description", "Creation Time", "Update Time"], "Primary key": ["Role ID"], "Foreign key": {}}, "Permission": {"Attributes": ["Permission ID", "Permission Name", "Permission Description", "Creation Time", "Update Time"], "Primary key": ["Permission ID"], "Foreign key": {}}, "Role Permission Assignment": {"Attributes": ["Role ID", "Permission ID", "Creation Time", "Update Time"], "Primary key": ["Role ID", "Permission ID"], "Foreign key": {"Permission ID": {"Permission": "Permission ID"}, "Role ID": {"Role": "Role ID"}}}}}
{"id": "67552f0a13602ec03b41a884", "question": "The River social application needs to manage user registration, login, profiles, follow relationships, and user-published content. Each user has a unique Account ID, Name, Email, Password, Verification Status, and Account Status. The follow relationship records the follower and followee information between users, including the Follower Account ID and Followee Account ID. Additionally, users can publish posts, with each post containing a Post ID, Publisher Account ID, Content, Publish Time, and Attachment Link. The system also needs to manage user notifications, recording the Notification Type, Recipient Account ID, Related Post or User, and Notification Time. All data should maintain integrity and consistency to support key functions such as user registration, login, profile management, follow interactions, content publishing, and message notifications.", "answer": {"user": {"Attributes": ["Account ID", "Name", "Email", "Password", "Verification Status", "Account Status"], "Primary key": ["Account ID"], "Foreign key": {}}, "post": {"Attributes": ["Post ID", "Publisher", "Content", "Publish Time", "Attachment Link"], "Primary key": ["Post ID"], "Foreign key": {"Publisher": {"user": "Account ID"}}}, "notification": {"Attributes": ["Notification ID", "Recipient User", "Notification Type", "Notification Time"], "Primary key": ["Notification ID"], "Foreign key": {"Recipient User": {"user": "Account ID"}}}, "follow": {"Attributes": ["User Account 1", "User Account 2"], "Primary key": ["User Account 1", "User Account 2"], "Foreign key": {"User Account 1": {"user": "Account ID"}, "User Account 2": {"user": "Account ID"}}}}}
{"id": "67552f0a13602ec03b41a886", "question": "The system is a metadata repository for task scheduling, specifically suited for the Quartz scheduling framework. Quartz is an open-source job scheduling framework widely used in Java applications, responsible for managing and scheduling timed tasks. The system supports task definition, trigger management, Cron scheduling, simple triggers, task instance management, and other functions. \n\nThe core entities in the system include tasks, schedulers, triggers, and locks. The task entity mainly consists of task ID, task name, task description, class name, persistence flag, and concurrent execution flag. The task ID is the unique identifier, and all other properties depend on the task ID. The scheduler entity contains scheduler ID, scheduler name, scheduler status, scheduler configuration, and scheduler logs, with the scheduler ID being the unique identifier, and other Attributes describing the configuration and status of the scheduler. The trigger entity includes trigger ID and trigger name, recording basic information for all triggers in the system. Additionally, triggers are divided into sub-entities by type, such as simple triggers, Cron triggers, complex triggers, and Blob triggers, each type having different Attributes.\n\nSimple triggers include trigger ID, trigger name, trigger type, repeat count, repeat interval, and triggered count; Cron triggers contain trigger ID, trigger name, trigger type, Cron expression, and timezone; complex triggers include trigger ID, trigger name, trigger type, and Attributes like string, integer, long integer, decimal, and boolean; Blob triggers possess trigger ID, trigger name, trigger type, and binary Attributes. The lock entity is used to control concurrency in the task scheduling process, with Attributes including lock ID, lock name, lock status, and lock description.\n\nThe relationships within the system are also crucial. The task-to-trigger relationship table records the association between each task and its triggers, containing task ID, trigger ID, next execution time, last execution time, priority, trigger status, start time, end time, calendar name, and fault instruction. Each task can use multiple triggers, and each trigger may also be associated with multiple tasks. The scheduler-to-task relationship table describes which schedulers schedule which tasks, linking scheduler ID, task ID, and trigger ID. The scheduler-to-lock relationship table records the relationship between schedulers and locks, ensuring lock management in a multi-instance environment, Attributes include scheduler ID, lock ID, acquisition time, and release time. \n\nThese entities and relationships constitute the basic framework of the task scheduling system, ensuring task scheduling, execution, and concurrency control, adapting to complex scheduling requirements and multi-instance environments.\n", "answer": {"Task": {"Attributes": ["Task ID", "Task Name", "Task Description", "Class Name", "Persistence Flag", "Concurrent Execution Flag"], "Primary key": ["Task ID"], "Foreign key": {}}, "Trigger Summary": {"Attributes": ["Trigger ID", "Trigger Name"], "Primary key": ["Trigger ID"], "Foreign key": {}}, "Scheduler Acquires Lock": {"Attributes": ["Scheduler ID", "Lock ID", "Acquisition Time", "Release Time"], "Primary key": ["Scheduler ID", "Lock ID"], "Foreign key": {"Scheduler ID": {"Scheduler": "Scheduler ID"}, "Lock ID": {"Lock": "Lock ID"}}}, "Scheduler": {"Attributes": ["Scheduler ID", "Scheduler Name", "Scheduler Status", "Scheduler Configuration", "Scheduler Log"], "Primary key": ["Scheduler ID"], "Foreign key": {}}, "Simple Trigger": {"Attributes": ["Trigger ID", "Trigger Name", "Trigger Type", "Repeat Count", "Repeat Interval", "Count Of Triggers"], "Primary key": ["Trigger ID"], "Foreign key": {}}, "Cron Trigger": {"Attributes": ["Trigger ID", "Trigger Name", "Trigger Type", "Cron Expression", "Timezone"], "Primary key": ["Trigger ID"], "Foreign key": {}}, "Complex Trigger": {"Attributes": ["Trigger ID", "Trigger Name", "Trigger Type", "String Attributes", "Integer Attributes", "Long Integer Attributes", "Decimal Attributes", "Boolean Attributes"], "Primary key": ["Trigger ID"], "Foreign key": {}}, "Blob Trigger": {"Attributes": ["Trigger ID", "Trigger Name", "Trigger Type", "Binary Attributes"], "Primary key": ["Trigger ID"], "Foreign key": {}}, "Lock": {"Attributes": ["Lock ID", "Lock Name", "Lock Status", "Lock Description"], "Primary key": ["Lock ID"], "Foreign key": {}}, "Task Uses Trigger": {"Attributes": ["Task ID", "Trigger ID", "Next Execution Time", "Last Execution Time", "Priority", "Trigger Status", "Start Time", "End Time", "Calendar Name", "Fault Instruction"], "Primary key": ["Task ID", "Trigger ID"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "Trigger ID": {"Trigger Summary": "Trigger ID"}}}, "Scheduler Schedules Task": {"Attributes": ["Scheduler ID", "Task ID", "Trigger ID"], "Primary key": ["Scheduler ID", "Task ID", "Trigger ID"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "Trigger ID": {"Trigger Summary": "Trigger ID"}, "Scheduler ID": {"Scheduler": "Scheduler ID"}}}}}
{"id": "67552f0a13602ec03b41a88c", "question": "The requirements analysis for the company's internal management system is as follows:  \n\nCompany Management:  \nStore company information, including Company ID, Creation Date, Update Date, Company Website, and Company Name. The Company Name is unique. Operations include adding, modifying, and deleting company information, such as the company name and website.  \n\nUser Management:  \nStore user information, including User ID, Creation Date, Update Date, Is Admin, Real Name, Password Type, Password Salt, Username, Email, Password, Display Name Usage, Is Developer, and Last Login Time. The Username and Email are unique. Operations include registering new users, modifying user information, setting admin and developer roles, and recording the last login time. A company can have multiple users.  \n\nAPI Key Management:  \nStore API key information, including Key ID, Creation Date, Update Date, Private Key, Application Reason, Key Name, and URI. The Key Name is unique and is associated with the user table. A user can only have one API key. Users can apply for an API key and provide a reason for the application.  \n\nEmployee Management:  \nStore employee information, including Employee ID, Creation Date, Update Date, Employee Name, Position, and Salary. This is associated with the company table, and a company can have multiple employees. Operations include managing employee information such as name, position, and salary, as well as assigning employees to different companies.  \n\nSite Management:  \nStore site information, including Site ID, Creation Date, Update Date, Database Name, Is Deprecated, Site Name, Hostname, and Site Abbreviation. The Database Name and Site Abbreviation are unique and are associated with the user table. A user can only use one site. Operations include managing site information such as site name, hostname, and site abbreviation, as well as marking sites as deprecated.  \n\nDevice Management:  \nStore device information, including Device ID, Creation Date, Update Date, Device Name, and Associated Employee ID. This is associated with the employee table, and an employee can manage multiple devices.", "answer": {"Companies Table": {"Attributes": ["Company ID", "Creation Date", "Update Date", "Company Website", "Company Name"], "Primary key": ["Company ID"], "Foreign key": {}}, "Users Table": {"Attributes": ["User ID", "Creation Date", "Update Date", "Is Admin", "Real Name", "Password Type", "Password Salt", "Username", "Email", "Password", "Display Name Usage", "Is Developer", "Last Login Time", "Company ID", "Site ID"], "Primary key": ["User ID"], "Foreign key": {"Site ID": {"Sites Table": "Site ID"}}}, "API Keys Table": {"Attributes": ["Key ID", "Creation Date", "Update Date", "Private Key", "Application Reason", "Key Name", "URI"], "Primary key": ["Key ID"], "Foreign key": {}}, "Employees Table": {"Attributes": ["Employee ID", "Creation Date", "Update Date", "Employee Name", "Position", "Salary", "Company ID"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Sites Table": {"Attributes": ["Site ID", "Creation Date", "Update Date", "Database Name", "Is Deprecated", "Site Name", "Hostname", "Site Abbreviation"], "Primary key": ["Site ID"], "Foreign key": {}}, "Devices Table": {"Attributes": ["Device ID", "Creation Date", "Update Date", "Device Name", "Associated Employee ID"], "Primary key": ["Device ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a88f", "question": "The project management and customer relationship management system needs to implement the following functionalities. The system shall be able to manage customer information, including customer name, ID, address, contact information, and remarks. Each customer is uniquely identified by an ID. The system supports project management, recording project information including project name, associated customer, start date, status, scale, and remarks. Each project is managed by a specific project manager. The reporting system associated with projects also needs to support report management functionality, generating and recording information including report date, time, description, and creator. User management is one of the fundamental functions of the system, needing to record user name, abbreviation, password, active status, and status information, ensuring user abbreviations are unique within the system, and users can be activated or deactivated.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Address", "Contact Information", "Remarks"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Start Date", "Status", "Scale", "Remarks", "Project Manager"], "Primary key": ["Project ID"], "Foreign key": {"Project Manager": {"User": "User ID"}}}, "Project Report": {"Attributes": ["Project Report ID", "Report Date", "Time", "Description", "Creator", "Associated Project"], "Primary key": ["Project Report ID"], "Foreign key": {"Associated Project": {"Project": "Project ID"}, "Creator": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "User Name", "Abbreviation", "Password", "Active Status", "Status Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Project Customer Record": {"Attributes": ["Project ID", "Customer ID"], "Primary key": ["Project ID", "Customer ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a89b", "question": "\"The insurance management system is required to manage information about customers, regions, income groups, vehicle segments, and policies. A customer includes their name, email, phone number, gender, date of birth, marital status, relevant region, and income group. The system must also record various insurance Attributes of a policy such as personal injury liability insurance, collision insurance, etc., along with their premiums, and link them to the corresponding vehicle segments. When a customer purchases a policy, an insurance record is generated, including the purchase date and expiration date. The system should be capable of conducting statistical analysis on customers from different regions and income groups, and according to vehicle segments or types of policies, thereby supporting subsequent business decisions and customer services.\"", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Email", "Phone", "Gender", "Date of Birth", "Marital Status", "Region", "Income Group ID"], "Primary key": ["Customer ID"], "Foreign key": {"Income Group ID": {"Income Group": "Income Group ID"}}}, "Income Group": {"Attributes": ["Income Group ID", "Income Group Name", "Income Range"], "Primary key": ["Income Group ID"], "Foreign key": {}}, "Insurance": {"Attributes": ["Insurance ID", "Insurance Name", "Insurance Type", "Premium", "Vehicle Segment"], "Primary key": ["Insurance ID"], "Foreign key": {}}, "Customer Purchases Insurance": {"Attributes": ["Purchasing Customer", "Insurance ID", "Purchase Date", "Expiration Date"], "Primary key": ["Purchasing Customer", "Insurance ID"], "Foreign key": {"Insurance ID": {"Insurance": "Insurance ID"}, "Purchasing Customer": {"Customer": "Customer ID"}}}, "Customer Associated Income Group": {"Attributes": ["Customer ID", "Income Group ID"], "Primary key": ["Customer ID", "Income Group ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Income Group ID": {"Income Group": "Income Group ID"}}}}}
{"id": "67552f0a13602ec03b41a89e", "question": "Below is a database business requirement description for a session management system: The system is designed to manage user session information, including session creation, access, expiration, and association with user information. The session table includes fields such as Session ID, Creation Time, Last Access Time, Maximum Inactivity Interval, Expiration Time, Principal Name, Attributes Value, and User ID. The user table contains Attributes including User ID, Username, Password, Email, Phone Number, Creation Time, and Last Access Time. Through the \"Session and User\" relationship table, the system ensures that each session is associated with one user, and a user can have multiple sessions.\n", "answer": {"Session": {"Attributes": ["Session ID", "Creation Time", "Last Access Time", "Maximum Inactivity Interval", "Expiration Time", "Principal Name", "Attributes Value", "User ID"], "Primary key": ["Session ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone Number", "Creation Time", "Last Access Time"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8a4", "question": "A company's workflow management system is as follows:\nThe system contains multiple organizations, and each organization can initiate multiple processes.\nProcess information includes Process ID, Parent Process ID (can be null), Organization ID, Process Type, Log Information, Resource ID, Status, Start Time, and End Time.\nEach process may generate multiple events. Event information includes Event ID, Process ID, Event Type, Log Information, Status, and Timestamp.     \nThe system needs to record detailed information for each process and its related events to track the execution of workflows.", "answer": {"Organization": {"Attributes": ["Organization ID", "Organization Name"], "Primary key": ["Organization ID"], "Foreign key": {}}, "Process": {"Attributes": ["Process ID", "Parent Process ID", "Organization ID", "Process Type", "Log Information", "Resource ID", "Status", "Start Time", "End Time"], "Primary key": ["Process ID"], "Foreign key": {"Organization ID": {"Organization": "Organization ID"}, "Parent Process ID": {"Process": "Process ID"}}}, "Event": {"Attributes": ["Event ID", "Process ID", "Event Type", "Log Information", "Status", "Timestamp"], "Primary key": ["Event ID"], "Foreign key": {"Process ID": {"Process": "Process ID"}}}}}
{"id": "67552f0a13602ec03b41a8a5", "question": "The permission allocation for an image library management system is as follows: The system contains multiple albums, and album information includes an album ID, which cannot be null and is a Foreign key referencing the album ID in the album table. Permissions can be assigned to roles, and the role ID can be null and is a Foreign key referencing the role ID in the role table. Each permission record includes a permission ID, album ID, role ID, view permission, and edit permission. The permission ID is the Primary key and auto-incremented, while the view permission and edit permission are of boolean type and cannot be null. Through this table, the system can flexibly control the view and edit permissions of different roles for albums.", "answer": {"Album": {"Attributes": ["Album ID", "Album Name", "Photo Count"], "Primary key": ["Album ID"], "Foreign key": {}}, "Role": {"Attributes": ["Role ID", "Role Name"], "Primary key": ["Role ID"], "Foreign key": {}}, "Permission": {"Attributes": ["Album ID", "Role ID", "View Permission", "Edit Permission"], "Primary key": ["Album ID", "Role ID"], "Foreign key": {"Album ID": {"Album": "Album ID"}, "Role ID": {"Role": "Role ID"}}}}}
{"id": "67552f0a13602ec03b41a8ac", "question": "Below is the database business requirements analysis for the Mexican tortilla production and sales system: The system manages the production and sales of Mexican tortillas, as well as user permission management, involving multiple entities and relationships. First are the ingredients (Ingredient ID, Ingredient Name, Ingredient Type); the system records all detailed information about the ingredients. Next are the Mexican tortilla design records (Mexican Tortilla ID, Mexican Tortilla Name, Creation Time); the system manages the basic design and creation information of the Mexican tortillas.\nFurthermore, the system has users, recording all user information on the platform, including Username, Password, and Account Activation Status. Permissions are used to manage user permission information, defining the available permissions within the system and their descriptions.\n", "answer": {"Ingredient": {"Attributes": ["Ingredient ID", "Ingredient Name", "Ingredient Type"], "Primary key": ["Ingredient ID"], "Foreign key": {}}, "Mexican Tortilla Design": {"Attributes": ["Mexican Tortilla ID", "Mexican Tortilla Name", "Creation Time"], "Primary key": ["Mexican Tortilla ID"], "Foreign key": {}}, "Mexican Tortilla Ingredient": {"Attributes": ["Mexican Tortilla ID", "Ingredient ID"], "Primary key": ["Mexican Tortilla ID", "Ingredient ID"], "Foreign key": {"Mexican Tortilla ID": {"Mexican Tortilla Design": "Mexican Tortilla ID"}, "Ingredient ID": {"Ingredient": "Ingredient ID"}}}, "Order": {"Attributes": ["Mexican Tortilla ID", "Order Creation Time", "Recipient Street Address", "Recipient City", "Recipient State/Province", "Recipient Postal Code", "Credit Card Number", "Credit Card Expiry Date", "Credit Card Security Code", "Recipient"], "Primary key": ["Mexican Tortilla ID", "Order Creation Time", "Recipient"], "Foreign key": {"Mexican Tortilla ID": {"Mexican Tortilla Design": "Mexican Tortilla ID"}, "Recipient": {"User": "Username"}}}, "User": {"Attributes": ["Username", "User Password", "User Activation Status"], "Primary key": ["Username"], "Foreign key": {}}, "Permission": {"Attributes": ["Permission Name", "Permission Description"], "Primary key": ["Permission Name"], "Foreign key": {}}, "User Permission": {"Attributes": ["Username", "Permission Name", "Grant Time", "Validity Period"], "Primary key": ["Username", "Permission Name"], "Foreign key": {"Permission Name": {"Permission": "Permission Name"}, "Username": {"User": "Username"}}}}}
{"id": "67552f0a13602ec03b41a8ad", "question": "Business Requirements Description:\nThis database is for an HR (Human Resources) Management System used within an organization. The system can:\n1.Manage Department Information: Add, delete, and modify department details, including department ID, name, and description.\n2.Manage Role Information: Add, delete, and modify roles within departments, including role name and salary. Each department can have multiple roles, and each role can exist in multiple departments.\n3.Manage Employee Information: Add, delete, and modify employee details. The system can query an employee list with detailed information, including name, role, actual salary, and department.\n4.Salary Management: Manage and modify employee salary information, including salary amount and leave status.", "answer": {"Department": {"Attributes": ["department ID", "department name", "department description", "superior department ID"], "Primary key": ["department ID"], "Foreign key": {"superior department ID": {"Department": "department ID"}}}, "Role": {"Attributes": ["role ID", "role name", "salary"], "Primary key": ["role ID"], "Foreign key": {}}, "Employee": {"Attributes": ["employee ID", "name", "role ID", "actual salary", "department ID"], "Primary key": ["employee ID"], "Foreign key": {"role ID": {"Role": "role ID"}, "department ID": {"Department": "department ID"}}}, "Department and Role": {"Attributes": ["department ID", "role ID", "role name", "department name"], "Primary key": ["department ID", "role ID"], "Foreign key": {"role ID": {"Role": "role ID"}, "department ID": {"Department": "department ID"}}}}}
{"id": "67552f0a13602ec03b41a8af", "question": "Library management system aims to enhance library management efficiency, optimize resource allocation, and improve user experience. As an important venue for knowledge dissemination and cultural exchange, library management involves various aspects such as personnel information, book information, and borrowing information. With the increasing volume of library collections and diverse borrowing demands, traditional manual management methods are inadequate to meet modern management requirements, necessitating a comprehensive, computerized management platform.\n\nThe library management system will efficiently manage and maintain the following content:\n\nPersonnel management: store personnel information within the library, including professors and students' personal data, facilitating the management of borrowing records and contact information.  \nBook management: manage the library's book information, ensure effective registration of books, update publication information, and manage book copies.  \nBorrowing management: record borrower and borrowing information, manage the start time, end time, and return status of each borrowing event, support borrowing history queries.  \nReturn management: record the return date and copy information of books, timely update books' borrowable status, prevent borrowing conflicts and overdue situations.  \nQuery and statistics functions: provide powerful query and statistics functions, help administrators quickly query borrowing situations, promptly identify overdue unreturned books, optimize the flow and borrowing management of book resources.  \nThe design goal of the system is to optimize book borrowing and returning management processes through database support, provide real-time query and statistical report functions, and enhance the operating efficiency of the library.", "answer": {"Borrower": {"Attributes": ["Borrower ID", "Name", "Gender", "Phone", "Email"], "Primary key": ["Borrower ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Title", "Price", "Publisher", "Category", "Publication Year", "Author"], "Primary key": ["Book ID"], "Foreign key": {}}, "Book Borrowing": {"Attributes": ["Borrower ID", "Book ID", "Borrow Time", "Borrow Duration", "Expected Return Time", "Borrow Quantity"], "Primary key": ["Borrower ID", "Book ID", "Borrow Time"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Borrower ID": {"Borrower": "Borrower ID"}}}, "Book Return": {"Attributes": ["Borrower ID", "Book ID", "Borrow Duration", "Return Time", "Is Overdue Return", "Overdue Penalty Amount", "Return Quantity"], "Primary key": ["Borrower ID", "Book ID", "Return Time"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Borrower ID": {"Borrower": "Borrower ID"}}}}}
{"id": "67552f0a13602ec03b41a8b1", "question": "This is an online document knowledge base system for managing and displaying various e-books and their document content. The system supports a multi-level classification structure, facilitating content categorization and flexible adjustment of category display order. For document management, documents can belong to specific e-books and support a multi-level directory structure. For e-book management, e-books can belong to different levels of categories for easy user access, each e-book can contain multiple documents, and track total reads and likes, while providing cover images and detailed descriptions. For data statistics, the system records daily reading and like statistics for e-books, analyzing trends in content popularity. For user management, the system supports users to register personal accounts and log in, ensuring each user has a unique identity.", "answer": {"Category": {"Attributes": ["Category ID", "Category name", "Display order", "Parent category ID"], "Primary key": ["Category ID"], "Foreign key": {"Parent category ID": {"Category": "Category ID"}}}, "E-book": {"Attributes": ["E-book ID", "Book title", "Cover URL", "Detailed description", "Category ID"], "Primary key": ["E-book ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}}}, "Document": {"Attributes": ["Document ID", "Document content", "E-book ID"], "Primary key": ["Document ID"], "Foreign key": {"E-book ID": {"E-book": "E-book ID"}}}, "Statistics": {"Attributes": ["Statistics ID", "Date", "Like count", "Read count", "E-book ID"], "Primary key": ["Statistics ID"], "Foreign key": {"E-book ID": {"E-book": "E-book ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8b2", "question": "Business Requirements Description:\nThis system is designed to manage and monitor the description information of various services. Each service has a unique service ID, a base URL (base_url), and a health check URL (health_url). The system tracks the service\u2019s status, creation time, and update time. Each service can have multiple description entries, each with a description ID (sd_id), service ID, description set ID (set_id), description content, creation time, and update time. The system supports service registration, management of description information, and monitoring of service status.", "answer": {"Service": {"Attributes": ["service ID", "base_url", "health_url", "status", "creation time", "update time"], "Primary key": ["service ID"], "Foreign key": {}}, "Service Description": {"Attributes": ["set_id", "sd_id", "service ID", "description", "creation time", "update time"], "Primary key": ["set_id", "sd_id"], "Foreign key": {"service ID": {"Service": "service ID"}}}}}
{"id": "67552f0a13602ec03b41a8b7", "question": "This is a permission management system for managing and controlling user roles and menu permissions in an application. The system supports adding, deleting, and modifying user information, including username, password, first name, and last name. For role management, the system can add, delete, and modify role information, including role name and unique identifier, and supports assigning roles to users. For menu management, the system allows adding, deleting, and modifying application menu items, including menu ID, parent menu ID, label, and relative URL, while supporting the construction of menu tree structures for multi-level menus. For permission management, the system supports assigning menu permissions to roles, controlling which menu items roles can access, and dynamically generating accessible menus based on user roles. Through access control functionality, the system controls user access to different features in the application based on user permissions.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "First name", "Last name", "Role ID"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role name"], "Primary key": ["Role ID"], "Foreign key": {}}, "Menu": {"Attributes": ["Menu ID", "Label", "Relative URL", "Parent menu ID"], "Primary key": ["Menu ID"], "Foreign key": {"Parent menu ID": {"Menu": "Menu ID"}}}}}
{"id": "67552f0a13602ec03b41a8b8", "question": "Regional Management System Description:\n\nThe Regional Management System is designed to manage regional information nationwide. The system encompasses multiple regions, each distinctively identified by a set of Attributes including unique Regional Code, City Code, Center Coordinates, Regional Level, Merged Name, Regional Name, Parent Regional ID, Pinyin, Abbreviation, and Postal Code.  A hierarchical structure among regions is established through Parent Regional ID, supporting the management of multi-level regional structures.", "answer": {"Region": {"Attributes": ["Regional Code", "City Code", "Center Coordinates", "Regional Level", "Merged Name", "Regional Name", "Parent Regional ID", "Pinyin", "Abbreviation", "Postal Code"], "Primary key": ["Regional Code"], "Foreign key": {"Parent Regional ID": {"Region": "Regional Code"}}}}}
{"id": "67552f0a13602ec03b41a8bc", "question": "The business requirements for the product management system of an e-commerce platform are described as follows: the platform contains various products. Product information includes Product ID, Product Name, Product Slogan, Product Description, Product Category, and Default Price. Each product can include multiple styles, where each style is associated with only one product. Style information includes Style ID, Associated Product ID, Style Name, Sale Price, Original Price, and whether it is the Default Style. Each product also has multiple features, where each feature is associated with only one product. Feature information includes Feature ID, Associated Product ID, Feature Name, and Feature Value. Each style contains multiple SKUs, where each SKU is associated with only one style. SKU information includes SKU ID, Associated Style ID, Size, and Stock Quantity. Each style also includes multiple photos. Photo information includes Photo ID, Associated Style ID, Photo URL, and Thumbnail URL. Through these tables, the system comprehensively manages product details, styles, features, inventory, and display images, ensuring the efficient operation of product display and sales processes on the platform.", "answer": {"Product": {"Attributes": ["Product ID", "Product Name", "Product Slogan", "Product Description", "Product Category", "Default Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Style": {"Attributes": ["Style ID", "Style Name", "Sale Price", "Original Price", "Is Default Style", "Associated Product ID"], "Primary key": ["Style ID"], "Foreign key": {"Associated Product ID": {"Product": "Product ID"}}}, "Feature": {"Attributes": ["Feature ID", "Feature Name", "Feature Value", "Associated Product ID"], "Primary key": ["Feature ID"], "Foreign key": {"Associated Product ID": {"Product": "Product ID"}}}, "SKU": {"Attributes": ["SKU ID", "Associated Style ID", "Size", "Stock Quantity"], "Primary key": ["SKU ID"], "Foreign key": {"Associated Style ID": {"Style": "Style ID"}}}, "Photo": {"Attributes": ["Photo ID", "Associated Style ID", "Photo URL", "Thumbnail URL"], "Primary key": ["Photo ID"], "Foreign key": {"Associated Style ID": {"Style": "Style ID"}}}}}
{"id": "67552f0a13602ec03b41a8be", "question": "With the popularity of football worldwide, an increasing number of football enthusiasts and related organizations (such as football clubs and event organizers) are seeking dedicated social platforms to communicate, interact, participate in activities, track matches, and join memberships. A dedicated football social platform or membership management system can provide users with a centralized and comprehensive way to manage their social activities, match records, player/team profiles, and event interactions.\n\nSuch systems are not only suitable for the majority of football fans but can also serve football clubs, sponsors, and event organizers, assisting them in interacting with members, conducting marketing activities, managing event information, and providing personalized services. The main features include:\n\nUser registration and personal information management: including user basic information, social information (such as friends relationships), personal interests, etc.\nMembership management: allowing fans or users to become members and enjoy specific services, discounts, and activities.\nTeam management: users can create teams, join teams, and manage team information, etc.\nMatch management: including match schedules, match timelines, match results, etc.", "answer": {"General User Information": {"Attributes": ["User ID", "Name", "Account", "Password", "Gender", "Age", "Phone", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Member Information": {"Attributes": ["Member ID", "Member Level", "Validity Start", "Validity End", "Status"], "Primary key": ["Member ID"], "Foreign key": {}}, "Team Information": {"Attributes": ["Team ID", "Team Name", "Team Leader ID", "Total Team Members", "Team Creation Time"], "Primary key": ["Team ID"], "Foreign key": {"Team Leader ID": {"General User Information": "User ID"}}}, "Football Player Information": {"Attributes": ["Football Player ID", "Affiliated Team ID"], "Primary key": ["Football Player ID", "Affiliated Team ID"], "Foreign key": {"Affiliated Team ID": {"Team Information": "Team ID"}, "Football Player ID": {"General User Information": "User ID"}}}, "Match Information": {"Attributes": ["Match ID", "Home Team ID", "Away Team ID", "Match Time", "Match Location", "Match Result"], "Primary key": ["Match ID"], "Foreign key": {"Home Team ID": {"Team Information": "Team ID"}, "Away Team ID": {"Team Information": "Team ID"}}}}}
{"id": "67552f0a13602ec03b41a8c2", "question": "The enterprise management system is required to manage information regarding companies, users, employees, devices, and sites simultaneously. In the system, each company shall be recorded with its name, website address, and creation time. A company may have multiple employees; their names, positions, and salaries are to be stored and associated with their respective companies. Each employee may use multiple devices; the system shall record the name of each device and specify the employee to whom it belongs. Regarding user information, the system shall store usernames, emails, passwords, and the last login time, and link users to the sites they have created. Each site shall have a unique name and hostname and can be marked as deleted.", "answer": {"Company": {"Attributes": ["Company ID", "Name", "Website", "Creation Date"], "Primary key": ["Company ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Salary", "Belonging Company"], "Primary key": ["Employee ID"], "Foreign key": {"Belonging Company": {"Company": "Company ID"}}}, "Device": {"Attributes": ["Device ID", "Device Name", "Belonging Employee"], "Primary key": ["Device ID"], "Foreign key": {"Belonging Employee": {"Employee": "Employee ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Last Login Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Site": {"Attributes": ["Site Name", "Hostname", "Site Status", "Belonging User"], "Primary key": ["Site Name"], "Foreign key": {"Belonging User": {"User": "User ID"}}}, "Employee Uses Device": {"Attributes": ["Employee ID", "Device ID", "Start Usage Time", "End Usage Time"], "Primary key": ["Employee ID", "Device ID", "Start Usage Time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Device ID": {"Device": "Device ID"}}}, "User Creates Site": {"Attributes": ["Username", "Site Name", "Creation Time"], "Primary key": ["Username", "Site Name", "Creation Time"], "Foreign key": {"Username": {"User": "User ID"}, "Site Name": {"Site": "Site Name"}}}}}
{"id": "67552f0a13602ec03b41a8c3", "question": "This is a sales management system for recording salespeople's performance and customer information. For sales record management, the system records detailed information of each sale, including sales amount, sales date, transaction quantity, and number of visits, and links sales records to specific salespeople. For salesperson management, the system stores basic information about salespeople, including unique identifier and name. For customer management, the system stores basic information about customers, including unique identifier and name. Through these functions, the system can help enterprises better manage their sales teams and customer relationships, improving sales efficiency and customer satisfaction.", "answer": {"Salesperson": {"Attributes": ["Salesperson ID", "Name"], "Primary key": ["Salesperson ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales record": {"Attributes": ["Salesperson ID", "Customer ID", "Sales amount", "Sales date", "Transaction quantity", "Visit count"], "Primary key": ["Salesperson ID", "Customer ID", "Sales date"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Salesperson ID": {"Salesperson": "Salesperson ID"}}}}}
{"id": "67552f0a13602ec03b41a8c6", "question": "The database is a geolocation system used to determine the user's geographic location information based on the IP address. Such systems are often used in websites and applications to provide services or content based on geographic location.\n\nMain functions\n\n1. Mapping of IP address to geographic location:\nDetermine the user's geographic location through the IP address (network), including information such as continent and country.\nSupport querying whether the IP address belongs to an anonymous proxy or satellite provider.\n\n2. Geographic location information query:\nProvide detailed geographic location information, such as country name, ISO code, whether it is in the European Union, etc.\nSupport quick search of geographic location information by country ISO code.\n\n3. Data management and maintenance:\nSupport importing and updating geographic location data and IP network data.\nEnsure data consistency and integrity through Foreign key relationships.", "answer": {"Location Information Table": {"Attributes": ["Location ID", "Continent", "Country", "ISO Code", "Is in EU", "Detailed Description"], "Primary key": ["Location ID"], "Foreign key": {}}, "IP Address Table": {"Attributes": ["IP Address", "Is Anonymous Proxy", "Is Satellite Provider", "Belongs to Location"], "Primary key": ["IP Address"], "Foreign key": {"Belongs to Location": {"Location Information Table": "Location ID"}}}}}
{"id": "67552f0a13602ec03b41a8c8", "question": "The character management system for a game is as follows: The game contains multiple characters, and character information includes Character ID, Class ID, Character Name, Star Level, and Rarity ID. The Character ID is the Primary key and cannot be null. The Class ID cannot be null and is a Foreign key referencing the Class ID field in the Class Table. The Character Name is a string with a maximum length of 100 and cannot be null. The Star Level is a small integer and cannot be null. The Rarity ID is a small integer and can be null. Through this information, the system manages the basic Attributes of characters in the game and their associated class categories, ensuring the integrity and consistency of character data.", "answer": {"Character": {"Attributes": ["Character ID", "Class ID", "Character Name", "Star Level", "Rarity ID"], "Primary key": ["Character ID"], "Foreign key": {"Class ID": {"Class": "Class ID"}}}, "Class": {"Attributes": ["Class ID", "Class Name"], "Primary key": ["Class ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8c9", "question": "Database Business Requirements for Task Management System: This system manages the relationship between users and tasks, including the creation, assignment, and associated files of tasks.  \nUser (User ID, User Name, Full Name, Password, Date of Birth, Avatar File ID, Avatar File Name) records the information of users in the system.  \nTask (Task ID, Task Name, Task Status, Task Priority, Creator User ID, Creation Date, Assignee User ID, Completion Date, Task Remarks) records the detailed information of tasks.  \nTask File (Task File ID, File Name, Task ID) records the information of files associated with tasks.  \nThis system should effectively function in multiple aspects of task management such as task creation, task assignment, and task file association, while maintaining data consistency and integrity.\n", "answer": {"User": {"Attributes": ["User ID", "User Name", "Full Name", "Password", "Date of Birth", "Avatar File ID", "Avatar File Name"], "Primary key": ["User ID"], "Foreign key": {}}, "Task": {"Attributes": ["Task ID", "Task Name", "Task Status", "Task Priority", "Creator User ID", "Creation Date", "Assignee User ID", "Completion Date", "Task Remarks"], "Primary key": ["Task ID"], "Foreign key": {"Creator User ID": {"User": "User ID"}, "Assignee User ID": {"User": "User ID"}}}, "Task File": {"Attributes": ["Task File ID", "File Name", "Task ID"], "Primary key": ["Task File ID"], "Foreign key": {"Task ID": {"Task": "Task ID"}}}}}
{"id": "67552f0a13602ec03b41a8d7", "question": "E-commerce Management System Business Requirement Description: The e-commerce platform manages customer information and order information. Each customer has a unique phone number, last name, first name, resource ID, and address. Each resource has a unique resource ID, resource name, and resource type. The customer address includes address ID, country, city, postal code, district, and street address. Customers can place multiple orders, each containing an order ID, amount, currency, resource ID, start time, type, and customer ID. An order includes only one resource ID. The system needs to record detailed information of each customer and their address and manage the customer's order information.", "answer": {"Customer": {"Attributes": ["Customer ID", "Phone Number", "Last Name", "First Name", "Resource ID", "Address ID"], "Primary key": ["Customer ID"], "Foreign key": {"Address ID": {"Address": "Address ID"}, "Resource ID": {"Resource": "Resource ID"}}}, "Address": {"Attributes": ["Address ID", "Country", "City", "Postal Code", "District", "Street Address"], "Primary key": ["Address ID"], "Foreign key": {}}, "Resource": {"Attributes": ["Resource ID", "Resource Name", "Resource Type"], "Primary key": ["Resource ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Amount", "Currency", "Resource ID", "Start Time", "Type", "Customer ID"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Resource ID": {"Resource": "Resource ID"}}}}}
{"id": "67552f0a13602ec03b41a8d9", "question": "This is an online survey system. For administrator management, the system maintains administrator information including name, phone number, account, and password. Administrators can register, log in to the system, create, edit, delete surveys, and view survey statistics. For survey management, the system supports creating surveys, setting survey title, description, access restrictions, start and end times, access rules (public or password-protected), survey status (created, in progress, ended), survey logo URL and background image URL, anonymity settings, etc. Surveys can be associated with multiple questions. For question management, the system supports creating different types of questions (single choice, multiple choice, text, text area), setting question title, description, required status, validation type, display order, display style, evaluation status, evaluation score, etc. Questions can be associated with multiple options. For option management, the system supports creating options for questions, setting option content, display order, correct answer status, etc. Options can be single or multiple choice type. For answer recording, the system records users' answers to single or multiple choice questions, including option ID, answer type, submission time, respondent information, and also records users' answers to text questions, including question ID, answer content, submission time, and respondent information.", "answer": {"Administrator": {"Attributes": ["Administrator ID", "Name", "Phone number", "Account", "Password"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Survey": {"Attributes": ["Survey ID", "Survey title", "Description", "Access restriction", "Start time", "End time", "Access rule", "Survey status", "Survey logo URL", "Background image URL", "Anonymous"], "Primary key": ["Survey ID"], "Foreign key": {}}, "Question": {"Attributes": ["Question ID", "Question type", "Question title", "Description", "Required", "Validation type", "Display order", "Display style", "For evaluation", "Evaluation score", "Survey ID"], "Primary key": ["Question ID"], "Foreign key": {"Survey ID": {"Survey": "Survey ID"}}}, "Option": {"Attributes": ["Option ID", "Option content", "Display order", "Is correct answer", "Question ID"], "Primary key": ["Option ID"], "Foreign key": {"Question ID": {"Question": "Question ID"}}}, "Choice answer record": {"Attributes": ["Answer ID", "Answer type", "Submission time", "Respondent information", "Option ID"], "Primary key": ["Answer ID"], "Foreign key": {"Option ID": {"Option": "Option ID"}}}, "Text answer record": {"Attributes": ["Answer ID", "Answer content", "Submission time", "Respondent information", "Question ID"], "Primary key": ["Answer ID"], "Foreign key": {"Question ID": {"Question": "Question ID"}}}}}
{"id": "67552f0a13602ec03b41a8dc", "question": "Business Requirements Description:\nThis database is for a virtual investment or gaming system where users can engage in virtual stock trading or similar investment activities, and their operations and earnings are recorded. The main features of the system are:\n1.User Management: User registration and login functionality, recording usernames and virtual currency balances.\n2.Log Recording: Tracks user activities or statistics on a daily basis. Each log entry includes user ID, date, and record value. This allows tracking user activities and changes.\n3.Portfolio Management: Users can hold multiple stocks or investment assets. Each stock has a unique stock code, stock price, issue date, and company name. The system records the stock code, quantity, and earnings for each stock held by each user.\n4.Hall of Fame: Initially, the system tracked user investment earnings to display the best-performing users. Now the earnings value is included directly in the portfolio management.\nThis system can be used for virtual stock trading platforms, investment simulation games, or other similar applications, helping users learn and practice investment strategies.\n", "answer": {"User": {"Attributes": ["user ID", "username", "virtual currency balance"], "Primary key": ["user ID"], "Foreign key": {}}, "Log": {"Attributes": ["log ID", "user ID", "date", "record value"], "Primary key": ["log ID"], "Foreign key": {"user ID": {"User": "user ID"}}}, "Stock": {"Attributes": ["stock code", "stock price", "issue date", "company name"], "Primary key": ["stock code"], "Foreign key": {}}, "User Investment Stock": {"Attributes": ["user ID", "stock code", "quantity held", "earnings value"], "Primary key": ["user ID", "stock code"], "Foreign key": {"user ID": {"User": "user ID"}, "stock code": {"Stock": "stock code"}}}}}
{"id": "67552f0a13602ec03b41a8e3", "question": "Business requirement description of the user management system: The system is used to manage user information, role information, and the association between users and roles. Each user has a unique user ID, username, password hash, status, email address, display name, language tag, time zone, date and time format, and other information. Each user can have multiple identity keys, each of which includes an authentication scheme and an identity key value. The system supports the creation and management of roles, and each role has a unique role ID, role name, and description. Relationships are established between users and roles through association tables. A role can be assigned to multiple users, and a user can also have multiple roles. The system records the user's basic information, identity keys, role assignments, and the relationship between users and roles in order to implement permission management and user authentication.", "answer": {"User": {"Attributes": ["id", "version", "user name", "user name ci", "password hash", "status", "email address", "email address ci", "display name", "display name ci", "locale tag", "time zone", "date format style", "time format style"], "Primary key": ["id"], "Foreign key": {}}, "User Identity Key": {"Attributes": ["id", "key scheme", "key value"], "Primary key": ["id"], "Foreign key": {}}, "User and Identity Key Association": {"Attributes": ["user id", "id key id"], "Primary key": ["user id", "id key id"], "Foreign key": {"id key id": {"User Identity Key": "id"}, "user id": {"Schema 0": "id"}}}, "Role": {"Attributes": ["id", "version", "role name", "role name ci", "description"], "Primary key": ["id"], "Foreign key": {}}, "Role and Role Association": {"Attributes": ["user id", "role id"], "Primary key": ["id"], "Foreign key": {"role id": {"Role": "id"}, "user id": {"Schema 0": "id"}}}}}
{"id": "67552f0a13602ec03b41a8e7", "question": "In the management process of multiplayer competition events (such as card games, board games, or other competitive games), the system needs to record and track players' participation information, match progress, game results, and ranking data. The core purpose of such a system is to provide a platform to organize and manage competitions, ensuring fairness and impartiality, and to offer comprehensive data analysis and reporting functionalities, assisting players and event organizers in understanding match progress and results.\n\nMain functional requirements:  \nUser (player) management:  \nRecord basic information for each participating player, including username, contact information, and account status.  \n\nMatch management:  \nRecord basic information for all matches, including match type, start time, end time, and participating players.  \n\nMatch result recording:  \nRecord match results, possibly including each player's score, win-loss status, and ranking.  \n\nBattle record management:  \nRecord details of each specific battle within a match, involving both sides of the battle, start time, end time, and win-loss status.", "answer": {"Player": {"Attributes": ["Player ID", "Nickname", "Contact Information", "Registration Time", "Gender"], "Primary key": ["Player ID"], "Foreign key": {"Player ID": {"Player": "Player ID"}}}, "Match Information": {"Attributes": ["Match ID", "Name", "Start Time", "End Time", "Type", "Total Participants"], "Primary key": ["Match ID"], "Foreign key": {"Match ID": {"Match Information": "Match ID"}}}, "Battle": {"Attributes": ["Match ID", "Player 1 ID", "Player 2 ID", "Match Start Time", "Battle Duration", "Match End Time", "Result"], "Primary key": ["Match ID", "Player 1 ID", "Player 2 ID", "Match Start Time"], "Foreign key": {"Player 1 ID": {"Player": "Player ID"}, "Player 2 ID": {"Player": "Player ID"}, "Match ID": {"Match Information": "Match ID"}}}, "Match Result": {"Attributes": ["Player ID", "Match ID", "Ranking", "Total Score"], "Primary key": ["Player ID", "Match ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8e8", "question": "The data management system of a music platform is as follows: The platform contains multiple albums, with album information including Album ID, Album Name, and Release Date. The platform also manages multiple artists, with artist information including Artist ID and Artist Name. Each song's information includes Song ID, Song Name, Video Duration, Popularity, Video ID, and Album ID. The platform includes multiple playlists, with playlist information including Playlist ID, Playlist Name, Play Count, and Creator User ID, where Creator User ID is a Foreign key referencing the User ID field in the user table. User information includes User ID. Through these tables, the system comprehensively manages the platform's albums, artists, songs, playlists, and user information, ensuring data integrity and consistency.", "answer": {"Album": {"Attributes": ["Album ID", "Album Name", "Release Date", "Artist ID"], "Primary key": ["Album ID"], "Foreign key": {"Artist ID": {"Artist": "Artist ID"}}}, "Artist": {"Attributes": ["Artist ID", "Name"], "Primary key": ["Artist ID"], "Foreign key": {}}, "Song": {"Attributes": ["Song ID", "Name", "Video Duration", "Popularity", "Video ID", "Album ID"], "Primary key": ["Song ID"], "Foreign key": {"Album ID": {"Album": "Album ID"}}}, "Playlist": {"Attributes": ["Playlist ID", "Name", "Play Count", "Creator ID"], "Primary key": ["Playlist ID"], "Foreign key": {"Creator ID": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "User Name"], "Primary key": ["User ID"], "Foreign key": {}}, "Playlist Creation": {"Attributes": ["Playlist ID", "User ID", "Creation Time"], "Primary key": ["Playlist ID", "User ID", "Creation Time"], "Foreign key": {"Playlist ID": {"Playlist": "Playlist ID"}, "User ID": {"User": "User ID"}}}, "Songs In Album": {"Attributes": ["Album ID", "Song ID"], "Primary key": ["Album ID", "Song ID"], "Foreign key": {"Album ID": {"Album": "Album ID"}, "Song ID": {"Song": "Song ID"}}}}}
{"id": "67552f0a13602ec03b41a8ea", "question": "Description of Social Network System Requirements: For user registration and login, users can register and log in to the system using username and password. The system supports different types of users, such as regular users and administrators. For personal information management, users can fill in and manage basic personal information, including name, phone, address, email, birthday, gender, relationship status, interests, etc., and can edit detailed information such as personal profile, motto, hometown, and current location. For user connection management, users can establish connections with other users, and the system records the connection time. Users can send and receive connection requests, and the system records the request sending time. For user homepage management, users can create personal homepages, including title, introduction, and creation time. Other users can join user's homepage and the joining time is recorded. For homepage feed management, users can post updates on their own homepage, including text content, and the posting time is recorded. Other users can also post updates on user's homepage, creating interaction. For the functionality of users joining multiple homepages, users can join multiple different homepages, and the joining time is recorded. The system supports associations between users and multiple homepages.\n", "answer": {"User": {"Attributes": ["User ID", "Name", "Phone", "Address", "Email", "Birthday", "Gender", "Relationship status", "Interests", "Personal profile", "Motto", "Hometown", "Current location", "Username", "Password", "User type"], "Primary key": ["User ID"], "Foreign key": {}}, "Feed": {"Attributes": ["Feed ID", "Feed content", "Post time", "User ID", "Homepage ID"], "Primary key": ["Feed ID"], "Foreign key": {"Homepage ID": {"User homepage": "Homepage ID"}, "User ID": {"User": "User ID"}}}, "User homepage": {"Attributes": ["Homepage ID", "Title", "Introduction", "Creation time", "User ID"], "Primary key": ["Homepage ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User connection request record": {"Attributes": ["Record ID", "Send time", "Sender user ID", "Receiver user ID"], "Primary key": ["Record ID"], "Foreign key": {"Sender user ID": {"User": "User ID"}, "Receiver user ID": {"User": "User ID"}}}, "User connection establishment record": {"Attributes": ["Record ID", "Connection time", "Sender ID", "Receiver ID"], "Primary key": ["Record ID"], "Foreign key": {"Sender ID": {"User": "User ID"}, "Receiver ID": {"User": "User ID"}}}, "User homepage join": {"Attributes": ["User ID", "Homepage ID", "Join time"], "Primary key": ["Join time", "Homepage ID", "User ID"], "Foreign key": {"Homepage ID": {"User homepage": "Homepage ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8eb", "question": "A social media platform's user system is designed as follows:\nThe platform has users. User information includes User ID, First Name, Last Name, Email Address, Avatar Path, Password, and Date of Birth.\nUsers can post posts. Post information includes Post ID, Poster User ID, Post Title, and Post Content.\nUsers can also comment on posts. Comment information includes Commenter User ID, Commented Post ID, and Comment Content.", "answer": {"User": {"Attributes": ["User ID", "First Name", "Last Name", "Email Address", "Avatar Path", "Password", "Date of Birth"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Poster User ID", "Post Title", "Post Content"], "Primary key": ["Post ID"], "Foreign key": {"Poster User ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["Comment ID", "Commenter User ID", "Commented Post ID", "Comment Content"], "Primary key": ["Comment ID"], "Foreign key": {"Commented Post ID": {"Post": "Post ID"}, "Commenter User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a8ee", "question": "The permission management of an object storage system is as follows: The system contains multiple buckets, and the access permissions for each bucket are managed through the OSS_ACCESS table. This table records the unique identifier ID of the permission and associates it with the specific bucket BUCKET_ID, where the bucket ID is a Foreign key referencing the ID field in the OSS_BUCKET table. Each permission record includes the type TYPE, access account ACCESS_KEY, access password SECRET_KEY, status STATUS (which can be active or inactive), creation time CREATE_TIME, description DESCRIPTION, creator USER_ID, and tenant TENANT_ID. Through this information, the system can flexibly control access permissions for different users or tenants to the buckets, ensuring data security and manageability.", "answer": {"Permission Access": {"Attributes": ["Permission ID", "Bucket ID", "Type", "Access Account", "Access Password", "Status", "Creation Time", "Description", "Creator", "Tenant"], "Primary key": ["Permission ID"], "Foreign key": {"Bucket ID": {"Bucket": "Bucket ID"}}}, "Bucket": {"Attributes": ["Bucket ID", "Name"], "Primary key": ["Bucket ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8f0", "question": "The data management system of an e-commerce platform is as follows: The platform includes multiple product categories, with category information consisting of category ID, category name, category alias, cover image path, creation time, and update time. User information includes user ID, username, email, password, creation time, and update time. Order information is stored in the order table, including order ID, user ID, delivery address, postal code, order status, total order price, creation time, and update time, where the user ID is a Foreign key referencing the user ID field in the user table. The relationship between orders and products is recorded in the order product table, including order product ID, order ID, product ID, and product quantity, where the order ID is a Foreign key referencing the order ID field in the order table, and the product ID is a Foreign key referencing the product ID field in the product table. Product information includes product ID, product name, product description, product price, category ID, product status, cover image path, creation time, and update time.", "answer": {"Category": {"Attributes": ["Category ID", "Category Name", "Category Alias", "Cover Image Path", "Creation Time", "Update Time"], "Primary key": ["Category ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Email", "Password", "Creation Time", "Update Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "User ID", "Delivery Address", "Postal Code", "Order Status", "Total Order Price", "Creation Time", "Update Time"], "Primary key": ["Order ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Description", "Product Price", "Category ID", "Product Status", "Product Status", "Cover Image Path", "Creation Time", "Update Time"], "Primary key": ["Product ID"], "Foreign key": {"Category ID": {"Category": "Category ID"}}}, "Order Contains Product": {"Attributes": ["Order ID", "Product ID", "Product Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a8f1", "question": "An online learning platform's exam system is designed as follows:\nThe platform has multiple exams. Exam information includes Exam ID, Name, Time, etc.\nEach exam contains multiple practice questions. Practice question information includes Question ID, Exam ID it belongs to, Question Content, Score, etc.\nWhen a student takes an exam, the student submits answers. The submission record contains Submission ID, Exam ID, Student ID, Submission Status.    \nA student has information such as Student ID, Name, etc.\nEach submission has answers to multiple practice questions. The answer record contains Practice Question ID it belongs to, Submission ID it belongs to, Answer Content.", "answer": {"Exam": {"Attributes": ["Exam ID", "Name", "Time"], "Primary key": ["Exam ID"], "Foreign key": {}}, "Practice Question": {"Attributes": ["Question ID", "Question Content", "Score", "Exam ID it belongs to"], "Primary key": ["Question ID"], "Foreign key": {"Exam ID it belongs to": {"Exam": "Exam ID"}}}, "Student": {"Attributes": ["Student ID", "Name"], "Primary key": ["Student ID"], "Foreign key": {}}, "Submission Record": {"Attributes": ["Submission ID", "Exam ID", "Student ID", "Submission Status"], "Primary key": ["Submission ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Exam ID": {"Exam": "Exam ID"}}}, "Answer Record": {"Attributes": ["Answer Record ID", "Practice Question ID it belongs to", "Submission ID it belongs to", "Answer Content"], "Primary key": ["Answer Record ID"], "Foreign key": {"Submission ID it belongs to": {"Submission Record": "Submission ID"}, "Practice Question ID it belongs to": {"Practice Question": "Question ID"}}}}}
{"id": "67552f0a13602ec03b41a8f5", "question": "Academic administration system business requirement description: The school has multiple colleges, each with a college name, college location, total number of staff, and total number of students. Each college consists of multiple students and teachers. Each student has a Student ID, name, gender, date of birth, age, telephone, registration time, and associated college ID. Each teacher has a Teacher ID, gender, name, age, contact information, title, and associated college ID. The school offers multiple courses, each with a Course ID, name, credit number, teaching Teacher ID, course summary, class hours, and classroom. Students can enroll in multiple courses, and each enrollment requires recording the Student ID, Course ID, enrollment time, and course grade.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Date of Birth", "Age", "Telephone", "Registration Time", "Associated College ID"], "Primary key": ["Student ID"], "Foreign key": {"Associated College ID": {"College": "College ID"}}}, "Teacher": {"Attributes": ["Teacher ID", "Gender", "Name", "Age", "Contact Information", "Title", "Associated College ID"], "Primary key": ["Teacher ID"], "Foreign key": {"Associated College ID": {"College": "College ID"}}}, "College": {"Attributes": ["College Name", "College Location", "Total Number of Staff", "Total Number of Students", "College ID"], "Primary key": ["College ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Name", "Credit Number", "Teaching Teacher ID", "Course Summary", "Class Hours", "Classroom"], "Primary key": ["Course ID"], "Foreign key": {"Teaching Teacher ID": {"Teacher": "Teacher ID"}}}, "Course Enrollment and Grade": {"Attributes": ["Student ID", "Course ID", "Enrollment Time", "Course Grade"], "Primary key": ["Student ID", "Course ID", "Enrollment Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a8f6", "question": "\"The API performance management system is used to track and analyze the usage of various APIs across multiple projects. The system is required to record each project's ID, name, and related avatar information. Each project may contain multiple APIs, with each API bound to a project, and the system must record each API's unique identifier, name, and access path. To monitor the performance of the APIs, the system must collect statistics on each API's call frequency, average response time, and 90\uff05 response time. Additionally, the system must record each API's creation and update times to track their development history. Users can view and analyze the performance data of APIs through the system to optimize the response efficiency of the APIs.\"", "answer": {"project": {"Attributes": ["Project ID", "Project Name", "Avatar URL"], "Primary key": ["Project ID"], "Foreign key": {}}, "API": {"Attributes": ["Identifier", "Name", "Access Path", "Belonging Project"], "Primary key": ["Identifier"], "Foreign key": {"Belonging Project": {"project": "Project ID"}}}, "API Response Record": {"Attributes": ["API Identifier", "Call Time", "Response Time"], "Primary key": ["API Identifier", "Call Time"], "Foreign key": {"API Identifier": {"API": "Identifier"}}}}}
{"id": "67552f0a13602ec03b41a8f8", "question": "Business Requirements Description:\nThis database is used for managing and storing multi-language resources, such as an internationalization (i18n) and localization (l10n) management platform. The main features of the system are:\n1.Multi-Language Resource Management: Storing and managing multi-language resource files for different applications. It tracks each resource file\u2019s ID, path, base name, language and region information, as well as its version.\n2.Application Management: Managing different applications, including application ID and name.\n3.Language and Region Information Management: Managing detailed information about languages and regions, including ISO codes and names. It supports multiple languages and regions to ensure the accuracy and completeness of resource files.\n4.Resource Key-Value Pair Management: Managing keys and values within resource files. A resource key includes key ID, key name, and key version. A resource value includes value ID, value content, and version. A resource file can correspond to multiple resource keys, and each resource key can have multiple resource values.\n5.Country Information Management: Managing country information, including country names and ISO codes, to further categorize and manage region-specific resource files.\nThis system is designed to manage multi-language resource files, handle the relationships between applications, languages, and regions, manage resource keys and values, and facilitate version control. It is mainly used to support the development and maintenance of multi-language applications.", "answer": {"Language": {"Attributes": ["language ID", "ISO code", "language name"], "Primary key": ["language ID"], "Foreign key": {}}, "Region": {"Attributes": ["region ID", "ISO code", "region name", "country ID"], "Primary key": ["region ID"], "Foreign key": {"country ID": {"Country": "country ID"}}}, "Country": {"Attributes": ["country ID", "ISO code", "country name"], "Primary key": ["country ID"], "Foreign key": {}}, "Application": {"Attributes": ["application ID", "application name"], "Primary key": ["application ID"], "Foreign key": {}}, "Resource File": {"Attributes": ["resource file ID", "path", "base name", "application ID", "version"], "Primary key": ["resource file ID"], "Foreign key": {"application ID": {"Application": "application ID"}}}, "Resource Key": {"Attributes": ["key ID", "resource file ID", "key name", "version"], "Primary key": ["key ID"], "Foreign key": {"resource file ID": {"Resource File": "resource file ID"}}}, "Resource Value": {"Attributes": ["value ID", "key ID", "value content", "version"], "Primary key": ["value ID"], "Foreign key": {"key ID": {"Resource Key": "key ID"}}}, "Language and Region": {"Attributes": ["language ID", "region ID"], "Primary key": ["language ID", "region ID"], "Foreign key": {"region ID": {"Region": "region ID"}, "language ID": {"Language": "language ID"}}}, "Application and Language": {"Attributes": ["application ID", "language ID"], "Primary key": ["application ID", "language ID"], "Foreign key": {"application ID": {"Application": "application ID"}, "language ID": {"Language": "language ID"}}}}}
{"id": "67552f0a13602ec03b41a8fa", "question": "The code review system allows users to post comments on different applications. Comments can be published by registered users or anonymous users. Each comment must record the following information: publication time, information of the commenter (if it is a registered user, the User ID is recorded; if it is an anonymous user, the contact URL is recorded), and the content of the comment. The system shall ensure that each comment supports storing the content in different formats (such as HTML and Markdown).", "answer": {"Normal Comment": {"Attributes": ["Comment ID", "Publication Time", "User ID", "Comment Content", "Storage Format"], "Primary key": ["Comment ID"], "Foreign key": {"User ID": {"User Information": "User ID"}}}, "Anonymous Comment": {"Attributes": ["Comment ID", "Publication Time", "Contact URL", "Comment Content", "Storage Format"], "Primary key": ["Comment ID"], "Foreign key": {}}, "User Information": {"Attributes": ["User ID", "Name", "Address", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8fb", "question": "The management of CORS station networks in a geographic information system is as follows: The system contains multiple CORS stations and networks. Each network\u2019s information includes Network ID, Network Name, and Network Description. The relationship between CORS stations and CORS networks is recorded in the CORS Station Network Relationship Table, which includes Relationship ID, CORS Station ID, CORS Network ID, Effective Start Time, and Effective End Time. The CORS Station ID is a Foreign key referencing the Station ID field in the CORS Station Table, and the CORS Network ID is a Foreign key referencing the Network ID field in the CORS Network Table. Through these tables, the system can flexibly manage the relationships between CORS stations and networks, record the effective time range of each relationship, and ensure data accuracy and timeliness.", "answer": {"CORS Station": {"Attributes": ["CORS Station ID", "CORS Station Name", "CORS Station Description"], "Primary key": ["CORS Station ID"], "Foreign key": {}}, "CORS Network": {"Attributes": ["CORS Network ID", "CORS Network Name", "CORS Network Description"], "Primary key": ["CORS Network ID"], "Foreign key": {}}, "Station Network Relationship": {"Attributes": ["CORS Station ID", "CORS Network ID", "Effective Start Time", "Effective End Time"], "Primary key": ["CORS Station ID", "CORS Network ID", "Effective Start Time", "Effective End Time"], "Foreign key": {"CORS Station ID": {"CORS Station": "CORS Station ID"}, "CORS Network ID": {"CORS Network": "CORS Network ID"}}}}}
{"id": "67552f0a13602ec03b41a8ff", "question": "Personnel Management: The system records basic information for personnel, including name and address (street and city). Each employee is identified by a unique ID. Each personnel may have multiple phone numbers; the system records this information and supports multiple records.\n\nVehicle Management: The system records detailed information for vehicles, including Vehicle Identification Number (VIN), manufacturer, model, year, and driver information. Each vehicle is identified by a unique VIN, and the system supports assigning personnel as drivers for vehicles. Drivers are linked to the Personnel table by a Foreign key to the ID and are updated through cascading updates.\n\nInsurance Management: The system records insurance information for each vehicle, detailing each vehicle's purchased insurance and the specifics of the insurance (Insurance Type ID, Insurance Company Name, Insurance Cost, Insurance Content), along with the specific time of purchase and the validity period of the insurance for the vehicle.\n\nPhone Management: The system allows recording multiple phone numbers for each personnel. Each phone number is associated with personnel via ID and uniquely identified by a composite Primary key of ID and Number. Each phone number's information includes: ID (Foreign key) and Number (phone number).\n", "answer": {"Personnel": {"Attributes": ["Personnel ID", "Name", "Street", "City"], "Primary key": ["Personnel ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["Vin", "Manufacturer", "Model", "Year", "Driver ID"], "Primary key": ["Vin"], "Foreign key": {"Driver ID": {"Personnel": "Personnel ID"}}}, "Insurance Type": {"Attributes": ["Insurance Type ID", "Insurance Company Name", "Insurance Cost", "Insurance Content"], "Primary key": ["Insurance Type ID"], "Foreign key": {}}, "Vehicle Purchase Insurance": {"Attributes": ["Vin", "Insurance Type ID", "Purchase Time", "Validity Time"], "Primary key": ["Vin", "Insurance Type ID", "Purchase Time"], "Foreign key": {"Vin": {"Vehicle": "Vin"}, "Insurance Type ID": {"Insurance Type": "Insurance Type ID"}}}, "User Phone Table": {"Attributes": ["User ID", "Phone Number"], "Primary key": ["User ID", "Phone Number"], "Foreign key": {"User ID": {"Personnel": "Personnel ID"}}}}}
{"id": "67552f0a13602ec03b41a900", "question": "Business Requirements Description:\nThis system is designed for managing and monitoring web services in various applications. Key requirements include:\nEach user has a unique username, email, and role. User roles are associated with specific permissions. Users can be assigned different roles and permissions that are linked to particular applications.\nEach application has a unique ID, code, name, and type.\nEach web service has a unique ID, name, description, and creation date. It records error information, including error codes, descriptions, timestamps, and return status.\nMonitors the invocation of web services, recording details like invocation time, return status, delay time, and other performance metrics.\nTracks statistics such as success rate and call count over a specific time period.\nTracks which users are authorized to access which applications.\nLinks error data with monitoring data to enable detailed analysis and reporting.", "answer": {"User": {"Attributes": ["user ID", "username", "email"], "Primary key": ["user ID"], "Foreign key": {}}, "Application": {"Attributes": ["application ID", "code", "name", "type"], "Primary key": ["application ID"], "Foreign key": {}}, "Web Service": {"Attributes": ["service ID", "application ID", "name", "description", "creation date"], "Primary key": ["service ID"], "Foreign key": {"application ID": {"Application": "application ID"}}}, "Error Information": {"Attributes": ["error ID", "service ID", "error code", "error description", "occurrence time", "return status"], "Primary key": ["error ID"], "Foreign key": {"service ID": {"Web Service": "service ID"}}}, "Service Monitoring": {"Attributes": ["monitoring ID", "service ID", "call time", "return status", "delay time"], "Primary key": ["monitoring ID"], "Foreign key": {"service ID": {"Web Service": "service ID"}}}, "Statistics": {"Attributes": ["statistic ID", "service ID", "time period", "call count", "success rate"], "Primary key": ["statistic ID"], "Foreign key": {"service ID": {"Web Service": "service ID"}}}, "Permissions": {"Attributes": ["permission ID", "user ID", "application ID", "role"], "Primary key": ["permission ID"], "Foreign key": {"application ID": {"Application": "application ID"}, "user ID": {"User": "user ID"}}}, "Error and Monitoring Association": {"Attributes": ["error ID", "monitoring ID"], "Primary key": ["association ID"], "Foreign key": {"monitoring ID": {"Service Monitoring": "monitoring ID"}, "error ID": {"Error Information": "error ID"}}}}}
{"id": "67552f0a13602ec03b41a902", "question": "An education management system is required to manage information on courses, professors, students, and subjects. Each course has a code, total credits, name, and a professor as the course coordinator. Professors may be responsible for different courses and their names and email information are recorded. Subjects need to record the number of credits, subject names, possible equivalent subjects, and manage prerequisite relationships to ensure students have completed relevant prerequisites before enrolling in a subject. The system must also store each course's subjects arranged in different semesters.\n\nFor students, the system needs to record their student ID, name, email, courses taken, date of birth, credits completed, and average grade.", "answer": {"Course": {"Attributes": ["Course Code", "Total Credits", "Name", "Responsible Professor"], "Primary key": ["Course Code"], "Foreign key": {"Responsible Professor": {"Professor": "Professor ID"}}}, "Subject": {"Attributes": ["Subject Code", "Credits", "Subject Name"], "Primary key": ["Subject Code"], "Foreign key": {}}, "Professor": {"Attributes": ["Professor ID", "Name", "Email"], "Primary key": ["Professor ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Name", "Email", "Date of Birth", "Credits Completed", "Average Grade"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course Assignment": {"Attributes": ["Course Code", "Subject Code", "Semester"], "Primary key": ["Course Code", "Subject Code", "Semester"], "Foreign key": {"Subject Code": {"Subject": "Subject Code"}, "Course Code": {"Course": "Course Code"}}}, "Subject Equivalence": {"Attributes": ["Subject Code", "Equivalent Subject Code"], "Primary key": ["Subject Code", "Equivalent Subject Code"], "Foreign key": {"Subject Code": {"Subject": "Subject Code"}, "Equivalent Subject Code": {"Subject": "Subject Code"}}}, "Subject Prerequisites": {"Attributes": ["Prerequisite Subject", "Related Subject"], "Primary key": ["Prerequisite Subject", "Related Subject"], "Foreign key": {"Related Subject": {"Subject": "Subject Code"}, "Prerequisite Subject": {"Subject": "Subject Code"}}}, "Student Course Enrollment": {"Attributes": ["Student ID", "Course Code", "Course Grade"], "Primary key": ["Student ID", "Course Code"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course Code": {"Course": "Course Code"}}}}}
{"id": "67552f0a13602ec03b41a910", "question": "The financial management system shall record and manage various expense information. Each expense record shall contain basic fields such as description, amount, month, due date, payment date, and expense status. The system shall also support multi-dimensional associations, such as binding expenses to application centers, accounting accounts, and company accounts. Some expenses may involve external suppliers, which shall also be managed and associated in the system. Users shall be able to query or analyze expense information based on this, such as querying paid or unpaid expenses within a certain period, or viewing expense records of specific suppliers, and generate corresponding financial reports based on actual requirements.", "answer": {"Expense": {"Attributes": ["Record ID", "Description", "Amount", "Creation Time", "Due Time", "Payment Time", "Status", "Associated Account"], "Primary key": ["Record ID"], "Foreign key": {"Associated Account": {"Account": "Account"}}}, "Account": {"Attributes": ["Account", "Affiliated Unit", "User"], "Primary key": ["Account"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a914", "question": "A machine learning model management and evaluation system is used to record and manage the operational status, performance metrics, hyperparameter settings, and dataset information of various machine learning models. The requirements analysis is as follows:\nModel Run Records: Records the run ID, execution time, start time, end time, runtime, run path, maximum number of models, and model types for each model, implemented through the Leaderboard_Metadata table.\nModel Performance Evaluation: Records the ID, name, performance metrics (such as RMSE, MSE, MAE, RMSLE), and whether the best family model of stacked ensemble exists for each model, implemented through the Leaderboard table.\nHyperparameter Management: Records the ID and name of hyperparameters, implemented through the Hyperparameter table, and records the hyperparameter values for each model, implemented through the Hyperparameter_Values table.\nModel-Run Association: Records the association between each model and its run, implemented through the Model_Run table.\nDataset Management: Records the ID, name, owner, license, visibility, URL, creation date, last update date, data size, number of rows, and number of columns for each dataset, implemented through the Dataset_Metadata table.\nDataset-Run Association: Records the association between each dataset and its run, implemented through the Data_Map table.\nModel Type Management: Records the ID and name of model types, implemented through the Model_Map table.\nHyperparameter Default Value Management: Records the default hyperparameter values for each model type, implemented through the Hyperparameter_Def_Values table.\nModel Type-Model Association: Records the type of each model, implemented through the ID_Map table.\nDataset Variable Details: Records the ID, name, data type, number of unique values, and number of null values for each variable in the dataset, implemented through the Dataset_Variable_Details table, with each dataset's detailed information linked to a dataset.\nDataset Tag Management: Records the ID and name of dataset tags, implemented through the Tags table, and records the association between each dataset and its tags, implemented through the Tag_Map table.", "answer": {"Leaderboard_Metadata": {"Attributes": ["Run_ID", "Model_Execution_Time", "Start_Time", "End_Time", "Run_Time", "Run_Path", "Max_Models", "Model_Species"], "Primary key": ["Run_ID"], "Foreign key": {}}, "Leaderboard": {"Attributes": ["Model_ID", "Model_Name", "RMSE", "MSE", "MAE", "RMSLE", "Presence_StackedEnsembled_Best_of_Family"], "Primary key": ["Model_ID"], "Foreign key": {}}, "Model_Map": {"Attributes": ["Model_Type_ID", "Model_Type_Name"], "Primary key": ["Model_Type_ID"], "Foreign key": {}}, "Dataset_Variable_Details": {"Attributes": ["Var_ID", "Name_of_Variables", "Datatype_of_Variable", "Unique_Values_In_Each_Column", "Null_Values_In_Each_Column", "Dataset_ID"], "Primary key": ["Var_ID"], "Foreign key": {"Dataset_ID": {"Dataset_Metadata": "Dataset_ID"}}}, "Tags": {"Attributes": ["Tag_ID", "Tag_Name"], "Primary key": ["Tag_ID"], "Foreign key": {}}, "Hyperparameter_Value": {"Attributes": ["Model_ID", "Hyperparameter_ID", "Value"], "Primary key": ["Model_ID", "Hyperparameter_ID"], "Foreign key": {"Hyperparameter_ID": {"Hyperparameter": "Hyperparameter_ID"}, "Model_ID": {"Leaderboard": "Model_ID"}}}, "Model_Run": {"Attributes": ["Run_ID", "Model_ID"], "Primary key": ["Run_ID", "Model_ID"], "Foreign key": {"Model_ID": {"Leaderboard": "Model_ID"}, "Run_ID": {"Leaderboard_Metadata": "Run_ID"}}}, "Data_Map": {"Attributes": ["Dataset_ID", "Run_ID"], "Primary key": ["Dataset_ID", "Run_ID"], "Foreign key": {"Dataset_ID": {"Dataset_Metadata": "Dataset_ID"}, "Run_ID": {"Leaderboard_Metadata": "Run_ID"}}}, "Hyperparameter_Def_Values": {"Attributes": ["Model_Type_ID", "Hyperparameter_ID", "Default_Value"], "Primary key": ["Model_Type_ID", "Hyperparameter_ID"], "Foreign key": {"Hyperparameter_ID": {"Hyperparameter": "Hyperparameter_ID"}, "Model_Type_ID": {"Model_Map": "Model_Type_ID"}}}, "ID_Map": {"Attributes": ["Model_ID", "Model_Type_ID"], "Primary key": ["Model_ID"], "Foreign key": {"Model_ID": {"Leaderboard": "Model_ID"}, "Model_Type_ID": {"Model_Map": "Model_Type_ID"}}}, "Hyperparameter": {"Attributes": ["Hyperparameter_ID", "Name"], "Primary key": ["Hyperparameter_ID"], "Foreign key": {}}, "Dataset_Metadata": {"Attributes": ["Dataset_ID", "Name", "Dataset_Owner", "Licence", "Visibility", "URL", "Date_Created", "Last_Updated", "Data_Size", "Number_of_Rows", "Number_of_Columns"], "Primary key": ["Dataset_ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a915", "question": "The plugin management system shall record execution information for each plugin in the database to facilitate auditing and analysis of plugin runtime status. For each record, the system shall store the plugin version number, plugin type, start time, and end time, and enable rapid querying by time range or plugin type. To further support auditing requirements, the system shall also associate each record with the corresponding SQL statement to allow inspection of specific execution content.", "answer": {"Plugin Execution Record": {"Attributes": ["Plugin Version Number", "Start Time", "End Time", "Plugin Type", "SQL Record Number"], "Primary key": ["Plugin Version Number", "Start Time", "End Time"], "Foreign key": {"SQL Record Number": {"SQL Record": "SQL Record Number"}}}, "SQL Record": {"Attributes": ["SQL Record Number", "SQL Statement"], "Primary key": ["SQL Record Number"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a91c", "question": "The database design for a file management system is as follows: The system contains multiple files, and the file information includes File ID, File Name, File Type, File Storage Location, File Status, File Record Count, File Size, File Creation Time, File Last Update Time, File Description, File Version Number, and File Collection ID, where the File Collection ID is a Foreign key associated with the File Collection ID field in the File Collection Table. The file collection information includes File Collection ID and File Collection Description. File replica information is stored in the File Replica Table, including Replica ID, File ID, Replica Storage Location, Replica Node Name, Replica Device Name, Replica Last Update Time, Replica Status, Replica Version Number, and Replica Index, where the File ID is a Foreign key associated with the File ID field in the File Table. Through these tables, the system comprehensively manages file, file collection, file parameters, and file replica information, ensuring efficient storage and access to file data.", "answer": {"File": {"Attributes": ["File ID", "File Name", "File Type", "File Storage Location", "File Status", "File Record Count", "File Size", "File Creation Time", "File Last Update Time", "File Description", "File Version Number", "File Collection ID"], "Primary key": ["File ID"], "Foreign key": {"File Collection ID": {"File Collection": "File Collection ID"}}}, "File Collection": {"Attributes": ["File Collection ID", "File Collection Description"], "Primary key": ["File Collection ID"], "Foreign key": {}}, "Replica": {"Attributes": ["Replica ID", "File ID", "Replica Storage Location", "Replica Node Name", "Replica Device Name", "Replica Last Update Time", "Replica Status", "Replica Version Number", "Replica Index"], "Primary key": ["Replica ID"], "Foreign key": {"File ID": {"File": "File ID"}}}}}
{"id": "67552f0a13602ec03b41a91d", "question": "The design of a technology conference management system is as follows:\nThe conference has participants, whose information includes Participant ID, Name, Company, and Email.\nThe conference offers various types of tickets, with ticket information including Ticket ID, Name, Description, Price, and whether it includes workshops, with each participant limited to purchasing one ticket.\nParticipants can use discount codes to purchase tickets, with discount code information including Code, Name, Type, and Amount.\nAfter purchasing tickets, participant ticket records are generated, containing Participant ID, Ticket ID, Discount Code ID, and Net Price.\nThe conference schedules multiple meetings, with meeting information including Name, Description, Date, Start Time, End Time, and Room.\nFurthermore, the conference also offers workshops, with workshop information including Name, Description, Requirements, Location, Date, Start Time, End Time, and Capacity.\nEach meeting or workshop can have multiple speakers, with speaker information including Name, Company, and Description.", "answer": {"Participant": {"Attributes": ["Participant ID", "Name", "Company", "Email", "Ticket ID", "Discount Code ID"], "Primary key": ["Participant ID"], "Foreign key": {"Discount Code ID": {"Discount Code": "Discount Code ID"}, "Ticket ID": {"Ticket Type": "Ticket ID"}}}, "Ticket Type": {"Attributes": ["Ticket ID", "Name", "Description", "Price", "Includes Workshop"], "Primary key": ["Ticket ID"], "Foreign key": {}}, "Discount Code": {"Attributes": ["Discount Code ID", "Name", "Type", "Amount"], "Primary key": ["Discount Code ID"], "Foreign key": {}}, "Meeting": {"Attributes": ["Meeting ID", "Name", "Description", "Date", "Start Time", "End Time", "Room"], "Primary key": ["Meeting ID"], "Foreign key": {}}, "Workshop": {"Attributes": ["Workshop ID", "Name", "Description", "Requirements", "Location", "Date", "Start Time", "End Time", "Capacity"], "Primary key": ["Workshop ID"], "Foreign key": {}}, "Speaker": {"Attributes": ["Speaker ID", "Name", "Company", "Bio"], "Primary key": ["Speaker ID"], "Foreign key": {}}, "Meeting Speaker": {"Attributes": ["Meeting ID", "Speaker ID"], "Primary key": ["Meeting ID", "Speaker ID"], "Foreign key": {"Meeting ID": {"Meeting": "Meeting ID"}, "Speaker ID": {"Speaker": "Speaker ID"}}}, "Workshop Speaker": {"Attributes": ["Workshop ID", "Speaker ID"], "Primary key": ["Workshop ID", "Speaker ID"], "Foreign key": {"Speaker ID": {"Speaker": "Speaker ID"}, "Workshop ID": {"Workshop": "Workshop ID"}}}}}
{"id": "67552f0a13602ec03b41a91f", "question": "The access control system shall manage access permissions for different types of objects based on users or roles. Each object shall have a corresponding class and unique identifier, and may have a parent object, thereby allowing inheritance of permissions from the parent object. The system shall also record the owner of each object, including their name and contact information, and specify the authorized object in each permission entry, as well as whether to record audit logs for successful or failed access attempts.", "answer": {"Object": {"Attributes": ["Object ID", "Category"], "Primary key": ["Object ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Permission Entry": {"Attributes": ["Permission Entry Number", "Log Recording Status", "Log Path"], "Primary key": ["Permission Entry Number"], "Foreign key": {}}, "Permission Inheritance": {"Attributes": ["Child Object", "Parent Object"], "Primary key": ["Child Object", "Parent Object"], "Foreign key": {"Child Object": {"Object": "Object ID"}, "Parent Object": {"Object": "Object ID"}}}, "Authorization": {"Attributes": ["Permission Entry Number", "Authorized Object"], "Primary key": ["Permission Entry Number", "Authorized Object"], "Foreign key": {"Authorized Object": {"Object": "Object ID"}, "Permission Entry Number": {"Permission Entry": "Permission Entry Number"}}}, "Object Assignment": {"Attributes": ["Object ID", "Assigned User"], "Primary key": ["Object ID", "Assigned User"], "Foreign key": {"Assigned User": {"User": "User ID"}, "Object ID": {"Object": "Object ID"}}}}}
{"id": "67552f0a13602ec03b41a923", "question": "Retail Management System\n\n1. Supplier Management\nRecord the basic information of suppliers, including supplier ID name, address, and phone number.\nYou can query and manage supplier information.\n\n2. Customer Management\nRecord the basic information of customers, including customer ID, first name, last name, phone number, address, email, etc.\nYou can query and manage customer information.\n\n3. Product Management\nRecord the detailed information of products, including name, description, purchase price, selling price, inventory quantity, and minimum inventory quantity.\nBy associating supplier information with supplier ID, you can track the supplier of the product.\nYou can query and manage product information, including inventory management.\n\n4. Invoice Management\nRecord the detailed information of each invoice, including invoice ID, date, tax amount, total value, and customer information.\nBy associating customer information with customer ID number, you can track the customer of the invoice.\nYou can generate and manage invoices.\n\n5. Invoice Product Association Management\nRecord the products and quantities contained in each invoice.\nAssociating invoice and product information with invoice ID and product ID.\nYou can query the products and quantities contained in each invoice, as well as the detailed information of the products.", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Supplier Address", "Supplier Phone"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "First Name", "Last Name", "Phone", "Address", "Email"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Description", "Purchase Price", "Selling Price", "Stock Quantity", "Minimum Stock Quantity", "Supplier ID"], "Primary key": ["Product ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}}}, "Invoice": {"Attributes": ["Invoice ID", "Date", "Tax Amount", "Total Value", "Customer ID"], "Primary key": ["Invoice ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Invoice Product": {"Attributes": ["Invoice ID", "Product ID", "Product Quantity"], "Primary key": ["Invoice ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Invoice ID": {"Invoice": "Invoice ID"}}}}}
{"id": "67552f0a13602ec03b41a925", "question": "The database design requirements for a certain web page management system are as follows: The system needs to store additional navigation information for each page in the application, such as page name, alias, title, etc., to support page management, navigation control, permission management, and dynamic display control. Through this system, administrators can set the display order, style, redirection target, and click events of pages. The system records information about web page users, including user ID, username, email address, and other details. At the same time, the system needs to record administrator information, including ID and name. Administrators can modify page visibility, allowing pages to be dynamically shown or hidden, and can perform page grouping management and set permission management schemes. All update records will be saved to ensure the traceability of changes.\n", "answer": {"Page": {"Attributes": ["Page ID", "Page Name", "Page Alias", "Page Title", "Display Order", "Style", "Redirection Target", "Click Event", "Hidden or Not", "Page Group", "Permission Schema"], "Primary key": ["Page ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Username", "Email Address"], "Primary key": ["User ID"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Administrator Name"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Administrator Modifies Page": {"Attributes": ["Administrator ID", "Page ID", "Modification Time", "Modification Content"], "Primary key": ["Page ID", "Administrator ID", "Modification Time"], "Foreign key": {"Administrator ID": {"Administrator": "Administrator"}, "Page ID": {"Page": "Page"}}}, "User Access Page Record": {"Attributes": ["User ID", "Page ID", "Access Time"], "Primary key": ["User ID", "Page ID", "Access Time"], "Foreign key": {"User ID": {"User": "User"}, "Page ID": {"Page": "Page"}}}}}
{"id": "67552f0a13602ec03b41a927", "question": "**Image Sending and Management System**\n\nThis system is designed to track the records of users sending images, manage basic information of the images, and provide logs and related links for sent images. Below is a detailed business description:\n\n**Image Management:**\n\nThe system can manage the basic information of images, including Image ID, Image URL, image description, and compressed signature. Each image can be identified by a unique ID and can upload both its original and compressed version URLs along with description information.\nThis functionality enables the system to efficiently store and retrieve relevant data of images and supports image compression management to save storage space.\n\n**User Management:**\n\nThe system can manage the basic information of users, including User ID, name, and phone number.\nThe user information helps to identify the sender of the images and is associated within the system to track the sending history of each image.\n\n**Image Sending Records:**\n\nThe system can record every instance of image sending, including the sender, sending time, and corresponding Image ID. Each instance generates an independent sending link to track the specific sending situation of the image.\nThrough the sending records, the system can trace which user sent a particular image at a specific time and store the sending-related link.\n\n**Sending Link Management:**\n\nEach time an image is sent, the system generates a sending link and associates it with the sender, sending time, and image's ID.\nThis feature ensures that the sending of images can be tracked and managed, and provides a download link or access record for the image when needed.", "answer": {"Image": {"Attributes": ["Image ID", "URL", "Description", "Compressed Signature"], "Primary key": ["Image ID"], "Foreign key": {}}, "Image Sending Record": {"Attributes": ["Image ID", "Sending Time", "Sender", "Sending Link"], "Primary key": ["Image ID", "Sending Time", "Sender"], "Foreign key": {"Sender": {"User": "User ID"}, "Image ID": {"Image": "Image ID"}}}, "User": {"Attributes": ["User ID", "Name", "Phone"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a928", "question": "Here is the required database business requirement description for a horse racing betting system: The system includes race management, recording each race's identifier, name, start time, end time, and results. The horse management section records the name of each racehorse. The system also records the bettor's phone and other identity information for easy contact. The betting management section records the amount of each bet and its corresponding race. Race result records are used to track each racehorse's number and ranking in the race, supporting subsequent statistics and analysis. The betting result management helps compare the bettor's selected horse's expected ranking with the actual outcome, thus determining whether the bet is won.\n", "answer": {"Race": {"Attributes": ["Race ID", "Race Name", "Start Time", "End Time", "Race Result"], "Primary key": ["Race ID"], "Foreign key": {}}, "Horse": {"Attributes": ["Horse ID", "Horse Name"], "Primary key": ["Horse ID"], "Foreign key": {}}, "Bettor": {"Attributes": ["Bettor ID", "Phone Number", "Identity Information"], "Primary key": ["Bettor ID"], "Foreign key": {}}, "Horse Participation": {"Attributes": ["Horse ID", "Race ID", "Race Time", "Horse Ranking"], "Primary key": ["Horse ID", "Race ID", "Race Time"], "Foreign key": {"Race ID": {"Race": "Race ID"}, "Horse ID": {"Horse": "Horse ID"}}}, "Bettor Betting Race": {"Attributes": ["Bettor ID", "Race ID", "Betting Time", "Betting Amount", "Horse ID", "Expected Ranking", "Actual Result", "Winning Status"], "Primary key": ["Bettor ID", "Race ID", "Betting Time"], "Foreign key": {"Bettor ID": {"Bettor": "Bettor ID"}, "Race ID": {"Race": "Race ID"}, "Horse ID": {"Horse": "Horse ID"}}}}}
{"id": "67552f0a13602ec03b41a92a", "question": "Business Requirements Description:\nThis system is designed for managing work items, with the following core functionalities:\nStores the Attributes for each work item, including Attributes name, Attributes value, and link status.\nRecords the work item\u2019s ID, name, description, creation date, update date, and other relevant information.\nTracks the link status of work items, which can be used to record the current status or related information about the work item.\n", "answer": {"Work Item": {"Attributes": ["workItem ID", "workItem Name", "description", "creation Date", "update Date"], "Primary key": ["workItem ID"], "Foreign key": {}}, "Work Item Attributes": {"Attributes": ["Attributes ID", "workItem ID", "Attributes Name", "Attributes Value", "link Status"], "Primary key": ["Attributes ID", "workItem ID"], "Foreign key": {"workItem ID": {"Work Item": "workItem ID"}}}}}
{"id": "67552f0a13602ec03b41a92e", "question": "The database requirement description for an automobile rental company management system is as follows: The system manages multiple rental locations, each with name, address, telephone, and business hours information. Each location offers different categories of vehicles, including category name and rental prices during weekdays and weekends. Additionally, each location will have multiple specific vehicles, the information for these vehicles includes license plate number, brand, model, photo, and the associated location. Users can register accounts through the system, providing email, name, address, telephone, postal code, city, and can link credit card information for convenient rental payments. Users can reserve vehicles on specified dates, requiring the user's email, license plate number, reservation date, and return date during reservation. The system also manages news and featured content, posting news related to rental services and promotional activities. Through these functionalities, users can inquire about vehicles, locations, and prices, and the system also collects data on vehicle rentals to support the company's operational decisions.\n", "answer": {"Rental Location": {"Attributes": ["Location ID", "Location Name", "Location Address", "Location Phone", "Business Hours"], "Primary key": ["Location ID"], "Foreign key": {}}, "Vehicle Category": {"Attributes": ["Category ID", "Category Name", "Weekday Rental Price", "Weekend Rental Price"], "Primary key": ["Category ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["License Plate Number", "Brand", "Model", "Photo Path", "Location ID", "Category ID"], "Primary key": ["License Plate Number"], "Foreign key": {"Location ID": {"Rental Location": "Location ID"}, "Category ID": {"Vehicle Category": "Category ID"}}}, "User": {"Attributes": ["User ID", "Email", "Name", "Address", "Phone", "Postal Code", "City", "Credit Card Information"], "Primary key": ["User ID"], "Foreign key": {}}, "User Vehicle Reservation": {"Attributes": ["User ID", "Vehicle ID", "Reservation Date", "Return Date"], "Primary key": ["User ID", "Vehicle ID", "Reservation Date"], "Foreign key": {"User ID": {"User": "User ID"}, "Vehicle ID": {"Vehicle": "License Plate Number"}}}, "News and Featured Content": {"Attributes": ["Content ID", "Title", "Content", "Release Date"], "Primary key": ["Content ID"], "Foreign key": {}}, "Vehicle Current Location": {"Attributes": ["Location ID", "License Plate Number", "Record Time"], "Primary key": ["Location ID", "License Plate Number", "Record Time"], "Foreign key": {"Location ID": {"Rental Location": "Location ID"}, "License Plate Number": {"Vehicle": "License Plate Number"}}}}}
{"id": "67552f0a13602ec03b41a932", "question": "Business requirements description of workflow management system: The system is used to manage complex business processes and supports the recording and monitoring of scheduled tasks and execution instances. Each scheduled task has a task ID, task type, lock information, execution instance ID, process instance ID, process definition ID, number of retries, exception information, expiration time, repeat configuration, processor configuration, and tenant ID. The system needs to record the execution of each task, including the start time, end time, execution result, and exception information of the task. Each execution of a task needs to be associated with an execution instance, which has an execution instance ID, process instance ID, and process definition ID. An execution instance can include the execution of multiple tasks. By recording the relationship between tasks and execution instances, the system can track the execution of each task and support task scheduling, retries, and exception handling. At the same time, the system needs to support multi-tenant scenarios to ensure the isolation of task data of different tenants.", "answer": {"Scheduled Task": {"Attributes": ["ID", "Revision", "Type", "Lock Expiration Time", "Lock Owner", "Exclusive", "Execution ID", "Process Instance ID", "Process Definition ID", "Retries", "Exception Stack ID", "Exception Message", "Due Date", "Repeat", "Handler Type", "Handler Configuration", "Tenant ID"], "Primary key": ["ID"], "Foreign key": {"Execution ID": {"Execution Instance": "Execution ID"}, "Process Instance ID": {"Execution Instance": "Process Instance ID"}}}, "Execution Instance": {"Attributes": ["Execution ID", "Process Instance ID", "Process Definition ID"], "Primary key": ["Execution ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a934", "question": "A sports event interaction platform is required to manage user information, event publication and registration, as well as event communication functionalities. The platform allows users to register accounts and upload personal photos, set names, contact information, avatars, and passwords. Users can create sports events and add their names, descriptions, locations, and times, while choosing the type of event (such as football, basketball, etc.). Users can also view and register for events of interest, or send and view messages on event pages to communicate with other participants.", "answer": {"User": {"Attributes": ["Account", "Name", "Contact Information", "Avatar URL", "Password"], "Primary key": ["Account"], "Foreign key": {}}, "Event": {"Attributes": ["Event ID", "Event Name", "Description", "Time", "Location", "Event Type", "Creator"], "Primary key": ["Event ID"], "Foreign key": {"Creator": {"User": "Account"}}}, "Message": {"Attributes": ["Message ID", "Associated Event", "Message Content", "Sender"], "Primary key": ["Message ID"], "Foreign key": {"Associated Event": {"Event": "Event ID"}, "Sender": {"User": "Account"}}}}}
{"id": "67552f0a13602ec03b41a938", "question": "The business requirements description for the log management system: The system is designed to record and manage operational logs, supporting the creation, modification, and deletion of logs. The system must capture detailed information for each log, including log level, content, category, and lifecycle (creation, modification, and deletion timestamps). Each log operation must be associated with an operator, who possesses an ID, account, password, contact information, permissions, and user role. By recording the relationship between logs and operators, the system can track the operational history of each log, including operation time, operation type, and execution content. Additionally, the system supports categorized management of logs to ensure the traceability and integrity of log data.", "answer": {"Log": {"Attributes": ["Log ID", "Log Level", "Log Content", "Log Category", "Log Creation Time", "Log Last Modified Time", "Log Deletion Time"], "Primary key": ["Log ID"], "Foreign key": {}}, "Operator": {"Attributes": ["ID", "Account", "Password", "Contact Information"], "Primary key": ["ID"], "Foreign key": {}}, "Operation Log": {"Attributes": ["Log ID", "User ID", "Operation Time", "Operation Type", "Execution Content"], "Primary key": ["Log ID", "User ID", "Operation Time"], "Foreign key": {"Log ID": {"Log": "Log ID"}, "User ID": {"Operator": "ID"}}}}}
{"id": "67552f0a13602ec03b41a939", "question": "This is a restaurant recommendation system for managing restaurant information and recommending nearby restaurants. For basic restaurant information management, the system maintains restaurant basic information, including restaurant ID, name, address, phone number, business hours, and average cost per person. It records restaurant geographical location information including latitude and longitude coordinates, manages restaurant feature tags such as \"Sichuan cuisine\", \"hot pot\", \"family gathering\", etc., and tracks restaurant ratings and number of reviews. For dish management, the system records information about dishes offered by each restaurant, including dish ID, name, price, description, etc. It adds category tags to dishes such as \"signature dish\", \"best-seller\", \"new arrival\", etc., supports uploading dish images, and records dish satisfaction rate and monthly sales. For user review management, the system supports users to rate and review restaurants, recording review content, rating, dining time, and other information. It supports uploading actual dining photos, and allows restaurants to reply to reviews, including reply time and content.", "answer": {"Restaurant": {"Attributes": ["Restaurant ID", "Name", "Address", "Phone", "Business hours", "Average cost"], "Primary key": ["Restaurant ID"], "Foreign key": {}}, "Dish": {"Attributes": ["Dish ID", "Name", "Price", "Description", "Category", "Dish image URL", "Satisfaction rate", "Monthly sales", "Restaurant ID"], "Primary key": ["Dish ID"], "Foreign key": {"Restaurant ID": {"Restaurant": "Restaurant ID"}}}, "User review": {"Attributes": ["Review ID", "Review content", "Rating", "Dining time", "Actual photos"], "Primary key": ["Review ID"], "Foreign key": {}}, "Review reply": {"Attributes": ["Reply ID", "Reply time", "Reply content", "Review ID being replied to"], "Primary key": ["Reply ID"], "Foreign key": {"Review ID being replied to": {"User review": "Review ID"}}}}}
{"id": "67552f0a13602ec03b41a93a", "question": "The data management system of a social platform is as follows: the platform contains multiple users. User information includes User Name, Name, Email, Personal Bio, Relationship Status, Phone Number, Creation Time, and Last Edit Time, where User Name is the Primary key and cannot be null. Post information includes Post ID, Post Content, Post Title, User Name, Creation Time, and Last Edit Time. Comment information includes Comment ID, Post ID, User Name, Comment Content, Creation Time, and Last Edit Time, where Comment ID is the Primary key and auto-incremented, Post ID is a Foreign key referencing the Post ID field in the post table, and User Name is a Foreign key referencing the User Name field in the user table. These tables ensure efficient management of platform data and seamless user interactions.", "answer": {"User": {"Attributes": ["User ID", "Name", "Email", "Personal Bio", "Relationship Status", "Phone Number", "Creation Time", "Last Edit Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Post Content", "Post Title", "User ID", "Creation Time", "Last Edit Time"], "Primary key": ["Post ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["User ID", "Post ID", "Comment Content", "Creation Time", "Last Edit Time"], "Primary key": ["User ID", "Post ID", "Last Edit Time"], "Foreign key": {"Post ID": {"Post": "Post ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a93e", "question": "This is a library management system. For book management, the system maintains basic book information, including ISBN, title, author, publisher, publication date, price, number of copies available, number of copies in circulation, library location, and shelf number. For reader management, the system maintains reader information including reader ID, library card number, name, gender, age, phone, email, address, reader type, maximum borrowing limit, and loan period. For book borrowing management, the system records borrowing details including reader ID, ISBN, borrowing time, due date, actual return date, and borrowing status. For book reservation management, the system supports readers to reserve books, recording reader ID, ISBN, reservation time, reservation expiration time, and reservation status.", "answer": {"Book": {"Attributes": ["ISBN", "Title", "Author", "Publisher", "Publication date", "Price", "Available copies", "Circulating copies", "Library location", "Shelf number"], "Primary key": ["ISBN"], "Foreign key": {}}, "Reader": {"Attributes": ["Reader ID", "Library card number", "Name", "Gender", "Age", "Phone", "Email", "Address", "Reader type", "Maximum borrowing limit", "Loan period"], "Primary key": ["Reader ID"], "Foreign key": {}}, "Reader book borrowing": {"Attributes": ["Reader ID", "ISBN", "Borrowing time", "Due date", "Actual return date", "Borrowing status"], "Primary key": ["Reader ID", "ISBN", "Borrowing time"], "Foreign key": {"ISBN": {"Book": "ISBN"}, "Reader ID": {"Reader": "Reader ID"}}}, "Reader book reservation": {"Attributes": ["Reader ID", "ISBN", "Reservation time", "Reservation expiration time", "Reservation status"], "Primary key": ["Reader ID", "ISBN", "Reservation time"], "Foreign key": {"ISBN": {"Book": "ISBN"}, "Reader ID": {"Reader": "Reader ID"}}}}}
{"id": "67552f0a13602ec03b41a940", "question": "The permission management system is designed as follows:\nThe system contains multiple companies, each with a unique Company ID and Name.\nEach company has multiple users. User information includes User ID, Company ID, Username, Phone Number, and Job Title.\nThe system defines multiple Login Response Types, each with a unique Type ID and Name.\nEach login attempt generates a Login Response Record, which records the User, Login Time, Response Type ID, and Response Label.", "answer": {"Company": {"Attributes": ["Company ID", "Company Name"], "Primary key": ["Company ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Company ID", "Username", "Phone Number", "Job Title"], "Primary key": ["User ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}, "Login Response Type": {"Attributes": ["Type ID", "Type Name"], "Primary key": ["Type ID"], "Foreign key": {}}, "Login Response Record": {"Attributes": ["User ID", "Login Time", "Response Type ID", "Response Label"], "Primary key": ["User ID", "Login Time"], "Foreign key": {"Response Type ID": {"Login Response Type": "Type ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a941", "question": "Customer Order Management System Business Requirements Description for an E-commerce Platform: The platform hosts multiple customers, each with a unique Customer ID, including name, email, password, and detailed address information. The platform sells a variety of products, each product has a unique Product ID, including name, price, stock quantity, description, and image path. Customers can place orders; each order has a unique ID, records the order time and status, and includes multiple order items, each order item records the purchased Product ID and quantity.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Email", "Password", "Detailed Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Price", "Stock Quantity", "Description", "Image Path"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Customer ID", "Order Time", "Status"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Order Item": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a943", "question": "Business Requirements Description:\nThis system is designed for managing engineers and machinery in a factory, with the following core functionalities:\n1.Engineer Management: Tracks the engineer\u2019s name, status, and join date. It supports the ability to query, add, modify, and delete engineer information.\n2.Machine Management: Tracks the machine\u2019s name, cost, and receiving date. It supports the ability to query, add, modify, and delete machine information.\n3.Engineer-Machine Association Management: Records the relationship between engineers and machines. It supports querying which machines an engineer is responsible for or which engineers are responsible for a specific machine. The system allows dynamic allocation and adjustment between engineers and machines.\n4.Migration History Record: Tracks database migration history, including migration ID, migration date, source version, target version, and description. This is useful for version control and rollback.", "answer": {"Engineer": {"Attributes": ["engineer ID", "name", "status", "joinDate"], "Primary key": ["engineer ID"], "Foreign key": {}}, "Machine": {"Attributes": ["machine ID", "name", "cost", "receive Date"], "Primary key": ["machine ID"], "Foreign key": {}}, "Engineer-Machine Management": {"Attributes": ["engineer ID", "machine ID", "allocation Date", "status"], "Primary key": ["engineer ID", "machine ID"], "Foreign key": {"engineerID": {"Engineer": "engineer ID"}, "machineID": {"Machine": "machine ID"}}}, "Migration History": {"Attributes": ["migration ID", "migration Date", "source Version", "target Version", "description"], "Primary key": ["migration ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a944", "question": "Business Requirements Description:\nThis system is designed for managing user information, appointment records for medical exams (check-ups), medical institution information, institution operating hours, and operator account information. The core features include:\n1.User Management: Stores basic user information, including name, email, phone number, birth date, gender, password, address, and insurance status.\n2.Appointment Management: Users can make appointments for medical checks. Appointment records include examination description, examination document, the medical institution where the appointment is made, payment amount, creation date, appointment date, and status.\n3.Medical Institution Management: Stores basic information about medical institutions, including name, address, opening time, and closing time.\n4.Operator Management: Stores account information for operators, including username and password. Each operator belongs to a specific medical institution and can manage that institution\u2019s appointments and user information.", "answer": {"User": {"Attributes": ["user ID", "name", "email", "phone Number", "birth Date", "gender", "password", "address", "insurance Status"], "Primary key": ["user ID"], "Foreign key": {}}, "Medical Institution": {"Attributes": ["medicalInstitution ID", "name", "address", "opening Time", "closing Time", "operator ID"], "Primary key": ["medical Institution ID"], "Foreign key": {"operatorID": {"Operator": "operator ID"}}}, "Operator": {"Attributes": ["operatorID", "username", "password", "affiliated Institution ID"], "Primary key": ["operator ID"], "Foreign key": {"affiliatedInstitutionID": {"Medical Institution": "medical Institution ID"}}}}}
{"id": "67552f0a13602ec03b41a948", "question": "Database name: School\n\nThis database is a school management system used to record student, teacher and subject information, as well as manage and record students' test scores and subject scores.\n\nMain functions\n\n1. Student management:\nRecord students' personal information, including name, age, address and phone number.\nManage the relationship between students and subjects, and record students' scores in various subjects.\nRecord the exams students take and their scores.\n\n2. Subject management:\nRecord the name and number of class hours of each subject.\nManage the relationship between subjects and students and teachers.\n\n3. Exam management:\nRecord the date of the exam and the corresponding subject.\nManage students' exam scores.\n\n4. Teacher management:\nRecord teachers' personal information, including name, address and phone number.\nManage the subjects taught by teachers.\nRecord the guidance relationship between teachers and students.\n\n5. Grade management:\nRecord students' subject scores and test scores.\nProvide grade query and statistical functions, such as querying all grades of a student, the average grade of all students in a subject, etc.\n\n6. Relationship management:\nManage the relationship between students and subjects, students and teachers, and teachers and subjects.\nFor example, you can query which teachers teach which students in which subjects.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Age", "Address", "Phone"], "Primary key": ["Student ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Teacher ID", "Name", "Address", "Phone"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Subject": {"Attributes": ["Subject ID", "Name", "Number of Hours"], "Primary key": ["Subject ID"], "Foreign key": {}}, "Exam": {"Attributes": ["Exam ID", "Date", "Corresponding Subject ID"], "Primary key": ["Exam ID"], "Foreign key": {"Corresponding Subject ID": {"Subject": "Subject ID"}}}, "Student and Subject": {"Attributes": ["Student ID", "Subject ID", "Subject Grade"], "Primary key": ["Student ID", "Subject ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Subject ID": {"Subject": "Subject ID"}}}, "Student and Exam": {"Attributes": ["Student ID", "Exam ID", "Exam Grade"], "Primary key": ["Student ID", "Exam ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Exam ID": {"Exam": "Exam ID"}}}, "Teacher and Subject": {"Attributes": ["Teacher ID", "Subject ID"], "Primary key": ["Teacher ID", "Subject ID"], "Foreign key": {"Teacher ID": {"Teacher": "Teacher ID"}, "Subject ID": {"Subject": "Subject ID"}}}, "Teacher and Student Guidance": {"Attributes": ["Teacher ID", "Student ID"], "Primary key": ["Teacher ID", "Student ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Teacher ID": {"Teacher": "Teacher ID"}}}}}
{"id": "67552f0a13602ec03b41a949", "question": "The database is a content management system (CMS), specifically designed to support content workflows, such as the DotNetNuke (DNN) platform. The main functions of the system include recording content review and publication processes, maintaining detailed logs of each operation during content creation, review, and publication, such as operation type, operation time, operating user, and related comments. By recording state changes in the workflow, the system enables content version management and tracking. Additionally, the operation audit function provides detailed logging, facilitating administrator auditing and tracking of content change history. The system also supports user permission management, controlling the permissions of different users in the content workflow by recording operating users, ensuring compliance in content management. The workflow management function allows configuration and management of multiple workflow types, supporting different content item workflow states and types. Finally, through the content state monitoring function, administrators can effectively monitor the current and historical states of content, ensuring content quality and compliance.\n", "answer": {"Content": {"Attributes": ["Content ID", "Title", "Content Description", "Content Type", "Creation Time", "Update Time"], "Primary key": ["Content ID"], "Foreign key": {}}, "Operation Log": {"Attributes": ["Log ID", "Content ID", "Operation Type", "Operation Time", "Operation User", "Operation Comment"], "Primary key": ["Log ID"], "Foreign key": {"Content ID": {"Content": "Content ID"}}}, "User": {"Attributes": ["User ID", "Username", "Email", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "User Content Modification": {"Attributes": ["User ID", "Content ID", "Modification Time", "Modified Content"], "Primary key": ["User ID", "Content ID", "Modification Time"], "Foreign key": {"Content ID": {"Content": "Content ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a94c", "question": "An e-commerce platform sells e-cigarette products:\nUsers can register by providing their name, phone number, address, and payment method.\nThe platform sells various e-cigarette products, each with a unique ID, including the manufacturer, flavor, number of puffs, unit price, and stock quantity.\nUsers can add products to their shopping cart, recording the quantity of selected products.\nUsers can select multiple products in their shopping cart for checkout, generate an order, and document the order creation time and order status.", "answer": {"User": {"Attributes": ["User ID", "Name", "Phone Number", "Address", "Payment Method"], "Primary key": ["User ID"], "Foreign key": {}}, "E-cigarette Product": {"Attributes": ["Product ID", "Manufacturer", "Flavor", "Number of Puffs", "Unit Price", "Stock Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "User ID", "Order Creation Time", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Order Item": {"Attributes": ["Order ID", "Product ID", "Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order ID"}}}, "Shopping Cart": {"Attributes": ["User ID", "Product ID", "Quantity"], "Primary key": ["User ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a94d", "question": "The business requirements of a user management system are described as follows: The system contains multiple user accounts. Account information includes Account ID, User ID, Third-party Service Provider Type, Third-party Service Provider ID, Third-party Service Provider Account ID, Refresh Token, Access Token, Access Token Expiration Time, Account Creation Time, and Account Update Time. The User ID is a Foreign key referencing the User ID field in the User table. User session information is stored in the Session table, including Session ID, User ID, Session Expiration Time, Session Token, Access Token, Session Creation Time, and Session Update Time. The User ID is a Foreign key referencing the User ID field in the User table. Basic user information is stored in the User table, including User ID, Username, User Email, Email Verification Time, User Avatar URL, User Creation Time, and User Update Time. User verification request information is stored in the Verification Request table, including Verification Request ID, User ID, Verification Request Identifier, Verification Token, Verification Request Expiration Time, Verification Request Creation Time, and Verification Request Update Time. Through these tables, the system comprehensively manages user accounts, sessions, basic information, and verification requests, ensuring the security of user identities and the integrity of data.", "answer": {"User": {"Attributes": ["User ID", "Username", "User Email", "Email Verification Time", "User Avatar URL", "User Creation Time", "User Update Time"], "Primary key": ["User ID"], "Foreign key": {}}, "User Account": {"Attributes": ["Account ID", "User ID", "Third-party Service Provider Type", "Third-party Service Provider ID", "Third-party Service Provider Account ID", "Refresh Token", "Access Token", "Access Token Expiration Time", "Account Creation Time", "Account Update Time"], "Primary key": ["Account ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User Session": {"Attributes": ["Session ID", "User ID", "Session Expiration Time", "Session Token", "Access Token", "Session Creation Time", "Session Update Time"], "Primary key": ["Session ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User Verification": {"Attributes": ["Verification Request ID", "User ID", "Verification Request Identifier", "Verification Token", "Verification Request Expiration Time", "Verification Request Creation Time", "Verification Request Update Time"], "Primary key": ["Verification Request ID"], "Foreign key": {"User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a950", "question": "This database table is used for a sports league management system. The specific functions are as follows:\n\n1. League management: league information can be added, modified and deleted, including league name, region, parent league and person in charge.\n\n2. Regional association: leagues can be associated with specific regions. When a region is deleted, all leagues under the region will be automatically deleted.\n\n3. League hierarchy: leagues can have hierarchical relationships. For example, top leagues (such as the Bundesliga) can have lower leagues (such as regional leagues).\n\n4. User management: leagues can specify a person in charge, who can be a user in the system.\n\n5. Data tracking: record the creation time and creator of league information, as well as the last modification time and modifier, to facilitate tracking of data change history.\n\n6. Concurrency control: detect concurrency issues through version numbers to ensure data consistency when multiple users modify the same league information at the same time.\n\nThis system can be used to manage and maintain information of various sports leagues, support the hierarchical relationship and regional division of leagues, and provide user management and data change history tracking functions.", "answer": {"user": {"Attributes": ["user ID", "username", "name", "gender", "date of birth", "registration time", "last login time"], "Primary key": ["user ID"], "Foreign key": {}}, "region": {"Attributes": ["region ID", "region name"], "Primary key": ["region ID"], "Foreign key": {}}, "league": {"Attributes": ["league ID", "league name", "responsible person ID"], "Primary key": ["league ID"], "Foreign key": {"responsible person ID": {"user": "user ID"}}}, "league region association": {"Attributes": ["league ID", "region ID"], "Primary key": ["league ID", "region ID"], "Foreign key": {"region ID": {"region": "region ID"}, "league ID": {"league": "league ID"}}}, "league hierarchy": {"Attributes": ["upper league ID", "lower league ID"], "Primary key": ["upper league ID", "lower league ID"], "Foreign key": {"upper league ID": {"league": "league ID"}, "lower league ID": {"league": "league ID"}}}, "league creator": {"Attributes": ["league ID", "creator ID"], "Primary key": ["league ID", "creator ID"], "Foreign key": {"creator ID": {"user": "user ID"}, "league ID": {"league": "league ID"}}}, "league modifier": {"Attributes": ["league ID", "modifier ID"], "Primary key": ["league ID", "modifier ID"], "Foreign key": {"modifier ID": {"user": "user ID"}, "league ID": {"league": "league ID"}}}}}
{"id": "67552f0a13602ec03b41a952", "question": "Research Fund Management System Database Requirement Description: This database is a budget and fund management system in the field of laboratory services and applied sciences, designed to support the management of complex budgets and fund allocations. The system primarily records financial information related to each project or activity, including budget levels, sources of funds, amounts, objectives, and allocation ratios. By detailing every project, activity, organization, and associated funding, it ensures transparency and compliance in the use of funds. The system supports multi-level coding management to meet different levels and details of requirements and is capable of tracking the change history of projects. Through detailed management of projects, such as project codes, activity codes, objectives, and their names, the system efficiently manages fund distribution, change recording, and department management. The system also provides powerful querying capabilities, allowing management personnel to perform data analysis and report generation based on various conditions, further supporting effective project and fund management.\n", "answer": {"Project": {"Attributes": ["Project ID", "Project Name", "Project Description", "Project Code", "Budget Level", "Creation Time", "Project Leader"], "Primary key": ["Project ID"], "Foreign key": {"Project Leader": {"User Project Application": "User ID"}}}, "Fund": {"Attributes": ["Fund ID", "Fund Name", "Fund Description", "Total Fund"], "Primary key": ["Fund ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Leader"], "Primary key": ["Department ID"], "Foreign key": {"Department Leader": {"User Project Application": "User ID"}}}, "User Project Application": {"Attributes": ["User ID", "Project ID", "Application Time", "Application Status"], "Primary key": ["User ID", "Project ID"], "Foreign key": {"User ID": {"User Project Application": "User ID"}, "Project ID": {"Project": "Project ID"}}}, "User Fund Application for Project": {"Attributes": ["User ID", "Project ID", "Application Amount", "Application Time", "Application Status"], "Primary key": ["User ID", "Project ID"], "Foreign key": {"User ID": {"User Project Application": "User ID"}, "Project ID": {"Project": "Project ID"}}}, "User Held Activity": {"Attributes": ["Activity Leader", "Project ID", "Activity Name", "Event Time", "Event Location", "Budget Amount"], "Primary key": ["User ID", "Project ID", "Activity Name"], "Foreign key": {"Activity Leader": {"User Project Application": "User ID"}, "Project ID": {"Project": "Project ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Phone", "User Role", "Department"], "Primary key": ["User ID"], "Foreign key": {"Department": {"Department": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a953", "question": "This is a government department resource management system, mainly used for managing and tracking resource allocation, reception and donation transactions between government departments. For user management, the system requires users to provide basic information such as username, password and email for registration and login. Each user is assigned a specific role, such as administrator or regular user, with different roles having different operation permissions. The system records all user operations with time and operator for accountability tracking. For organizational structure, the system has multiple supervisory departments, each with a unique name and responsibility description. Under each supervisory department are several work units, which also have unique names and responsibility descriptions, and clearly belong to a specific supervisory department's management. For resource management, the system records basic Attributes such as resource code and name. When a resource transaction occurs, the system records detailed information including the work unit involved, resource code, receiver's user ID, storage location, budget year, and resource acquisition value. To ensure transaction compliance, the system also manages a series of approval documents, recording document names and contents.\n", "answer": {"User": {"Attributes": ["Username", "Password", "Email", "User ID", "Role ID"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role name", "Operation permissions"], "Primary key": ["Role ID"], "Foreign key": {}}, "Operation": {"Attributes": ["Operation ID", "Operation content", "Operation time", "Operating user ID"], "Primary key": ["Operation ID"], "Foreign key": {"Operating user ID": {"User": "User ID"}}}, "Supervisory department": {"Attributes": ["Department ID", "Name", "Responsibility description"], "Primary key": ["Department ID"], "Foreign key": {}}, "Work unit": {"Attributes": ["Work unit ID", "Name", "Responsibility description", "Supervisory department ID"], "Primary key": ["Work unit ID"], "Foreign key": {"Supervisory department ID": {"Supervisory department": "Department ID"}}}, "Resource": {"Attributes": ["Resource code", "Name"], "Primary key": ["Resource code"], "Foreign key": {}}, "Resource transaction record": {"Attributes": ["Record ID", "Storage location", "Budget year", "Resource acquisition value", "Resource code", "Receiver user ID", "Work unit ID"], "Primary key": ["Record ID"], "Foreign key": {"Work unit ID": {"Work unit": "Work unit ID"}, "Receiver user ID": {"User": "User ID"}, "Resource code": {"Resource": "Resource code"}}}, "Approval document": {"Attributes": ["Document ID", "Document name", "Document content"], "Primary key": ["Document ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a954", "question": "The wireless network monitoring and device management system primarily functions to manage device information, record network traffic data, track device failures and maintenance status, and monitor user connections to devices. The system is also capable of tracking maintenance operations performed by staff on the devices. The database includes the following functions:\n\nDevice Management: record basic information of all network devices. Fields include Device ID, Name, Type, IP Address, Installation Location, Installation Time, and Device Status. \n \nUser Management: store user account information. Fields include User ID, User Account, and User Password. \n \nNetwork traffic Management: record network traffic data of each device at specific time points. Fields include Device ID, Timestamp, Upload Traffic, Download Traffic, Total Traffic, and Traffic Status.  \n\nDevice failure record Management: record device failure information. Fields include Device ID, Failure Occurrence Time, Failure Type, Failure Description, Handling Status, and Remarks.  \n\nStaff Management: record information about staff members. Fields include Staff ID, Name, and Contact Information.  \n\nUser connection device Management: record the connection status between users and devices. Fields include User ID, Device ID, Connection Time, Disconnection Time, Bandwidth Used, and User IP.  \n\nDevice maintenance record Management: Used to document device maintenance information. Fields include Device ID, Staff ID, Maintenance Time, Maintenance Content, Maintenance Result, and Remarks.  \n\nThe design of thus system is primarily for device management, network traffic monitoring, failure diagnosis and handling, tracking user connection status, and maintaining device maintenance records.", "answer": {"Device": {"Attributes": ["ID", "Name", "Type", "IP Address", "Installation Location", "Installation Time", "Device Status"], "Primary key": ["ID"], "Foreign key": {}}, "User": {"Attributes": ["ID", "User Account", "User Password"], "Primary key": ["ID"], "Foreign key": {}}, "Network Traffic": {"Attributes": ["Device ID", "Timestamp", "Upload Traffic", "Download Traffic", "Total Traffic", "Traffic Status"], "Primary key": ["Device ID", "Timestamp"], "Foreign key": {"Device ID": {"Device": "ID"}}}, "Device Failure Record": {"Attributes": ["Device ID", "Failure Occurrence Time", "Failure Type", "Failure Description", "Handling Status", "Remarks"], "Primary key": ["Device ID", "Failure Occurrence Time"], "Foreign key": {"Device ID": {"Device": "ID"}}}, "Staff": {"Attributes": ["ID", "Name", "Contact Information"], "Primary key": ["ID"], "Foreign key": {}}, "User Connection Device": {"Attributes": ["User ID", "Device ID", "User IP", "Connection Time", "Disconnection Time", "Used Bandwidth"], "Primary key": ["User ID", "Device ID", "Connection Time"], "Foreign key": {"User ID": {"User": "ID"}, "Device ID": {"Device": "ID"}}}, "Device Maintenance Record": {"Attributes": ["Device ID", "Staff ID", "Maintenance Time", "Maintenance Content", "Maintenance Result", "Remarks"], "Primary key": ["Device ID", "Staff ID", "Maintenance Time"], "Foreign key": {"Staff ID": {"Staff": "ID"}, "Device ID": {"Device": "ID"}}}}}
{"id": "67552f0a13602ec03b41a957", "question": "Business Requirements Description:\nThis system is designed to manage customer information, repair tasks, orders, parts, suppliers, and technicians for an auto repair service. The core functionalities include:\nThe system stores basic customer information, including a unique customer ID, name, and phone number.\nThe system maintains basic information for each technician, including a unique technician ID, name, and contact address.\nThe system stores information about different car models, each with a unique model ID and name.\nEach repair task is recorded with a unique task ID, related car model ID, task status (e.g., Pending, In Progress, Completed), customer ID, technician ID, task creation date, and completion date.\nEach repair task corresponds to an order, and the system records the order ID, related task ID, order creation date, and delivery status.\nThe system maintains basic information about suppliers, including a unique supplier ID and name.\nThe system tracks parts by their unique part ID, serial number, description, price, supplier ID, and inventory quantity.\nThe system manages the relationship between parts and orders, tracking the quantity of parts required for each order and the parts used in each repair task.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Technician": {"Attributes": ["Technician ID", "Name", "Address"], "Primary key": ["Technician ID"], "Foreign key": {}}, "Order Parts": {"Attributes": ["Order ID", "Part ID", "Quantity"], "Primary key": ["Order ID", "Part ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Part ID": {"Part": "Part ID"}}}, "Task Parts": {"Attributes": ["Task ID", "Part ID", "Quantity"], "Primary key": ["Task ID", "Part ID"], "Foreign key": {"Task ID": {"Repair Task": "Task ID"}, "Part ID": {"Part": "Part ID"}}}, "Car Model": {"Attributes": ["Car Model ID", "Name"], "Primary key": ["Car Model ID"], "Foreign key": {}}, "Repair Task": {"Attributes": ["Task ID", "Status", "Customer ID", "Task Creation Date", "Task Completion Date"], "Primary key": ["Task ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Task Technician": {"Attributes": ["Task ID", "Technician ID"], "Primary key": ["Task ID", "Technician ID"], "Foreign key": {}}, "Task Car Model": {"Attributes": ["Car Model ID", "Task ID"], "Primary key": ["Task ID", "Car Model ID"], "Foreign key": {"Task ID": {"Repair Task": "Task ID"}, "Car Model ID": {"Car Model": "Car Model ID"}}}, "Order": {"Attributes": ["Order ID", "Order Creation Date", "Is Delivered"], "Primary key": ["Order ID"], "Foreign key": {}}, "Order Task": {"Attributes": ["Order ID", "Task ID"], "Primary key": ["Order ID", "Task ID"], "Foreign key": {"Task ID": {"Repair Task": "Task ID"}, "Order ID": {"Order": "Order ID"}}}, "Supplier": {"Attributes": ["Supplier ID", "Name"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Part": {"Attributes": ["Part ID", "Serial Number", "Description", "Price", "Supplier ID", "Stock Quantity"], "Primary key": ["Part ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}}}}}
{"id": "67552f0a13602ec03b41a95b", "question": "This database model is part of a content management system (CMS) and is used to manage the relationship between articles (posts) and tags (tags)\n\nMain functions\n\n1 Article and tag relationship management: Through the post_id and tag_id fields, a many-to-many relationship between articles and multiple tags can be achieved, allowing an article to have multiple tags, and a tag can also be associated with multiple articles\n2 Creation time record: Through the created_at field, the creation time of each article tag association is recorded to facilitate subsequent time sorting and filtering\n3 Data integrity: Through the Foreign key constraints fk_post_id and fk_tag_id, the data consistency of articles and tags is ensured to prevent invalid association records\n4 Data query: You can quickly query all tags of an article, or query all articles associated with a tag, supporting efficient search and filtering functions", "answer": {"Article": {"Attributes": ["Post ID"], "Primary key": ["Post ID", "Article Title"], "Foreign key": {}}, "Tag": {"Attributes": ["Tag ID"], "Primary key": ["Tag ID", "Tag Category"], "Foreign key": {}}, "Article Tag Association": {"Attributes": ["Post ID", "Tag ID", "Created At", "FK Post ID", "FK Tag ID"], "Primary key": ["Post ID", "Tag ID"], "Foreign key": {"FK Post ID": {"Schema 0": "Post ID"}, "FK Tag ID": {"Tag": "Tag ID"}}}}}
{"id": "67552f0a13602ec03b41a961", "question": "A blog management system manages blog posts and their related comments. Each post has a unique identifier, title, summary, author, body content, and creation time.\nUsers can create, edit, and delete posts, with user information including User ID, name, and email address.\nThe comment feature allows users to post comments below articles, with comment information including User ID, comment content, and creation time.   \nRecord user activities on posts, including the type of operation (create, edit, and delete posts) and timestamp.", "answer": {"User": {"Attributes": ["User ID", "Name", "Email Address"], "Primary key": ["User ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Title", "Summary", "Author ID", "Body Content", "Creation Time"], "Primary key": ["Article ID"], "Foreign key": {"Author ID": {"User": "User ID"}}}, "Comment": {"Attributes": ["User ID", "Article ID", "Comment Content", "Creation Time"], "Primary key": ["User ID", "Article ID", "Creation Time"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "User ID": {"User": "User ID"}}}, "Operation Record": {"Attributes": ["Article ID", "Operation Type", "Timestamp"], "Primary key": ["Article ID", "Timestamp"], "Foreign key": {"Article ID": {"Article": "Article ID"}}}, "User Manage Article": {"Attributes": ["User ID", "Article ID"], "Primary key": ["User ID", "Article ID"], "Foreign key": {"Article ID": {"Article": "Article ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a962", "question": "Requirement Description:\nA financial management system for managing invoices. The main functions include managing invoice information, such as creating, updating, and querying invoices. Invoice information includes Invoice ID, Invoice Date, Due Date, Total Amount, Status, Notes, Payment Date, Payment Amount, MIME Type of the Electronic Version, and Content of the Electronic Version. It also associates with customer information to track which customer each invoice belongs to. Additionally, it associates with terms information to manage different payment terms for invoices.\nManaging customer information, where each customer has a unique Customer ID, Customer Name, Customer Address, Contact Person, and Contact Information.\nManaging terms information, including Term ID, Term Description, Payment Days, and Interest Rate.", "answer": {"Invoice": {"Attributes": ["Invoice ID", "Customer ID", "Invoice Date", "Due Date", "Total Amount", "Status", "Notes", "Payment Date", "Payment Amount", "Electronic Version MIME Type", "Electronic Version Content"], "Primary key": ["Invoice ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Address", "Contact Person", "Contact Information"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Terms": {"Attributes": ["Term ID", "Term Description", "Payment Days", "Interest Rate", "Invoice ID"], "Primary key": ["Term ID"], "Foreign key": {"Invoice ID": {"Invoice": "Invoice ID"}}}, "Invoice and Customer": {"Attributes": ["Invoice ID", "Customer ID", "Invoice Date", "Due Date", "Total Amount", "Status", "Notes", "Payment Date", "Payment Amount", "Electronic Version MIME Type", "Electronic Version Content"], "Primary key": ["Invoice ID", "Customer ID"], "Foreign key": {"Invoice ID": {"Invoice": "Invoice ID"}, "Customer ID": {"Customer": "Customer ID"}}}, "Invoice and Terms": {"Attributes": ["Term ID", "Term Description", "Payment Days", "Interest Rate", "Invoice ID"], "Primary key": ["Term ID", "Invoice ID"], "Foreign key": {"Invoice ID": {"Invoice": "Invoice ID"}, "Term ID": {"Terms": "Term ID"}}}}}
{"id": "67552f0a13602ec03b41a963", "question": "The reservation system of an airline company is as follows: The company has multiple customers, and customer information includes Customer ID, Name, Phone, and Email. The company also has multiple airline partners, and airline information includes Airline ID, Name, Phone, and Address. Each airline offers multiple flights, and flight information includes Flight Number, Departure Location, Destination, Departure Time, Arrival Time, and Airline ID. Customers can reserve flights, and reservation information includes Customer ID, Flight Number, Reservation Time, and Number of Tickets. A customer can reserve multiple flights and can also reserve the same flight multiple times. Upon completion of a reservation, the system generates a unique Reservation ID and records detailed reservation information.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Email"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Airline": {"Attributes": ["Airline ID", "Name", "Phone", "Address"], "Primary key": ["Airline ID"], "Foreign key": {}}, "Flight": {"Attributes": ["Flight ID", "Airline ID", "Departure Location", "Destination", "Departure Time", "Arrival Time"], "Primary key": ["Flight ID"], "Foreign key": {"Airline ID": {"Airline": "Airline ID"}}}, "Flight Reservation": {"Attributes": ["Customer ID", "Flight ID", "Reservation Time", "Number of Tickets"], "Primary key": ["Customer ID", "Flight ID", "Reservation Time"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Flight ID": {"Flight": "Flight ID"}}}}}
{"id": "67552f0a13602ec03b41a964", "question": "The news subscription service system operates as follows: The system allows users to subscribe to news via email. News information includes News ID and News Name. Subscription information includes Subscription Status, Creation Time, Modification Time, and the IP Address at the time of subscription. Users can update their subscription status or cancel their subscription at any time based on their needs.", "answer": {"User": {"Attributes": ["User ID", "Name"], "Primary key": ["User ID"], "Foreign key": {}}, "News": {"Attributes": ["News ID", "News Name"], "Primary key": ["News ID"], "Foreign key": {}}, "Subscription": {"Attributes": ["User ID", "News ID", "Subscription Status", "Creation Time", "Modification Time", "Subscription IP"], "Primary key": ["User ID", "News ID", "Creation Time"], "Foreign key": {"News ID": {"News": "News ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a965", "question": "This is a photo sharing application system. For user management, the system supports users to register and log in using username and password. Users can modify their personal information and avatar, including name, gender, age, occupation, interests, personal profile, etc. For post management, users can publish photo posts with title, description and images, and can view and manage their own posts. For comment management, the system supports users to post and view comments under posts, recording comment time and content, and users can manage their own comments.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Name", "Gender", "Age", "Occupation", "Interests", "Personal profile"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Title", "Description", "Image URL", "User ID"], "Primary key": ["Post ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User post comment": {"Attributes": ["User ID", "Post ID", "Comment time", "Comment content"], "Primary key": ["User ID", "Post ID", "Comment time"], "Foreign key": {"Post ID": {"Post": "Post ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a966", "question": "The teaching management system of a university is as follows: The university has multiple departments, with department information including Department ID and Department Name. Each department has several students, with student information including Student ID, Name, Address, Enrollment Year, Date of Birth, and Department ID. The university also has several professors, with professor information including Professor ID, Name, Office Number, Office Start Time, and Office Duration. The university offers multiple courses, with course information including Course ID, Course Name, Semester, Year, Teaching Professor, Class Day, and Course Duration. Students can register for courses, with registration information including Registration Time, Course ID, and Student ID. The system records student registration information and grade information for management and query purposes.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Address", "Enrollment Year", "Date of Birth", "Department ID"], "Primary key": ["Student ID"], "Foreign key": {}}, "Professor": {"Attributes": ["Professor ID", "Name", "Office Number", "Office Start Time", "Office Duration"], "Primary key": ["Professor ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Name", "Semester", "Year", "Teaching Professor ID", "Class Day", "Course Duration"], "Primary key": ["Course ID"], "Foreign key": {"Teaching Professor ID": {"Professor": "Professor ID"}}}, "Course Registration": {"Attributes": ["Student ID", "Course ID", "Registration Time", "Grade"], "Primary key": ["Student ID", "Course ID", "Registration Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a96d", "question": "The task management module of a genome analysis system is structured as follows: The system includes a task table, task parameter table, task-related organism table, and task-excluded organism table. The task table records detailed information for each task, including Task ID, Task Title, Creation Date, Task Status, End Date, Status Reason, Query Statement, Database, Executable File, Algorithm, Options, and Task Owner. The task parameter table records parameter information for each task, including Parameter ID, Task ID, Parameter Name, and Parameter Value. The task-related organism table records organism information associated with each task, including Organism ID, Task ID, and Organism Name. The task-excluded organism table records organism information excluded for each task, including Organism ID, Task ID, and Organism Name. The system utilizes these tables to manage the creation, execution, and result recording of genome analysis tasks.", "answer": {"Task": {"Attributes": ["Task ID", "Task Title", "Creation Date", "Task Status", "End Date", "Status Reason", "Query Statement", "Database", "Executable File", "Algorithm", "Options", "Task Owner"], "Primary key": ["Task ID"], "Foreign key": {}}, "Parameter": {"Attributes": ["Parameter ID", "Parameter Name"], "Primary key": ["Parameter ID"], "Foreign key": {}}, "Organism": {"Attributes": ["Organism ID", "Organism Name"], "Primary key": ["Organism ID"], "Foreign key": {}}, "Task Parameter": {"Attributes": ["Task ID", "Parameter ID", "Parameter Value"], "Primary key": ["Task ID", "Parameter ID", "Parameter Value"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "Parameter ID": {"Parameter": "Parameter ID"}}}, "Task Related Organism": {"Attributes": ["Task ID", "Organism ID", "Creation Time"], "Primary key": ["Task ID", "Organism ID", "Creation Time"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "Organism ID": {"Organism": "Organism ID"}}}, "Task Excluded Organism": {"Attributes": ["Task ID", "Organism ID", "Creation Time"], "Primary key": ["Task ID", "Organism ID", "Creation Time"], "Foreign key": {"Task ID": {"Task": "Task ID"}, "Organism ID": {"Organism": "Organism ID"}}}}}
{"id": "67552f0a13602ec03b41a973", "question": "The Bank Account and Transaction Management System is used to track and manage user accounts, transactions, and transaction statuses. The system can manage different currency types and record detailed information for each account, including account balance, frozen amount, and the currency used by the account. The system is able to record transactions between accounts, including the initiating account, receiving account, transaction amount, and transaction status. Each transaction has a status (such as success, failure, processing) and detailed error information is recorded when a transaction fails for subsequent analysis.\n\nThe system also includes transaction status management, supporting tracking and updating of transaction statuses to ensure transparency and traceability of the transaction process. The bank account information management function allows querying and updating of account balances and frozen amounts, ensuring the accuracy of account data. Through these functions, the system is able to support complex bank transaction processing flows, including transfer, deposit, withdrawal, and other operations, while supporting transaction status updates and failure reason recording.\n", "answer": {"Currency Type": {"Attributes": ["Currency Code", "Currency Name", "Symbol"], "Primary key": ["Currency Code"], "Foreign key": {}}, "Bank Account": {"Attributes": ["Account Number", "User Number", "User Information", "Account Balance", "Frozen Amount", "Currency Code"], "Primary key": ["Account Number"], "Foreign key": {"Currency Code": {"Currency Type": "Currency Code"}}}, "Account Transfer": {"Attributes": ["Initiating Account Number", "Receiving Account Number", "Initiation Time", "Transaction Amount", "Transaction Status", "Transaction Currency", "Error Information"], "Primary key": ["Initiating Account Number", "Receiving Account Number", "Initiation Time"], "Foreign key": {"Transaction Currency": {"Currency Type": "Currency Code"}, "Initiating Account Number": {"Bank Account": "Account Number"}, "Receiving Account Number": {"Bank Account": "Account Number"}}}}}
{"id": "67552f0a13602ec03b41a976", "question": "The blockchain transaction record and management system is designed to manage and record transaction information on the Tezos blockchain. The system encompasses multiple users, each identified by a User ID, a Username, a Public Key, an Address, and a Creation Time. The system records block information from the blockchain, with each block identified by a Block ID, a Block Hash, a Creation Time, a Block Size, and a Previous Block ID. Transaction information between users is also recorded, with each transaction containing Sender ID, Receiver ID, Transaction Amount, Transaction Time, Block ID, Operation Type, and Operation Content. Every transaction requires the recording of the sender, receiver, amount, time, and associated block information. User ID is utilized to identify the sender and receiver of transactions, while Block ID associates transactions with their respective blocks. The system achieves comprehensive management of user identity, block information, and transaction records through User Table, Block Table, and Transaction Record Table, ensuring the integrity and traceability of blockchain data.", "answer": {"User": {"Attributes": ["ID", "Username", "Creation Time", "Public Key", "Address"], "Primary key": ["ID"], "Foreign key": {}}, "Block": {"Attributes": ["Block ID", "Block Hash", "Creation Time", "Block Size", "Previous Block ID"], "Primary key": ["Block ID"], "Foreign key": {}}, "Transaction Record": {"Attributes": ["Sender ID", "Receiver ID", "Transaction Amount", "Transaction Time", "Block ID", "Operation Type", "Operation Content"], "Primary key": ["Sender ID", "Receiver ID", "Transaction Time", "Block ID"], "Foreign key": {"Block ID": {"Block": "Block ID"}, "Sender ID": {"User": "ID"}, "Receiver ID": {"User": "ID"}}}}}
{"id": "67552f0a13602ec03b41a979", "question": "Business requirements description for an airline reservation system:\nThe system manages multiple customers, with customer information including name, contact information, and credit card number. The system cooperates with multiple airlines, each having an ID, name, and contact information. Each airline operates multiple flights, with flight information including flight number, destination, departure time, arrival time, and the associated airline. Customers can make flight reservations, with reservation information including reservation number, reservation date, reservation time, and number of tickets. Each reservation corresponds to a payment record, which includes payment record ID, payment amount, payment date, and payment method.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Contact Information", "Credit Card Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Airline": {"Attributes": ["Airline ID", "Name", "Contact Information"], "Primary key": ["Airline ID"], "Foreign key": {}}, "Flight": {"Attributes": ["Flight ID", "Flight Number", "Destination", "Departure Time", "Arrival Time", "Airline ID"], "Primary key": ["Flight ID"], "Foreign key": {"Airline ID": {"Airline": "Airline ID"}}}, "Reservation": {"Attributes": ["Reservation ID", "Customer ID", "Flight ID", "Reservation Date", "Reservation Time", "Number of Tickets"], "Primary key": ["Reservation ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}, "Flight ID": {"Flight": "Flight ID"}}}, "Payment Record": {"Attributes": ["Payment ID", "Reservation ID", "Payment Amount", "Payment Date", "Payment Method"], "Primary key": ["Payment ID"], "Foreign key": {"Reservation ID": {"Reservation": "Reservation ID"}}}}}
{"id": "67552f0a13602ec03b41a97c", "question": "The requirements analysis of a certain enterprise management system is as follows:\n1. Employee management: including employee information, job assignment, performance appraisal, salary number, creation time, update time, etc. An employee can participate in multiple projects.\n2. Supplier management: including supplier information, supplier relationship management, creation time, update time, etc. A supplier can supply multiple projects.\n3. Project management: including project information, project progress management, creation time, update time, etc. A project contains multiple employees and can have multiple suppliers.\n4. Attendance management: including employee number, employee clock-in, attendance record, creation time, update time, etc.\n5. Salary management: including salary payment, salary calculation, creation time, update time, etc.", "answer": {"Employee Table": {"Attributes": ["Employee ID", "Employee Information", "Position Allocation", "Salary ID", "Performance Evaluation", "Creation Time", "Update Time"], "Primary key": ["Employee ID"], "Foreign key": {"Salary ID": {"Salary Table": "Salary ID"}}}, "Supplier Table": {"Attributes": ["Supplier ID", "Supplier Information", "Supplier Relationship Management", "Creation Time", "Update Time"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Project Table": {"Attributes": ["Project ID", "Project Information", "Project Progress Management", "Creation Time", "Update Time"], "Primary key": ["Project ID"], "Foreign key": {}}, "Attendance Record Table": {"Attributes": ["Attendance ID", "Employee ID", "Employee Punch In", "Attendance Record", "Creation Time", "Update Time"], "Primary key": ["Attendance ID"], "Foreign key": {"Employee ID": {"Employee Table": "Employee ID"}}}, "Salary Table": {"Attributes": ["Salary ID", "Salary Distribution", "Salary Calculation", "Creation Time", "Update Time"], "Primary key": ["Salary ID"], "Foreign key": {}}, "Employee Project Allocation": {"Attributes": ["Employee ID", "Project ID"], "Primary key": ["Employee ID", "Project ID"], "Foreign key": {"Employee ID": {"Employee Table": "Employee ID"}, "Project ID": {"Project Table": "Project ID"}}}, "Supplier Supply Project": {"Attributes": ["Supplier ID", "Project ID"], "Primary key": ["Supplier ID", "Project ID"], "Foreign key": {"Supplier ID": {"Supplier Table": "Supplier ID"}, "Project ID": {"Project Table": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a982", "question": "The primary function of a school's academic management system is to manage Student, Teacher, Course information, as well as Student course selection status and grade records. The system includes the following functions:\n\nStudent Management: Record basic information about students, including Student Name, Gender, Age, and Phone.\n\nTeacher Management: Record basic information about teachers, including Teacher Name, Gender, Title, and Phone.\n\nCourse Management: ecord basic information about courses, including Course Credits, Class Hours, Teaching Teacher, Class Location, and Number of Students Enrolled.\n\nStudent Course Selection Management : \nRecord the course selection status of students, including Selection Time and Grades. Each student can select multiple courses, and each course can have multiple students enrolled.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Age", "Phone"], "Primary key": ["Student ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Teacher ID", "Name", "Gender", "Title", "Phone"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Credits", "Class Hours", "Teaching Teacher ID", "Class Location", "Number of Students Enrolled"], "Primary key": ["Course ID"], "Foreign key": {"Teaching Teacher ID": {"Teacher": "Teacher ID"}}}, "Student Course Selection": {"Attributes": ["Student ID", "Course ID", "Selection Time", "Grades"], "Primary key": ["Student ID", "Course ID", "Selection Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a98a", "question": "The main functions of a courier tracking system include:\n1. Consumer management: including consumer ID, address information, phone number, etc.\n2. Courier company management: including company name, arrival time, charging price, etc.\n3. Courier tracking: including courier number, recipient ID, recipient name, recipient phone number, etc.\n4. Administrator management: including administrator ID, name, login password, courier user name, etc.\n5. Query function: consumers can query courier information through the system.\n6. Partnership management: the partnership between courier companies and administrators.", "answer": {"Consumer": {"Attributes": ["Consumer ID", "Address Information", "Phone Number"], "Primary key": ["Consumer ID"], "Foreign key": {}}, "Courier Company": {"Attributes": ["Company Name", "Arrival Time", "Charging Price"], "Primary key": ["Company Name"], "Foreign key": {}}, "Courier Tracking": {"Attributes": ["Courier Tracking Number", "Recipient ID", "Recipient Name", "Recipient Phone Number"], "Primary key": ["Courier Tracking Number"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Name", "Login Password", "Courier Username"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Cooperation": {"Attributes": ["Company Name", "Administrator ID"], "Primary key": ["Company Name", "Administrator ID"], "Foreign key": {"Company Name": {"Courier Company": "Company Name"}, "Administrator ID": {"Administrator": "Administrator ID"}}}}}
{"id": "67552f0a13602ec03b41a98d", "question": "The system is a student information and communication management system. In terms of student management, the system supports the entry, query, modification, and deletion of student information, including the student's name, gender, Student ID, major, password, and enrollment time. In terms of post management, the system supports the publishing, querying, modification, and deletion of posts. Each post contains information such as the topic, content, author, and publication date. In terms of interactive functionality, the system also supports students commenting on posts. Each comment includes the comment content, comment time, commenter, and the post being commented on, facilitating communication and discussion among students.\n", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Major", "Password", "Admission Date"], "Primary key": ["Student ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Topic", "Content", "Author", "Publication Date"], "Primary key": ["Post ID"], "Foreign key": {"Author": {"Student": "Student ID"}}}, "Comment": {"Attributes": ["Comment Content", "Comment Time", "Commenter", "Commented Post"], "Primary key": ["Commenter", "Commented Post"], "Foreign key": {"Commented Post": {"Post": "Post ID"}, "Commenter": {"Student": "Student ID"}}}}}
{"id": "67552f0a13602ec03b41a991", "question": "The e-commerce system needs to manage core information such as users, products, and orders. Users can register, log in, and maintain personal profiles (username, name, age, gender, phone number, email, shipping address, password); the system supports order placement functionality, including recording product, quantity, amount, time, and other information, and can track the various states of orders (such as shipped, received, paid, etc.). To achieve product classification and management, the system also needs to maintain basic product information (name, category), inventory, price, and classification; at the same time, administrators can perform comprehensive management and maintenance of user, product, order, and other data.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Phone Number", "Name", "Age", "Email", "Shipping Address"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Category", "Inventory", "Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Ordering User", "Order Time", "Order Status", "Order Amount"], "Primary key": ["Order ID"], "Foreign key": {"Ordering User": {"User": "User ID"}}}, "Order Detail": {"Attributes": ["Order ID", "Product ID", "Purchase Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Order": "Product ID"}, "Order ID": {"Order Detail": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41a99a", "question": "The above picture depicts a hospital management system. The main functions of the system may include:\n\n1. Patient information management: including name, gender, age, contact information, etc.\n2. Diagnosis and treatment management: record the patient's diagnosis and treatment information.\n3. Ward management: manage ward information.\n4. Registration category management: manage different types of registration information.\n5. Drug management: manage drug information.\n6. Drug list management: record the patient's medication information.", "answer": {"patient": {"Attributes": ["patient ID", "name", "gender", "age", "contact information", "patient's treatment information", "ward ID", "registration category ID"], "Primary key": ["patient ID"], "Foreign key": {}}, "ward": {"Attributes": ["ward ID", "ward information"], "Primary key": ["ward ID"], "Foreign key": {}}, "registration category": {"Attributes": ["registration category ID", "registration information"], "Primary key": ["registration category ID"], "Foreign key": {}}, "drug": {"Attributes": ["drug ID", "drug information"], "Primary key": ["drug ID"], "Foreign key": {}}, "prescription": {"Attributes": ["drug ID", "patient ID"], "Primary key": ["drug ID", "patient ID"], "Foreign key": {"patient ID": {"patient": "patient ID"}, "drug ID": {"drug": "drug ID"}}}}}
{"id": "67552f0a13602ec03b41a99f", "question": "The database design for an online food ordering system is as follows: The system includes a user table, an administrator table, a menu table, and an order table. The user table records basic user information, including user ID, username, password, phone number, address, registration time, and last login time. The administrator table records administrator information, including administrator ID, administrator name, password, login IP, and last login time. The menu table records dish information provided by the restaurant, including menu ID, dish name, price, image, and description. The order table records user order information, including user ID, menu ID, order status, creation time, order amount, remarks, and order modification time. The system manages user, administrator, menu, and order information through these tables to enable the food ordering functionality.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone Number", "Address", "Registration Time", "Last Login Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Administrator Name", "Password", "Login IP", "Last Login Time"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Menu": {"Attributes": ["Menu ID", "Dish Name", "Price", "Image", "Description"], "Primary key": ["Menu ID"], "Foreign key": {}}, "Order": {"Attributes": ["User ID", "Menu ID", "Creation Time", "Order Status", "Order Amount", "Remarks", "Order Modification Time"], "Primary key": ["User ID", "Menu ID", "Creation Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Menu ID": {"Menu": "Menu ID"}}}}}
{"id": "67552f0a13602ec03b41a9a2", "question": "This is a student meal card management system for universities, mainly used for managing students' consumption behavior on campus, including scenarios such as dining in cafeterias and shopping in supermarkets, while also handling daily meal card management tasks. For student information management, the system maintains students' basic information, including student ID, name, department, etc., and records students' contact information for easy communication. For meal card recharge and consumption, students can recharge their meal cards at designated locations, and the system updates and displays card balances in real-time, while supporting card payments at locations such as cafeterias and supermarkets. For consumption record management, the system records detailed information for each transaction, including time, amount, location, etc., supports querying historical consumption records, and performs consumption data statistics and analysis.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Contact information", "Department"], "Primary key": ["Student ID"], "Foreign key": {}}, "Meal card": {"Attributes": ["Card ID", "Balance", "Student ID"], "Primary key": ["Card ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}}}, "Consumption record": {"Attributes": ["Time", "Amount", "Location", "Record ID", "Card ID"], "Primary key": ["Record ID"], "Foreign key": {"Card ID": {"Meal card": "Card ID"}}}}}
{"id": "67552f0a13602ec03b41a9aa", "question": "The main functions of a certain tourism information management system include:\n1. User management: including the management of user names, passwords, avatars, nicknames and other information. Users can write guides.\n2. Guide management: including the management of guide titles, categories, tags, content and other information.\n3. Hotel management: including the management of hotel names, introductions, pictures, locations and other information.\n4. Hotel management: including the management of hotel names, introductions, pictures, locations and other information.\n5. Attraction management: including the management of attraction names, introductions, pictures, addresses, opening hours, tips, days and other information.\n6. Route management: including the management of route names, content, tags, introductions and other information.", "answer": {"User Table": {"Attributes": ["Username", "Password", "Profile Picture", "Nickname"], "Primary key": ["Username"], "Foreign key": {}}, "Guide Table": {"Attributes": ["Guide Title", "Category", "Tags", "Content"], "Primary key": ["Guide Title"], "Foreign key": {}}, "Restaurant Table": {"Attributes": ["Restaurant Name", "Introduction", "Image", "Location"], "Primary key": ["Restaurant Name"], "Foreign key": {}}, "Hotel Table": {"Attributes": ["Hotel Name", "Introduction", "Image", "Location"], "Primary key": ["Hotel Name"], "Foreign key": {}}, "Scenic Spot Table": {"Attributes": ["Scenic Spot Name", "Introduction", "Image", "Address", "Opening Hours", "Tips", "Days"], "Primary key": ["Scenic Spot Name"], "Foreign key": {}}, "Route": {"Attributes": ["Route Name", "Content", "Tags", "Introduction"], "Primary key": ["Route Name"], "Foreign key": {}}, "Write Guide Table": {"Attributes": ["Username", "Guide Title"], "Primary key": ["Username", "Guide Title"], "Foreign key": {"Guide Title": {"Guide Table": "Guide Title"}, "Username": {"User Table": "Username"}}}}}
{"id": "67552f0a13602ec03b41a9ad", "question": "Here is the business requirement description for a corporate human resource management system database: it involves multiple modules, including employee management, recruitment management, department management, attendance management, and salary management. The system records department information, which includes Department ID and Department Name; employee information includes Employee ID, Name, and Department ID, and is associated with the department information table through a Foreign key; attendance information records each employee's check-in and check-out times and attendance dates, and is associated with the employee information table; salary information is linked to users, allowing for the querying and modification of employee salaries; recruitment information includes the position applied for, applicant's name, and work experience, documenting information during the recruitment process along with the employee responsible for the interview.\n", "answer": {"Department": {"Attributes": ["Department ID", "Department Name", "Department Manager"], "Primary key": ["Department ID"], "Foreign key": {"Department Manager": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Department ID", "Position", "Salary"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Attendance Records": {"Attributes": ["Employee ID", "Date", "Start Time", "End Time"], "Primary key": ["Employee ID", "Date"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}}}, "Recruitment": {"Attributes": ["Recruitment ID", "Recruitment Position", "Name", "Work Experience", "Contact Information", "Interviewer"], "Primary key": ["Recruitment ID"], "Foreign key": {"Interviewer": {"Employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a9af", "question": "Requirement Description:\n1.Menu Management: Manages restaurant menu information, including Dish ID, Dish Name, Dish Category, and Dish Price.\n2.Table Management: Manages restaurant table information, including Table ID and Seat Number.\n3.Customer Management: Manages customer information, including Customer ID, Customer Name, Gender, and Phone Number.\n4.Employee Management: Manages restaurant employee information, including Employee ID, Employee Name, Age, Gender, and Salary.\n5.Order Management: Manages customer order information, including Order ID, Table ID, and Dining Time.\n6.Service Management: Manages employee service information, including Service Employee ID and Order ID.", "answer": {"Menu": {"Attributes": ["Dish ID", "Dish Name", "Dish Category", "Dish Price"], "Primary key": ["Dish ID"], "Foreign key": {}}, "Table": {"Attributes": ["Table ID", "Seat Number"], "Primary key": ["Table ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Gender", "Phone Number"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Employee Name", "Age", "Gender", "Salary"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Dining Time", "Service Employee ID"], "Primary key": ["Order ID"], "Foreign key": {"Service Employee ID": {"Employee": "Employee ID"}}}, "Dish Table Order": {"Attributes": ["Dish ID", "Order ID", "Table ID"], "Primary key": ["Dish ID", "Order ID", "Table ID"], "Foreign key": {"Dish ID": {"Menu": "Dish ID"}, "Order ID": {"Order": "Order ID"}, "Table ID": {"Table": "Table ID"}}}, "Customer Order": {"Attributes": ["Customer ID", "Order ID", "Order Review"], "Primary key": ["Customer ID", "Order ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a9b1", "question": "Business Requirement Description:\nThe following describes a programming learning and project management system. The main functionalities of the system may include:\n1.User Management: Users can register, log in, and modify personal information. Each user has a User ID, Username, Password, Email, Registration Time, and Personal Information.\n2.Code Management: Users can upload, edit, and view code. The code includes Code ID, Code Content, Upload Time, and Problem ID.\n3.Problem Management: The system provides programming problems, including Problem ID, Problem Name, Problem Description, Difficulty Level, and Creation Time. Users can view and submit answers.\n4.Project Management: Each project includes Project ID, Project Name, Project Description, and Creation Time. Users can create, edit, and view projects.\n5.Sign-In Functionality: Records the sign-in status of each user, including Sign-In ID, User ID, Sign-In Time, and Sign-In Date. Users can sign in daily, and the system records the sign-in information.\nThere is a many-to-many relationship between Users and Codes, Users and Problems, and Users and Projects. The User table has a one-to-many relationship with the Sign-In table.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Registration Time", "Personal Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Code": {"Attributes": ["Code ID", "User ID", "Code Content", "Upload Time", "Problem ID"], "Primary key": ["Code ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Problem ID": {"Problem": "Problem ID"}}}, "Problem": {"Attributes": ["Problem ID", "Problem Name", "Problem Description", "Difficulty Level", "Creation Time"], "Primary key": ["Problem ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Project Description", "Creation Time", "User ID"], "Primary key": ["Project ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Sign-In": {"Attributes": ["Sign-In ID", "User ID", "Sign-In Time", "Sign-In Date"], "Primary key": ["Sign-In ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "User Participation in Project": {"Attributes": ["User ID", "Project ID", "Project Difficulty"], "Primary key": ["User ID", "Project ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0a13602ec03b41a9b6", "question": "Business Requirement Description:\nThis is an online instant messaging service platform system. In terms of role management, the system supports the management of different user roles such as students, teachers, and colleges, each with its corresponding role name and permission settings. In user management, the system records each user\u2019s basic information, including a unique User ID, Username, Password, College, Email, and Registration Time, while also assigning the appropriate role to each user. In book management, the system maintains book information, including Book ID, Book Name, Author, Publisher, Publication Date, and Book Category, and supports users borrowing multiple books. In notification management, the system supports users in publishing and managing notification information. Each notification includes Notification ID, Notification Title, Notification Content, Publisher ID, and Release Date. All users can serve as the publisher of notifications.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Role ID", "College", "Email", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role": "Role ID"}}}, "Role": {"Attributes": ["Role ID", "Role Name", "Permission Description"], "Primary key": ["Role ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Book Name", "Author", "Publisher", "Publication Date", "Book Category"], "Primary key": ["Book ID"], "Foreign key": {}}, "Notification": {"Attributes": ["Notification ID", "Notification Title", "Notification Content", "Publisher ID", "Release Date"], "Primary key": ["Notification ID"], "Foreign key": {"Publisher ID": {"User": "User ID"}}}, "User Establishes Friend Relationship": {"Attributes": ["User ID", "Friend ID", "Creation Time"], "Primary key": ["User ID", "Friend ID"], "Foreign key": {"Friend ID": {"User": "User ID"}, "User ID": {"User": "User ID"}}}, "User Borrows Book": {"Attributes": ["User ID", "Book ID", "Borrow Time", "Return Time"], "Primary key": ["User ID", "Book ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a9b9", "question": "The school's student and teacher information management system database requirements are described below:\n\nThe student and teacher information management system includes student management, teacher management, class management, and department management modules. The system records basic student information, including Student ID, Name, Gender, Grade, Department, Home Address, Date of Birth, and Enrollment Time; class information includes Class ID, Class Name, Grade, Major, and Head Teacher; department information includes Department ID, Department Name, Department Size, and Subordinate Majors. Each class can correspond to multiple students, while each department manages multiple classes and majors to ensure clear internal structure and efficient management within the department. Teacher management includes personal information such as Teacher ID, Name, Gender, Grade, Department, Home Address, Date of Birth, and Entry Time.\n", "answer": {"Students": {"Attributes": ["Student ID", "Name", "Gender", "Grade", "Department", "Home Address", "Date of Birth", "Enrollment Time"], "Primary key": ["Student ID"], "Foreign key": {"Department": {"Departments": "Department ID"}}}, "Classes": {"Attributes": ["Class ID", "Class Name", "Grade", "Major", "Head Teacher", "Department ID", "Class Monitor"], "Primary key": ["Class ID"], "Foreign key": {"Head Teacher": {"Teachers": "Teacher ID"}, "Class Monitor": {"Students": "Student ID"}, "Department ID": {"Departments": "Department ID"}}}, "Departments": {"Attributes": ["Department ID", "Department Name", "Department Size", "Subordinate Majors"], "Primary key": ["Department ID"], "Foreign key": {}}, "Teachers": {"Attributes": ["Teacher ID", "Name", "Gender", "Grade", "Department", "Home Address", "Date of Birth", "Entry Time"], "Primary key": ["Teacher ID"], "Foreign key": {"Department": {"Departments": "Department ID"}}}}}
{"id": "67552f0a13602ec03b41a9bc", "question": "System Description\nDescribes a hospital management system.\n\nMain functions of the system\n1. Doctor management: including basic information of doctors (name, gender, title, date of birth, years of employment, work permit).\n2. Department management: including basic information of departments (department name, personnel, department number, department phone number, department address).\n3. Patient management: including basic information of patients (name, gender, age, contact information, diagnosis description, date of consultation).\n4. Diagnosis and treatment management: including diagnosis and treatment information (case number, diagnosis and treatment content).\n5. Ward management: including basic information of wards (ward number, number of beds, ward level).\n6. Registration category management: including basic information of registration categories (category number, category name).\n7. Drug management: including basic information of drugs (name, quantity, price, barcode).\n8. Drug list management: including basic information of drug lists (drug list number, drug information).", "answer": {"Doctor": {"Attributes": ["Doctor ID", "Name", "Gender", "Title", "Date of Birth", "Years of Employment", "Work Certificate"], "Primary key": ["Doctor ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Staff", "Department Phone", "Department Address"], "Primary key": ["Department ID"], "Foreign key": {}}, "Patient": {"Attributes": ["Patient ID", "Name", "Gender", "Age", "Contact Information", "Diagnosis Description", "Visit Date"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Treatment": {"Attributes": ["Case Number", "Treatment Content", "Patient ID"], "Primary key": ["Case Number"], "Foreign key": {"Patient ID": {"Patient": "Patient ID"}}}, "Ward": {"Attributes": ["Ward Number", "Number of Beds", "Ward Level"], "Primary key": ["Ward Number"], "Foreign key": {}}, "Registration Category": {"Attributes": ["Category ID", "Category Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "Medicine": {"Attributes": ["Medicine ID", "Name", "Quantity", "Price", "Barcode"], "Primary key": ["Medicine ID"], "Foreign key": {}}, "Prescription": {"Attributes": ["Prescription ID", "Medicine Information"], "Primary key": ["Prescription ID"], "Foreign key": {}}, "Prescription Medicine": {"Attributes": ["Prescription ID", "Medicine ID", "Quantity"], "Primary key": ["Prescription ID", "Medicine ID"], "Foreign key": {"Prescription ID": {"Prescription": "Prescription ID"}, "Medicine ID": {"Medicine": "Medicine ID"}}}}}
{"id": "67552f0a13602ec03b41a9bd", "question": "Business Requirement Description:\nThe following describes a Library Management System. The system\u2019s main features might include:\n1.Student Management: Includes adding, modifying, deleting, and querying student information. Each student has a Student ID, Name, Student Number, Grade, Major, Contact Number, and Email.\n2.Administrator Management: Includes adding, modifying, deleting, and querying administrator information. The administrator details include Administrator ID, Name, Job Number, Contact Number, Email, and Position.\n3.Book Management: Includes adding, modifying, deleting, and querying book information. Book details include Book ID, Title, Author, Publisher, Publication Date, Category, Stock Quantity, and Borrowed Quantity.\n4.Book Borrowing Management: Includes adding, modifying, deleting, and querying student borrowing records. The records include Student ID, Borrowed Book ID, Borrow Date, Return Date, and Review Status.\n5.Book Returning Management: Includes adding, modifying, deleting, and querying student returning records. The records include Student ID, Borrowed Book ID, Return Date, and Review Status.\n6.Audit Management: Administrators review book borrowing and returning actions. The audit includes Administrator ID, Book ID, Borrowing Status, Audit Date, and Audit Result.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Student Number", "Grade", "Major", "Contact Number", "Email"], "Primary key": ["Student ID"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Name", "Job Number", "Contact Number", "Email", "Position"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Title", "Author", "Publisher", "Publication Date", "Category", "Stock Quantity", "Borrowed Quantity"], "Primary key": ["Book ID"], "Foreign key": {}}, "Student Borrow Book": {"Attributes": ["Student ID", "Borrowed Book ID", "Borrow Date", "Return Date", "Review Status"], "Primary key": ["Student ID", "Borrowed Book ID"], "Foreign key": {"Borrowed Book ID": {"Book": "Book ID"}, "Student ID": {"Student": "Student ID"}}}, "Student Return Book": {"Attributes": ["Student ID", "Returned Book ID", "Book ID", "Return Date", "Review Status"], "Primary key": ["Student ID", "Returned Book ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Returned Book ID": {"Book": "Book ID"}}}, "Administrator Audit": {"Attributes": ["Administrator ID", "Book ID", "Borrowing Status", "Audit Date", "Audit Result"], "Primary key": ["Administrator ID", "Book ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Administrator ID": {"Administrator": "Administrator ID"}}}}}
{"id": "67552f0a13602ec03b41a9c0", "question": "Business Requirement Description:\nThe following describes a Product Sales Management System. The system\u2019s main features might include:\n1.Employee Management: Includes managing employee usernames, passwords, positions, and contact information.\n2.Product Management: Includes managing product names, IDs, purchase prices, sales prices, and stock quantities.\n3.Supplier Management: Includes managing supplier names, IDs, and phone numbers. Suppliers can provide multiple products.\n4.Sales Management: Includes managing the sales records of product names, IDs, quantities, prices, and sales dates. Each employee can sell multiple products.\n5.Inventory Management: Includes managing product stock quantities and sales prices. Each product has a unique inventory record.", "answer": {"Employee": {"Attributes": ["Employee ID", "Username", "Password", "Position", "Contact Number"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Number", "Purchase Price", "Sales Price", "Stock Quantity", "Supplier ID"], "Primary key": ["Product ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Supplier Number", "Supplier Phone"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Employee Sales": {"Attributes": ["Employee ID", "Product ID", "Sales Quantity", "Sales Price", "Sales Date"], "Primary key": ["Employee ID", "Product ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Product ID": {"Product": "Product ID"}}}, "Inventory": {"Attributes": ["Inventory ID", "Product ID", "Stock Quantity", "Sales Price"], "Primary key": ["Inventory ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0a13602ec03b41a9ca", "question": "The following is a description of database requirements for a medical management system: The system is a medical management system involving functions such as drug management, doctor management, patient management, prescription management, outpatient management, and payment management. The system records drug information including name, specifications, and usage; basic doctor information including doctor ID, name, address, and phone number; patient information includes patient ID, name, address, and phone number; prescription management includes prescription ID, medical orders, date, category, prescribing doctor, and remarks; outpatient management records the consultation information between doctors and patients; payment management records payment information related to prescriptions, including payment amount and discounts. Through these entities and their Attributes, the system can effectively manage the daily operations of the hospital, ensuring smooth processes for patient consultations, drug use, and payments.\n", "answer": {"Drug": {"Attributes": ["Drug ID", "Name", "Specification", "Usage"], "Primary key": ["Drug ID"], "Foreign key": {}}, "Doctor": {"Attributes": ["Doctor ID", "Name", "Address", "Phone Number"], "Primary key": ["Doctor ID"], "Foreign key": {}}, "Patient": {"Attributes": ["Patient ID", "Name", "Address", "Phone Number"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Prescription": {"Attributes": ["Prescription ID", "Medical Orders", "Date", "Category", "Issuing Doctor", "Remarks"], "Primary key": ["Prescription ID"], "Foreign key": {"Issuing Doctor": {"Doctor": "Doctor ID"}}}, "Outpatient Management": {"Attributes": ["Outpatient ID", "Doctor Number", "Outpatient Type", "Opening Time"], "Primary key": ["Outpatient ID"], "Foreign key": {"Doctor Number": {"Doctor": "Doctor ID"}}}, "Patient Outpatient Consultation": {"Attributes": ["Patient Number", "Outpatient Number", "Consultation Time", "Consultation Content"], "Primary key": ["Patient Number", "Outpatient Number", "Consultation Time"], "Foreign key": {"Patient Number": {"Patient": "Patient ID"}, "Outpatient Number": {"Outpatient Management": "Outpatient ID"}}}, "Patient Payment Prescription": {"Attributes": ["Patient Number", "Prescription Number", "Payment Amount", "Discount"], "Primary key": ["Patient Number", "Prescription Number"], "Foreign key": {"Prescription Number": {"Prescription": "Prescription ID"}, "Patient Number": {"Patient": "Patient ID"}}}, "Prescription Contains Drug": {"Attributes": ["Prescription Number", "Drug Number", "Quantity"], "Primary key": ["Prescription Number", "Drug Number"], "Foreign key": {"Prescription Number": {"Prescription": "Prescription ID"}, "Drug Number": {"Drug": "Drug ID"}}}}}
{"id": "67552f0a13602ec03b41a9cb", "question": "The following is a database requirement description for an enterprise resource planning (ERP) system:\n\nThe ERP system covers multiple modules, including financial management, human resource management, production management, sales management, procurement management, inventory management, and project management. Each module has related entities, and these entities are associated through relationships to ensure data consistency and collaboration.\n\nIn the financial management module, the system records accounting information of various company accounts through the general ledger, including Attributes such as general ledger ID, account name, amount, and date. At the same time, accounts receivable records customer receivable information, such as accounts receivable ID, customer ID, amount, and due date. Accounts payable records the amounts the company owes to suppliers, including accounts payable ID, supplier ID, amount, and due date. Cost accounting records expense information of cost centers, including cost accounting ID, cost center, amount, and date.\n\nIn the human resource management module, the employee information table manages basic information of all employees, such as employee ID, name, position, hire date, and salary. Meanwhile, the performance table records employee performance evaluation information, generating performance scores based on employee ID and evaluation date.\n\nThe production management module includes production planning, material requirements planning, and production scheduling. The production plan records detailed information of each production plan, such as plan ID, product name, production quantity, start and end dates. The material requirements plan records the required quantity and date of materials based on production plan requirements. The production scheduling table is used to manage scheduling information during the production process, including scheduling ID, production plan ID, production date, and scheduling status.\n\nIn the sales management module, the sales order table records customer order information, including order ID, customer ID, order date, and total amount. At the same time, customer information records basic customer data, such as customer ID, name, contact information, and address.\n\nIn the procurement management module, the purchase order records supplier order information, including order ID, supplier ID, order date, and total amount. Supplier information manages basic supplier information, such as supplier ID, name, contact information, and address.\n\nThe inventory management module contains material and warehouse information. The material table records basic information of all materials, such as material ID, name, description, and type. Warehouse information manages information of each warehouse, including warehouse ID, warehouse name, and address.\n\nIn the project management module, the project plan table records detailed project information, including project ID, name, planned start and end dates, execution status, and project progress.\n\nAdditionally, the system ensures association and collaboration between modules through relationship tables. For example, the supplier material supply relationship table ensures the many-to-many relationship between suppliers and materials, while the material inventory table records inventory information between materials and warehouses.\n\nThrough these detailed entity and relationship designs, the system ensures data accuracy and effectiveness of each module, supporting efficient operation of various enterprise management functions.\n", "answer": {"General Ledger": {"Attributes": ["General Ledger ID", "Account Name", "Amount", "Date"], "Primary key": ["General Ledger ID"], "Foreign key": {}}, "Accounts Receivable": {"Attributes": ["Accounts Receivable ID", "Customer ID", "Amount", "Due Date"], "Primary key": ["Accounts Receivable ID"], "Foreign key": {}}, "Customer Information": {"Attributes": ["Customer ID", "Customer Name", "Contact Information", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Purchase Order": {"Attributes": ["Order ID", "Supplier ID", "Order Date", "Total Amount"], "Primary key": ["Order ID"], "Foreign key": {"Supplier ID": {"Material": "Supplier ID"}}}, "Supplier Information": {"Attributes": ["Supplier ID", "Supplier Name", "Contact Information", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Material": {"Attributes": ["Material ID", "Material Name", "Material Description", "Material Type"], "Primary key": ["Material ID"], "Foreign key": {}}, "Warehouse Information": {"Attributes": ["Warehouse ID", "Warehouse Name", "Warehouse Address"], "Primary key": ["Warehouse ID"], "Foreign key": {}}, "Project Plan": {"Attributes": ["Project ID", "Project Name", "Planned Start Date", "Planned End Date", "Execution Status", "Project Progress"], "Primary key": ["Project ID"], "Foreign key": {}}, "Supplier Material Supply": {"Attributes": ["Supplier ID", "Material ID"], "Primary key": ["Supplier ID", "Material ID"], "Foreign key": {"Supplier ID": {"Supplier Information": "Supplier ID"}, "Material ID": {"Material": "Material ID"}}}, "Material Inventory": {"Attributes": ["Material ID", "Warehouse ID", "Quantity"], "Primary key": ["Material ID", "Inventory ID"], "Foreign key": {"Inventory ID": {"Warehouse Information": "Warehouse ID"}, "Material ID": {"Material": "Material ID"}}}, "Accounts Payable": {"Attributes": ["Accounts Payable ID", "Supplier ID", "Amount", "Due Date"], "Primary key": ["Accounts Payable ID"], "Foreign key": {}}, "Cost Accounting": {"Attributes": ["Cost Accounting ID", "Cost Center", "Amount", "Date"], "Primary key": ["Cost Accounting ID"], "Foreign key": {}}, "Employee Information": {"Attributes": ["Employee ID", "Name", "Position", "Hire Date", "Salary"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Performance": {"Attributes": ["Employee ID", "Evaluation Date", "Performance Score"], "Primary key": ["Employee ID", "Evaluation Date"], "Foreign key": {"Employee ID": {"Employee Information": "Employee ID"}}}, "Production Plan": {"Attributes": ["Plan ID", "Product Name", "Production Quantity", "Start Date", "End Date"], "Primary key": ["Plan ID"], "Foreign key": {}}, "Material Requirement Plan": {"Attributes": ["Plan ID", "Material ID", "Required Quantity", "Date"], "Primary key": ["Plan ID"], "Foreign key": {"Material ID": {"Warehouse Information": "Material ID"}}}, "Production Scheduling": {"Attributes": ["Scheduling ID", "Production Plan ID", "Production Date", "Scheduling Status"], "Primary key": ["Scheduling ID"], "Foreign key": {"Production Plan ID": {"Production Plan": "Plan ID"}}}, "Sales Order": {"Attributes": ["Order ID", "Customer ID", "Order Date", "Total Amount"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Purchase Order": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a9cf", "question": "This is a store management system. For store information management, the system maintains basic store information, including store ID, store name, address, and phone number. For customer information management, the system records basic customer information, including customer ID, name, address, age, and gender. For consumption record management, the system records customer consumption at stores, including consumption amount and date.\n", "answer": {"Store": {"Attributes": ["Store ID", "Store name", "Address", "Phone"], "Primary key": ["Store ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Address", "Age", "Gender"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Consumption record": {"Attributes": ["Customer ID", "Store ID", "Consumption date", "Consumption amount"], "Primary key": ["Customer ID", "Store ID", "Consumption date"], "Foreign key": {"Store ID": {"Store": "Store ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a9d3", "question": "The database design of an online education platform is as follows: The system includes a Course Table, Chapter Table, Question Type Table, and Question Table. The Course Table records basic course information, including Course ID and Course Name. The Chapter Table records chapter information for each course, including Chapter ID, Chapter Name, Chapter Content, and Associated Course ID. The Question Type Table records classification information of question types, including Question Type ID and Question Type Name. The Question Table records question information for each chapter, including Question ID, Question Content, Question Type ID, Chapter ID, Course ID, Correct Answer, and Alternative Answers. The system uses these tables to manage course, chapter, question type, and question information to enable online learning and examination functionalities.", "answer": {"Course": {"Attributes": ["Course ID", "Course Name"], "Primary key": ["Course ID"], "Foreign key": {}}, "Chapter": {"Attributes": ["Chapter ID", "Chapter Name", "Chapter Content", "Associated Course ID"], "Primary key": ["Chapter ID"], "Foreign key": {"Course ID": {"Course": "Associated Course ID"}}}, "Question Type": {"Attributes": ["Question Type ID", "Question Type Name"], "Primary key": ["Question Type ID"], "Foreign key": {}}, "Question": {"Attributes": ["Question ID", "Question Content", "Question Type ID", "Chapter ID", "Course ID", "Correct Answer", "Alternative Answers"], "Primary key": ["Question ID"], "Foreign key": {"Chapter ID": {"Chapter": "Chapter ID"}, "Course ID": {"Course": "Associated Course ID"}, "Question Type ID": {"Question Type": "Question Type ID"}}}}}
{"id": "67552f0a13602ec03b41a9d4", "question": "The e-commerce system business requirement description: A certain e-commerce system needs to manage users, products, shopping carts, and orders, covering the basic processes of registration, shopping, and order placement. The system requires storing user ID, username, password, and email information during user registration. The system provides multiple products and needs to record the product ID, name, price, inventory quantity, and a simple description for users to browse and select. The shopping cart records the correspondence between users and selected products, including the product quantity. After confirming the purchase, the user can submit an order. The order shall include the creation time, order status (such as pending payment, paid, etc.), and specific product details (product ID, quantity, unit price, etc.) for the system to perform subsequent processing.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Name", "Price", "Stock", "Simple Description"], "Primary key": ["Product ID"], "Foreign key": {}}, "Cart": {"Attributes": ["Cart ID", "Owner User ID", "Creation Time"], "Primary key": ["Cart ID"], "Foreign key": {"Owner User ID": {"User": "User ID"}}}, "Order": {"Attributes": ["Order Number", "Ordering User", "Order Time", "Order Status"], "Primary key": ["Order Number"], "Foreign key": {"Ordering User": {"User": "User ID"}}}, "Cart Details": {"Attributes": ["Cart ID", "Product ID", "Quantity"], "Primary key": ["Cart ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Cart ID": {"Cart": "Cart ID"}}}, "Order Details": {"Attributes": ["Order Number", "Product ID", "Quantity"], "Primary key": ["Order Number", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order Number": {"Order": "Order Number"}}}}}
{"id": "67552f0a13602ec03b41a9d8", "question": "The diagram depicts a vehicle management system. The main functions of the system may include:\n\n1. User management: including adding, modifying, deleting and querying user information.\n2. Vehicle information management: including adding, modifying, deleting and querying vehicle information.\n3. Vehicle maintenance management: including adding, modifying, deleting and querying maintenance records.\n4. Vehicle departure management: including adding, modifying, deleting and querying departure records.\n5. Vehicle maintenance application management: including submitting, reviewing and querying maintenance applications.\n6. Vehicle repair shop management: including adding, modifying, deleting and querying repair shop information.\n7. Announcement information management: including publishing, modifying, deleting and querying announcements.\n8. Token information management: including token generation, verification and expiration processing.\n\nThe corresponding database model is as follows:\n\n1. User information table: including fields such as user ID, user name, password, role, etc.\n\n2. Vehicle information table: including fields such as vehicle ID, vehicle name, vehicle photo, vehicle status, vehicle category, etc.\n3. Vehicle maintenance table: including fields such as maintenance ID, vehicle ID, maintenance time, maintenance details, whether to review, review reply, etc.\n4. Vehicle departure table: including fields such as departure ID, vehicle ID, departure time, departure notes, etc.\n5. Vehicle maintenance application form: including fields such as application ID, vehicle ID, application time, application reason, whether to review, review reply, etc.\n6. Repair shop information table: including fields such as repair shop ID, shop name, contact person, contact number, etc.\n7. Announcement information table: including fields such as announcement ID, title, content, creation time, etc.\n8. Token information table: including fields such as tokenID, token value, creation time, expiration time, etc.", "answer": {"User Information": {"Attributes": ["User ID", "Username", "Password", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Vehicle Information": {"Attributes": ["Vehicle ID", "Vehicle Name", "Vehicle Photo", "Vehicle Status", "Vehicle Category"], "Primary key": ["Vehicle ID"], "Foreign key": {}}, "Vehicle Maintenance": {"Attributes": ["Maintenance ID", "Vehicle ID", "Maintenance Time", "Maintenance Details", "Is Reviewed", "Review Reply"], "Primary key": ["Maintenance ID"], "Foreign key": {"Vehicle ID": {"Vehicle Information": "Vehicle ID"}}}, "Vehicle Trip": {"Attributes": ["Trip ID", "Vehicle ID", "Trip Time", "Trip Remarks"], "Primary key": ["Trip ID"], "Foreign key": {"Vehicle ID": {"Vehicle Information": "Vehicle ID"}}}, "Vehicle Maintenance Application": {"Attributes": ["Application ID", "Vehicle ID", "Application Time", "Application Reason", "Is Reviewed", "Review Reply"], "Primary key": ["Application ID"], "Foreign key": {"Vehicle ID": {"Vehicle Information": "Vehicle ID"}}}, "Repair Shop Information": {"Attributes": ["Repair Shop ID", "Shop Name", "Contact Person", "Contact Number"], "Primary key": ["Repair Shop ID"], "Foreign key": {}}, "Announcement Information": {"Attributes": ["Announcement ID", "Title", "Content", "Creation Time"], "Primary key": ["Announcement ID"], "Foreign key": {}}, "Token Information": {"Attributes": ["Token ID", "Token Value", "Creation Time", "Expiration Time"], "Primary key": ["Token ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9dd", "question": "This is a customer management system. For customer management, the system maintains basic customer information (customer ID, customer name, contact person, etc.), records detailed customer information (address, phone, email, etc.), and manages customer classification information (customer type, credit rating). For product management, the system maintains basic product information (product ID, product name, specifications, etc.), records detailed product information (unit price, inventory quantity, production date, etc.), and manages product classification information (product category, brand, supplier, etc.). For purchase management, the system records order information (order time, order status, etc.), maintains order details (product quantity, unit price, total amount, etc.), and manages payment information (payment method, payment status, payment time, etc.).\n", "answer": {"Customer": {"Attributes": ["Customer name", "Contact person", "Address", "Phone", "Email", "Customer type", "Credit rating", "Customer ID"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product name", "Specifications", "Unit price", "Inventory quantity", "Production date", "Product category", "Brand", "Supplier"], "Primary key": ["Product ID"], "Foreign key": {}}, "Customer product purchase": {"Attributes": ["Customer ID", "Product ID", "Order time", "Order status", "Product quantity", "Unit price", "Total amount", "Payment method", "Payment status", "Payment time"], "Primary key": ["Customer ID", "Product ID", "Order time"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a9e1", "question": "The business requirements description for the school management system: The school management system is used to manage student, teacher, course, and student grade information. The system includes multiple students, each with a Student ID, name, contact information, college, and major. The system also includes multiple teachers, each with an Employee ID, name, contact information, and identification. The system records multiple courses, each with a Course ID, course name, course credit, and Teacher ID, where the Teacher ID is linked to the teacher's Employee ID. The system also records student course enrollments and grades, with each enrollment requiring the recording of the Student ID, Course ID, enrollment time, and grade, where the Student ID is linked to the student's Student ID and the Course ID is linked to the course's Course ID. The system comprehensively manages various school information through the student table, teacher table, course table, and student grade table, ensuring data integrity and traceability.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Contact Information", "College", "Major"], "Primary key": ["Student ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Employee ID", "Name", "Contact Information", "Identification"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Name", "Course Credit", "Teacher ID"], "Primary key": ["Course ID"], "Foreign key": {"Teacher ID": {"Teacher": "Employee ID"}}}, "Student Grade": {"Attributes": ["Student ID", "Course ID", "Enrollment Time", "Grade"], "Primary key": ["Student ID", "Course ID", "Enrollment Time"], "Foreign key": {"Student ID": {"Teacher": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9e5", "question": "The system is designed to manage employee training and includes functionalities for employee information management, training course management, training record management, and department management. Employee information consists of Employee ID, Name, Gender, Position, Department, Contact Number, and Hire Date. Each department is defined by Department ID, Department Name, Department Manager, and Department Phone. Training course information includes Course ID, Course Name, Course Duration, Instructor, and Course Description. Training record information comprises Employee ID, Course ID, Training Date, Training Score, and Pass Status. An employee may enroll in multiple training courses, and a training course may have multiple employees enrolled. Each department has multiple employees, and an employee belongs to only one department. Training courses are centrally organized by the company, and employees may select courses based on their needs. Upon completion of training, the system records the employee's training score and determines the pass status. If an employee fails the training, they may choose to retake the course.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Gender", "Position", "Department", "Contact Number", "Hire Date"], "Primary key": ["Employee ID"], "Foreign key": {"Department": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Manager", "Department Phone"], "Primary key": ["Department ID"], "Foreign key": {"Department Manager": {"Employee": "Employee ID"}}}, "Training Course": {"Attributes": ["Course ID", "Course Name", "Course Duration", "Instructor", "Course Description"], "Primary key": ["Course ID"], "Foreign key": {}}, "Course Participation": {"Attributes": ["Employee ID", "Course ID", "Training Date", "Training Score", "Pass Status"], "Primary key": ["Employee ID", "Course ID", "Training Date"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Course ID": {"Training Course": "Course ID"}}}}}
{"id": "67552f0a13602ec03b41a9e6", "question": "Business Requirement Description:\nThe following describes a Sales Point Management System. The system\u2019s main features might include:\n1.Sales Plan Management: The company creates reasonable sales plans for sales points. The main Attributes include sales plan name, sales plan description, start date, and end date.\n2.Sales Point Management: Each sales point includes a unique sales point ID, name, and address. Each sales point is associated with a specific venue, company, and city.\n3.Device Management: Each device includes a device ID, device name, and device model. Each device is assigned to a corresponding sales point for use.\n4.City Management: Each sales point is associated with a city, which includes a city ID, city name, and province.\n5.Company Management: Each sales point is associated with a company, which includes a company ID, company name, and company address.\n6.Venue Management: Each sales point is associated with a venue, which includes a venue ID, venue name, and venue description.", "answer": {"Sales Plan": {"Attributes": ["Sales Plan ID", "Sales Plan Name", "Sales Plan Description", "Start Date", "End Date", "Sales Point ID", "Company ID"], "Primary key": ["Sales Plan ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}, "Sales Point ID": {"Sales Point": "Sales Point ID"}}}, "Sales Point": {"Attributes": ["Sales Point ID", "Sales Point Name", "Address", "City ID", "Venue ID", "Company ID"], "Primary key": ["Sales Point ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}, "Venue ID": {"Venue": "Venue ID"}, "City ID": {"City": "City ID"}}}, "Device": {"Attributes": ["Device ID", "Device Name", "Device Model", "Sales Point ID"], "Primary key": ["Device ID"], "Foreign key": {"Sales Point ID": {"Sales Point": "Sales Point ID"}}}, "City": {"Attributes": ["City ID", "City Name", "Province"], "Primary key": ["City ID"], "Foreign key": {}}, "Company": {"Attributes": ["Company ID", "Company Name", "Company Address"], "Primary key": ["Company ID"], "Foreign key": {}}, "Venue": {"Attributes": ["Venue ID", "Venue Name", "Venue Description"], "Primary key": ["Venue ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9f3", "question": "A network chat program is designed to implement network communication-related functions, with the following functional requirements:\n\nStore basic user information, including user ID, username, password, email, user IP address, user port number, and the time of the user's last login. This table can be used for user login verification, user information queries, etc.\n\nAdditionally, store the chat records of each user, including message ID, sender ID, receiver ID, message content, and sending time. This table can be used for historical message queries, message records, etc.\n\nFurthermore, it is necessary to store server configuration information, including server ID, server IP address, server port number, maximum client connections, receive buffer size, and the protocol used. This table can be used for server configuration management and dynamic adjustment of server parameters.", "answer": {"User Table": {"Attributes": ["User ID", "Username", "Password", "Email", "User IP Address", "User Port Number", "Time of User's Last Login"], "Primary key": ["User ID"], "Foreign key": {}}, "Chat Record Table": {"Attributes": ["Message ID", "Sender ID", "Receiver ID", "Message Content and Sending Time", "User ID"], "Primary key": ["Message ID"], "Foreign key": {"Sender ID": {"User Table": "User ID"}, "Receiver ID": {"User Table": "User ID"}}}, "Server Configuration Table": {"Attributes": ["Server ID", "Server IP Address", "Server Port Number", "Maximum Client Connections", "Receive Buffer Size", "Protocol Used"], "Primary key": ["Server ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9f6", "question": "Business Requirement Description:\nThe online job recruitment system mainly serves three types of users: job seekers, companies, and administrators. The system provides the following functionalities:\n1.User Information Management: Each registered user has a unique user ID, username, password, email, avatar, nickname, registration time, and role.\n2.Company Information Management: Each company includes basic information such as company ID, company name, company address, company profile, and contact information.\n3.Job Information Management: Companies can post job openings or save matching resumes from users. Users can view detailed job information and submit resumes to the company. Job information includes job ID, title, content, requirements, job category, salary, education level, and work location.\n4.Conversation Management: Users can communicate via conversations. Conversation details include conversation ID, message content, and send time.\n5.Message Board Management: Users can update the message board with new content. The message board includes message ID, message content, and message time.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Avatar", "Nickname", "Registration Time", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Company": {"Attributes": ["Company ID", "Company Name", "Company Address", "Company Profile", "Contact Info"], "Primary key": ["Company ID"], "Foreign key": {}}, "Job Info": {"Attributes": ["Job Info ID", "Title", "Content", "Requirements", "Job Category", "Salary", "Education Level", "Work Location", "Company ID"], "Primary key": ["Job Info ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}}}, "Resume Submission": {"Attributes": ["User ID", "Job Info ID", "Submission Time"], "Primary key": ["User ID", "Job Info ID"], "Foreign key": {"Job Info ID": {"Job Info": "Job Info ID"}, "User ID": {"User": "User ID"}}}, "Resume Save": {"Attributes": ["User ID", "Job Info ID", "Save Time"], "Primary key": ["User ID", "Job Info ID"], "Foreign key": {"Job Info ID": {"Job Info": "Job Info ID"}, "User ID": {"User": "User ID"}}}, "Conversation": {"Attributes": ["Conversation ID", "Sender User ID", "Receiver User ID", "Message Content", "Send Time"], "Primary key": ["Conversation ID"], "Foreign key": {"Sender User ID": {"User": "User ID"}, "Receiver User ID": {"User": "User ID"}}}, "Message Board": {"Attributes": ["Message ID", "User ID", "Message Content", "Message Time"], "Primary key": ["Message ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Company and Job Info": {"Attributes": ["Job Info ID", "Title", "Content", "Requirements", "Job Category", "Salary", "Education Level", "Work Location", "Company ID"], "Primary key": ["Job Info ID", "Company ID"], "Foreign key": {"Company ID": {"Company": "Company ID"}, "Job Info ID": {"Job Info": "Job Info ID"}}}, "User and Conversation": {"Attributes": ["Conversation ID", "Sender User ID", "Receiver User ID", "Message Content", "Send Time"], "Primary key": ["Conversation ID", "Receiver User ID", "Sender User ID"], "Foreign key": {"Sender User ID": {"User": "User ID"}, "Conversation ID": {"Conversation": "Conversation ID"}, "Receiver User ID": {"User": "User ID"}}}, "User and Message": {"Attributes": ["Message ID", "User ID", "Message Content", "Message Time"], "Primary key": ["Message ID", "User ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Message ID": {"Message Board": "Message ID"}}}}}
{"id": "67552f0a13602ec03b41a9fa", "question": "Business requirement description for the forum management system: The forum management system is used to manage users, posts, comments, categories, and notification information. The system contains multiple users, each user has a user ID, username, email, password, avatar link, and registration date. The system records multiple posts, each post has a post ID, title, content, category, posting user, posting time, status, reply count, like count, and favorite count, where the posting user is associated with the user ID of the user, and the category is associated with the category ID of the category. The system also records multiple comments, each comment has a comment ID, comment content, posting user, like count, reply count, and posting time, where the posting user is associated with the user ID of the user. The system supports nested replies for comments, each comment can reply to other comments or posts. The system also contains multiple categories, each category has a category ID and category name, used for categorizing and managing posts. The system records notification information, each notification has a message number and notification content, and is associated with the user, recording the user's read status. The system realizes comprehensive management of various forum information through user table, post table, comment table, category table, and notification information table, ensuring data integrity and traceability.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Email", "Password", "Avatar Link", "Registration Date"], "Primary key": ["User ID"], "Foreign key": {}}, "Post": {"Attributes": ["Post ID", "Title", "Content", "Category Belonging", "Posting User", "Posting Time", "Status", "Reply Count", "Like Count", "Favorite Count"], "Primary key": ["Post ID"], "Foreign key": {"Posting User": {"User": "User ID"}, "Category Belonging": {"Category": "Category ID"}}}, "Comment": {"Attributes": ["Comment ID", "Comment Content", "Posting User", "Like Count", "Reply Count", "Posting Time"], "Primary key": ["Comment ID"], "Foreign key": {"Posting User": {"User": "User ID"}}}, "Category": {"Attributes": ["Category ID", "Category Name"], "Primary key": ["Category ID"], "Foreign key": {}}, "Notification Information": {"Attributes": ["Message Number", "Notification Content"], "Primary key": ["Message Number"], "Foreign key": {}}, "Comment Reply": {"Attributes": ["Comment ID", "Reply Comment ID"], "Primary key": ["Comment ID"], "Foreign key": {"Reply Comment ID": {"Comment": "Comment ID"}, "Comment ID": {"Comment": "Comment ID"}}}, "Comment Post": {"Attributes": ["Comment ID", "Post ID"], "Primary key": ["Comment ID"], "Foreign key": {"Post ID": {"Post": "Post ID"}, "Comment ID": {"Comment": "Comment ID"}}}, "Notification Distribution": {"Attributes": ["Notification Message Number", "User ID", "Read Status"], "Primary key": ["Notification Message Number", "User ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Notification Message Number": {"Notification Information": "Message Number"}}}}}
{"id": "67552f0a13602ec03b41a9ff", "question": "The functional requirements of a personal financial management system are as follows: The system shall manage user basic information, including the user's name, gender, age, contact information, address, email, login name, password, user type, status, security question, and answer. The system shall also record user income and expense information, including the user, name of income or expense, amount, type, remark, time, and status, with each record linked to a specific user and type. The system shall manage type information, including the type name and status. Additionally, the system shall publish announcement information, including the title, content, publication time, and status. Users shall be able to query and manage their financial information based on their needs and view announcements published by the system.", "answer": {"User": {"Attributes": ["User ID", "Name", "Gender", "Age", "Contact Information", "Address", "Email", "Login Name", "Password", "User Type", "Status", "Security Question", "Answer"], "Primary key": ["User ID"], "Foreign key": {}}, "Announcement": {"Attributes": ["Announcement ID", "Title", "Content", "Publication Time", "Status"], "Primary key": ["Announcement ID"], "Foreign key": {}}, "Type": {"Attributes": ["Type ID", "Type Name", "Status"], "Primary key": ["Type ID"], "Foreign key": {}}, "Income Expense Record": {"Attributes": ["Record ID", "Record Name", "User ID", "Type ID", "Amount", "Time", "Remark", "Status"], "Primary key": ["Record ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Type ID": {"Type": "Type ID"}}}}}
{"id": "67552f0a13602ec03b41aa02", "question": "This is an online food ordering system. For dish management, the system supports maintaining basic dish information (dish ID, dish name, price, etc.), records detailed dish information (ingredients, taste, recommendation index, etc.), and manages dish classification information (cuisine type, special features, recommendation status, etc.). For user management, the system maintains basic user information (user ID, username, password, etc.), records detailed user information (name, phone, address, etc.), and manages user account information (registration time, account status, etc.). For order management, the system records order information (order ID, order time, order status, etc.), maintains order details (dish ID, dish quantity, unit price, total amount, etc.), and manages delivery information (delivery address, delivery time, delivery person, etc.). For shopping cart management, the system records shopping cart information (user ID, dish ID, quantity, etc.), and maintains shopping cart status (add time, settlement status, etc.).\n", "answer": {"Dish": {"Attributes": ["Dish ID", "Dish name", "Price", "Ingredients", "Taste", "Recommendation index", "Cuisine type", "Special features", "Recommended"], "Primary key": ["Dish ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Username", "Password", "Name", "Phone", "Address", "Registration time", "Account status"], "Primary key": ["User ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order time", "Order status", "Delivery address", "Delivery time", "Delivery person"], "Primary key": ["Order ID"], "Foreign key": {}}, "Shopping cart": {"Attributes": ["Dish ID", "User ID", "Quantity", "Add time", "Settlement status"], "Primary key": ["Dish ID", "User ID", "Add time"], "Foreign key": {"User ID": {"User": "User ID"}, "Dish ID": {"Dish": "Dish ID"}}}, "Order detail": {"Attributes": ["Dish ID", "Dish quantity", "Unit price", "Total amount", "Order ID"], "Primary key": ["Dish ID", "Order ID"], "Foreign key": {"Dish ID": {"Dish": "Dish ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0a13602ec03b41aa03", "question": "This is a comprehensive system. For user management, the system maintains basic user information including user ID, username, password, phone number, and WeChat OpenID, while recording detailed user information including name, QQ number, email, registration time, and account status. For news management, the system manages news information including news ID, title, content, publication time, and read count, maintains news categories including category ID, category name, and sort order, and manages news status including draft, published, and unpublished states. For video management, the system maintains basic video information including video ID, title, description, cover image, and duration, records detailed video information including directory structure, course count, total duration, and price, manages video status (unpublished, published, unpublished) and video categories (category ID, category name, parent category). For instructor management, the system maintains instructor information including instructor ID, name, avatar, title, and introduction, records instructor qualifications including years of teaching experience, professional field, and teaching achievements, and manages associated videos, i.e., the list of courses taught. The system also includes collection management functionality, recording collection records (user ID, video ID, collection time) and collection status (validity). For order management, the system maintains order information (user ID, video ID, order time), records payment information (payment amount, payment method, payment status, payment time) and order status (pending payment, paid, cancelled). For learning records, the system manages purchase records (user ID, video ID, purchase time, expiration time) and learning progress (viewing duration, last viewing time, completion status).\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone number", "WeChat OpenID", "Name", "QQ number", "Email", "Registration time", "Account status"], "Primary key": ["User ID"], "Foreign key": {}}, "News": {"Attributes": ["News ID", "Title", "Content", "Publication time", "Read count", "News status", "Category ID"], "Primary key": ["News ID"], "Foreign key": {"Category ID": {"News category": "Category ID"}}}, "Video category assignment": {"Attributes": ["Video ID", "Category ID"], "Primary key": ["Video ID", "Category ID"], "Foreign key": {"Category ID": {"Video category": "Category ID"}, "Video ID": {"Video": "Video ID"}}}, "News category assignment": {"Attributes": ["Category ID", "News ID"], "Primary key": ["Category ID", "News ID"], "Foreign key": {"Category ID": {"News category": "Category ID"}, "News ID": {"News": "News ID"}}}, "News category": {"Attributes": ["Category ID", "Category name", "Sort order"], "Primary key": ["Category ID"], "Foreign key": {}}, "Video": {"Attributes": ["Video ID", "Title", "Description", "Cover image URL", "Market", "Directory structure", "Course count", "Total duration", "Price", "Video status", "Category ID"], "Primary key": ["Video ID"], "Foreign key": {"Category ID": {"Video category": "Category ID"}}}, "Instructor": {"Attributes": ["Instructor ID", "Name", "Avatar", "Title", "Introduction", "Teaching experience", "Professional field", "Teaching achievements"], "Primary key": ["Instructor ID"], "Foreign key": {}}, "Video category": {"Attributes": ["Category ID", "Category name", "Parent category ID"], "Primary key": ["Category ID"], "Foreign key": {"Parent category ID": {"Video category": "Category ID"}}}, "Instructor course": {"Attributes": ["Instructor ID", "Video ID"], "Primary key": ["Instructor ID", "Video ID"], "Foreign key": {"Video ID": {"Video": "Video ID"}, "Instructor ID": {"Instructor": "Instructor ID"}}}, "User collection": {"Attributes": ["User ID", "Video ID", "Collection time", "Valid status"], "Primary key": ["User ID", "Video ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Video ID": {"Video": "Video ID"}}}, "User video order": {"Attributes": ["User ID", "Video ID", "Order time", "Payment amount", "Payment method", "Payment status", "Payment time", "Order status"], "Primary key": ["User ID", "Video ID", "Order time"], "Foreign key": {"User ID": {"User": "User ID"}, "Video ID": {"Video": "Video ID"}}}, "User learning record": {"Attributes": ["User ID", "Video ID", "Purchase time", "Expiration time", "Viewing duration", "Last viewing time", "Completion status"], "Primary key": ["User ID", "Video ID", "Purchase time"], "Foreign key": {"User ID": {"User": "User ID"}, "Video ID": {"Video": "Video ID"}}}}}
{"id": "67552f0a13602ec03b41aa04", "question": "The business requirements for a property rental management system are described as follows: The system shall manage user basic information, including User ID, Username, Password, Email, Phone Number, Role, and the creation and update timestamps of the account. The system shall also manage property information, including Property ID, Property Title, Description, Location, Area, Rent, Images, Status, and the creation and update timestamps of the property, with each property record associated with a specific owner. Additionally, the system shall record rental transaction information, including the leased property, tenant, lease start date, end date, total rent, transaction status, and the creation and update timestamps of the transaction.", "answer": {"User": {"Attributes": ["User ID", "Password", "Email", "Phone Number", "Role", "Account Creation Time", "Account Update Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Property": {"Attributes": ["Property ID", "Property Title", "Property Description", "Property Location", "Property Area", "Rent", "Images", "Status", "Property Creation Time", "Property Update Time", "Owner"], "Primary key": ["Property ID"], "Foreign key": {"Owner": {"User": "User ID"}}}, "Rental Transaction Record": {"Attributes": ["User ID", "Property ID", "Lease Start Date", "Lease End Date", "Total Rent", "Transaction Status", "Transaction Creation Time", "Transaction Update Time"], "Primary key": ["User ID", "Property ID", "Lease Start Date"], "Foreign key": {"Property ID": {"Property": "Property ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41aa07", "question": "The database is a software project management system primarily designed to manage the development process of software projects, task assignments for team members, code submissions, and project version management. The key tables involved in the system include: User Table, Project Table, Project Version Table, Task Table, Code Submission Table. Below is a brief description of the database function.\n\n1.User Management:   \nRecords the basic information of each user in the system, who may be a project manager, developer, or tester.  \nFields: User ID, User Name, Password, Email, Phone, Role, Registration Time, Last Login Time\n\n2.Project Management: \nRecords the basic information of software development projects, each project has a responsible person and manages its current status.  \nFields: Project ID, Project Name, Project Introduction, Responsible Person ID, Creation Time, Project Status\n\n3. Project Version Management:\nRecords the version information of each project, including version number, release date, etc. Each version is associated with a specific project.  \nFields: Version ID, Project ID, Version Name, Release Date, Version Description, Is Stable Version\n\n4. Task Management:\nRecords the assignment and progress of tasks within the project; tasks are the work that developers need to complete. Each task has a start time, end time, and task status.  \nFields: Project ID, Assigned To User ID, Task Name, Task Status, Start Time, End Time, Task Description\n\n5. Code Submission Management:  \nRecords the code information submitted by developers to the project, including submission time, submission description, code path, etc.  \nFields: User ID, Project ID, Submission Time, Submission Description, Code Path", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Email", "Phone", "Role", "Registration Time", "Last Login Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Name", "Introduction", "Responsible Person ID", "Creation Time", "Project Status"], "Primary key": ["Project ID"], "Foreign key": {}}, "Project Version": {"Attributes": ["Version ID", "Project ID", "Version Name", "Release Date", "Version Description", "Is Stable Version"], "Primary key": ["Version ID", "Project ID"], "Foreign key": {}}, "Code Submission": {"Attributes": ["User ID", "Project ID", "Submission Time", "Submission Description", "Code Path"], "Primary key": ["User ID", "Project ID", "Submission Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Project ID": {"Project": "Project ID"}}}, "Task": {"Attributes": ["Project ID", "Assigned To User ID", "Task Name", "Task Status", "Start Time", "End Time", "Task Description"], "Primary key": ["Project ID", "Assigned To User ID", "Start Time"], "Foreign key": {"Assigned To User ID": {"User": "User ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aa0c", "question": "This is an online education platform's course management system. For course management, the system supports maintaining basic course information (course ID, course name, course description, etc.), records detailed course information (number of lessons, total duration, difficulty level, etc.), and manages course classification information (course category, target audience, recommendation status, etc.). For chapter management, the system maintains basic chapter information (chapter ID, chapter name, chapter description, etc.), records detailed chapter information (video URL, course materials, duration, etc.), and manages chapter sequence (previous/next chapters, chapter hierarchy, etc.). For instructor management, the system maintains basic instructor information (instructor ID, name, avatar, etc.), records detailed instructor information (teaching experience, professional field, personal profile, etc.), and manages instructor courses (teaching list, ratings, student feedback, etc.). For student management, the system maintains basic student information, including basic data (student ID, name, avatar, gender, age, contact information) and account information (registration time, account status, membership level, points), while tracking learning progress, including course progress (selected courses, current learning chapter, last learning time), viewing records (viewing duration per lesson, number of views, completion status) and learning statistics (total learning duration, course completion rate).", "answer": {"Course": {"Attributes": ["Course ID", "Course name", "Course description", "Number of lessons", "Total duration", "Difficulty level", "Course category", "Target audience", "Recommended"], "Primary key": ["Course ID"], "Foreign key": {}}, "Chapter": {"Attributes": ["Chapter ID", "Chapter name", "Chapter description", "Video URL", "Duration", "Parent chapter ID", "Previous chapter ID", "Next chapter ID"], "Primary key": ["Chapter ID"], "Foreign key": {"Parent chapter ID": {"Chapter": "Chapter ID"}, "Previous chapter ID": {"Chapter": "Chapter ID"}, "Next chapter ID": {"Chapter": "Chapter ID"}}}, "Instructor": {"Attributes": ["Instructor ID", "Name", "Avatar", "Teaching experience", "Professional field", "Personal profile"], "Primary key": ["Instructor ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Name", "Avatar", "Gender", "Age", "Contact information", "Registration time", "Account status", "Membership level", "Points"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course material": {"Attributes": ["Material ID", "Material name", "Material URL", "Course ID"], "Primary key": ["Material ID"], "Foreign key": {"Course ID": {"Course": "Course ID"}}}, "Instructor teaching": {"Attributes": ["Instructor ID", "Course ID", "Rating", "Student feedback"], "Primary key": ["Instructor ID", "Course ID"], "Foreign key": {"Instructor ID": {"Instructor": "Instructor ID"}, "Course ID": {"Course": "Course ID"}}}, "Viewing record": {"Attributes": ["Student ID", "Chapter ID", "Viewing duration", "View count", "Completion status"], "Primary key": ["Student ID", "Chapter ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Chapter ID": {"Chapter": "Chapter ID"}}}}}
{"id": "67552f0b13602ec03b41aa10", "question": "This is a comprehensive system management platform. For user management, the system maintains basic user information including user ID, username, password, phone number, and email, while recording user status information including account status, last login time, and login IP. For system management, the platform maintains basic system information including system ID, system name, system domain, and access time, records system configuration information including callback URL, secret key, and token validity period, and manages system status including whether enabled and whether approval is required. For login records, the system maintains basic login information including user ID, system ID, login time, and login IP, records session information including token and expiration time, and manages login status including validity and logout time. For system authorization relationships, the platform maintains authorization information including user ID, system ID, and authorization time, and manages authorization status including whether effective and expiration time.\n", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone number", "Email", "Account status", "Last login time", "Login IP"], "Primary key": ["User ID"], "Foreign key": {}}, "System": {"Attributes": ["System ID", "System name", "System domain", "Access time", "Callback URL", "Secret key", "Token validity period", "Enabled", "Approval required"], "Primary key": ["System ID"], "Foreign key": {}}, "Login record": {"Attributes": ["User ID", "System ID", "Login time", "Login IP", "Token", "Expiration time", "Valid", "Logout time"], "Primary key": ["User ID", "System ID"], "Foreign key": {"User ID": {"User": "User ID"}, "System ID": {"System": "System ID"}}}, "System authorization": {"Attributes": ["User ID", "System ID", "Authorization time", "Effective", "Expiration time"], "Primary key": ["User ID", "System ID"], "Foreign key": {"User ID": {"User": "User ID"}, "System ID": {"System": "System ID"}}}}}
{"id": "67552f0b13602ec03b41aa15", "question": "The student dormitory management system business requirement description:\nA student dormitory management system includes functions such as user management, building management, dormitory management, and student management. The system has users with different roles, such as administrators, dormitory managers, students, and maintenance staff. Each user has a unique ID, username, and password. Building information includes building ID, name, type, location, description, and the responsible dormitory manager. Dormitory information includes dormitory ID, name, type, number of beds, belonging building, supporting facilities, and the responsible dormitory manager. Student information includes student ID, name, gender, belonging dormitory, class, etc. Students can submit various applications (bed change, repair, absence registration, check-out application, etc.). The system records application ID, application type, applicant student ID, application content, application time, application status, and administrator's processing opinion. Administrators can process these applications, review and approve or reject them. Dormitory managers can handle students' leave and repair applications, and manage absence registration. Maintenance staff can handle repair applications and record maintenance information. Maintenance records include maintenance record ID, dormitory ID, fault description, repair time, maintenance staff ID, maintenance situation, and completion time. The system also includes announcement management for administrators to publish and manage announcement information. Announcement information includes announcement ID, announcement title, announcement content, release time, and the ID of the administrator who released the announcement.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Building": {"Attributes": ["Building ID", "Name", "Type", "Location", "Description", "Dormitory Supervisor ID"], "Primary key": ["Building ID"], "Foreign key": {"Dormitory Supervisor ID": {"User": "User ID"}}}, "Dormitory": {"Attributes": ["Dormitory ID", "Name", "Type", "Number of Beds", "Building ID", "Facilities"], "Primary key": ["Dormitory ID"], "Foreign key": {"Building ID": {"Building": "Building ID"}}}, "Student": {"Attributes": ["Student ID", "Name", "Gender", "Dormitory ID", "Class"], "Primary key": ["Student ID"], "Foreign key": {"Dormitory ID": {"Dormitory": "Dormitory ID"}}}, "Application": {"Attributes": ["Application ID", "Application Type", "Student ID", "Application Content", "Application Time", "Processing Status", "Processing Opinion"], "Primary key": ["Application ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}}}, "Announcement": {"Attributes": ["Announcement ID", "Title", "Content", "Release Time", "Administrator ID"], "Primary key": ["Announcement ID"], "Foreign key": {"Administrator ID": {"User": "User ID"}}}, "Maintenance Record": {"Attributes": ["Maintenance ID", "Dormitory ID", "Fault Description", "Report Time", "Maintenance Staff ID", "Maintenance Status", "Completion Time"], "Primary key": ["Maintenance ID"], "Foreign key": {"Dormitory ID": {"Dormitory": "Dormitory ID"}, "Maintenance Staff ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa18", "question": "The mini-program shall allow users to register or log in via WeChat authorization. The system shall store each user's account information (such as account number, password, nickname, bio, etc.) and related authorization information, enabling users to view some attraction information after logging in, including attraction name, pictures, reference prices, and text descriptions. Users shall be able to bookmark attractions they are interested in and submit reservation information, recording the reservation time, ticket purchase time, number of tickets purchased, etc., for later viewing or modification. Users shall also be able to submit brief comments for attractions, including comment time, comment content, comment status, etc., which shall be displayed on the front-end only after back-end review.", "answer": {"User": {"Attributes": ["Account", "Password", "Nickname", "Bio"], "Primary key": ["Account"], "Foreign key": {}}, "Attraction": {"Attributes": ["Attraction ID", "Name", "Picture URL", "Reference Price", "Text Description"], "Primary key": ["Attraction ID"], "Foreign key": {}}, "User Bookmark": {"Attributes": ["Account", "Attraction ID"], "Primary key": ["Account", "Attraction ID"], "Foreign key": {"Attraction ID": {"Attraction": "Attraction ID"}, "Account": {"User": "Account"}}}, "Ticket Reservation Record": {"Attributes": ["User Account", "Attraction ID", "Ticket Purchase Time", "Reservation Time", "Number of Tickets Purchased"], "Primary key": ["User Account", "Attraction ID"], "Foreign key": {"Attraction ID": {"Attraction": "Attraction ID"}, "User Account": {"User": "Account"}}}, "User Comment": {"Attributes": ["User Account", "Attraction ID", "Comment Time", "Comment Content", "Comment Status"], "Primary key": ["User Account", "Attraction ID"], "Foreign key": {"Attraction ID": {"Attraction": "Attraction ID"}, "User Account": {"User": "Account"}}}}}
{"id": "67552f0b13602ec03b41aa19", "question": "Course Selection System primarily targets students and teachers, providing functions such as course selection, viewing course information, managing student and teacher information, etc. The specific requirements are as follows:\n1.Student Information Management: Students need to register and log into the system, providing their student ID, name, gender, department, age, enrollment date, major, and login password. Students can view their personal information.\n2.Teacher Information Management: Teachers need to register and log into the system, providing their employee ID, name, gender, password, title, department, and course ID. Teachers can view their personal information.\n3.Course Information Management: The system should contain a course table, recording course ID, course name, prerequisite course ID, and credits. Both students and teachers can view course information.\n4.Course Selection: After logging in, students can select courses, recording their student ID, course ID, and grades. Students can view their course selection status.\n5.Teaching Information Management: Teachers can record the course ID they teach, the teaching location, and the class time. Students can view the teaching information of teachers.\n6.Student Timetable Management: The system should record the student\u2019s ID, selected course IDs, class times, and locations to generate a student timetable. Students can view their timetable.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Department", "Age", "Enrollment Date", "Major", "Password"], "Primary key": ["Student ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Employee ID", "Name", "Gender", "Password", "Title", "Department", "Course ID"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Name", "Prerequisite Course ID", "Credits"], "Primary key": ["Course ID"], "Foreign key": {}}, "Student Course Selection": {"Attributes": ["Student ID", "Course ID", "Grade"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}, "Teacher Teaching": {"Attributes": ["Employee ID", "Course ID", "Class Location", "Class Time"], "Primary key": ["Employee ID", "Course ID"], "Foreign key": {"Employee ID": {"Teacher": "Employee ID"}, "Course ID": {"Course": "Course ID"}}}, "Timetable": {"Attributes": ["Student ID", "Course ID", "Class Time", "Class Location"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0b13602ec03b41aa1b", "question": "The school information management system shall record and manage common operations for administrators, teachers, and regular users respectively. The system shall store basic information of users with different identities, and allow administrators or teachers to maintain dormitories, courses, and grades. It shall also enable regular users to view their own grades and submit dormitory repair requests.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Class", "Gender", "Age", "Belonging Dormitory"], "Primary key": ["Student ID"], "Foreign key": {"Belonging Dormitory": {"Dormitory": "Dormitory ID"}}}, "Super User": {"Attributes": ["User ID", "Name", "User Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Leader", "Class Time"], "Primary key": ["Course ID"], "Foreign key": {"Course Leader": {"Super User": "User ID"}}}, "Dormitory": {"Attributes": ["Dormitory ID", "Dormitory Location"], "Primary key": ["Dormitory ID"], "Foreign key": {}}, "Student Course Selection": {"Attributes": ["Student ID", "Course ID", "Grade"], "Primary key": ["Student ID", "Course ID"], "Foreign key": {"Course ID": {"Course": "Course ID"}, "Student ID": {"Student": "Student ID"}}}}}
{"id": "67552f0b13602ec03b41aa20", "question": "Business requirements description of catering management system: The system is used to manage the daily operation of the restaurant, covering functions such as user management, dish management, order processing, and sales statistics. The system contains multiple users, each of whom has a username, password, and role, and the roles are divided into customers and administrators. The system records multiple dishes, each of which has the name, price, category, and availability status, and supports the management of dishes on and off the shelves. Customers can place orders, and each order has an order ID, order user ID, order time, total order amount, and order status. The order status includes pending, in progress, and completed. Each order contains multiple dishes, and the order details record the order ID, dish ID, and quantity to ensure the integrity of the order information. The system also supports sales statistics, recording the total sales quantity and total sales by date and dish, which is convenient for restaurants to conduct business analysis. Through user tables, dish tables, order tables, order details tables, and statistical tables, the system realizes comprehensive management of restaurant operations and ensures the accuracy and traceability of data.", "answer": {"user": {"Attributes": ["username", "password", "role"], "Primary key": ["username"], "Foreign key": {}}, "dish": {"Attributes": ["dish name", "price", "category", "availability"], "Primary key": ["dish name"], "Foreign key": {}}, "order": {"Attributes": ["order ID", "ordering user ID", "order time", "total order amount", "order status"], "Primary key": ["order ID"], "Foreign key": {"ordering user ID": {"user": "username"}}}, "order detail": {"Attributes": ["order detail ID", "order ID", "dish ID", "quantity"], "Primary key": ["order detail ID"], "Foreign key": {"dish ID": {"dish": "dish name"}, "order ID": {"order": "order ID"}}}}}
{"id": "67552f0b13602ec03b41aa2b", "question": "The system shall manage user basic information, including username, password, WeChat Open ID, name, QQ number, email, remarks, and the creation and update time of the account. The system shall also manage attraction information, including attraction name, details, reference price, images, era, type, region, and the creation and update time of the attraction. Users shall be able to book attraction tickets, with order information including user, attraction, booking date, ticket quantity, remarks, order status, and the creation and update time of the order. Users shall be able to comment on attractions, with comment information including user, attraction, comment content, review status, and the creation and update time of the comment. Users shall be able to leave messages on the platform, with message information including user, message content, and the creation and update time of the message. Additionally, users shall be able to favorite attractions of interest, with favorite information including user, attraction, and the creation and update time of the favorite.", "answer": {"user": {"Attributes": ["user id", "user name", "password", "wechat open id", "full name", "qq number", "email", "remarks", "account creation time", "account update time"], "Primary key": ["user id"], "Foreign key": {}}, "attraction": {"Attributes": ["attraction id", "attraction name", "details", "reference price", "images", "era", "type", "region", "attraction creation time", "update time"], "Primary key": ["attraction id"], "Foreign key": {}}, "message": {"Attributes": ["message id", "user id", "message content", "message creation time", "update time"], "Primary key": ["message id"], "Foreign key": {"user id": {"user": "user id"}}}, "ticket booking": {"Attributes": ["user id", "attraction id", "booking date", "ticket quantity", "remarks", "order status", "order creation time", "order update time"], "Primary key": ["user id", "attraction id", "order update time"], "Foreign key": {"attraction id": {"attraction": "attraction id"}, "user id": {"user": "user id"}}}, "attraction comment": {"Attributes": ["user id", "attraction id", "comment creation time", "comment update time", "comment content", "review status"], "Primary key": ["user id", "attraction id", "comment creation time"], "Foreign key": {"attraction id": {"attraction": "attraction id"}, "user id": {"user": "user id"}}}, "attraction favorite": {"Attributes": ["user id", "attraction id", "favorite creation time", "favorite update time"], "Primary key": ["user id", "attraction id", "favorite creation time"], "Foreign key": {"attraction id": {"attraction": "attraction id"}, "user id": {"user": "user id"}}}}}
{"id": "67552f0b13602ec03b41aa32", "question": "The main functional requirements for the hospital appointment registration system are described as follows:\nDesign and implement a hospital appointment registration management system.\nThe system shall support displaying hospital department information (including department name, introduction, department doctors, etc.).\nThe system shall support querying doctor scheduling information (providing doctor name, department, consultation time, remaining appointments, etc.).\nThe system shall support online appointment registration (users can select doctor and appointment time), canceling appointments, and querying historical records (including registered and canceled appointment records).\nThe system shall support user information management (storing username, password, contact information, etc.), system management (administrators can maintain doctor information, department information, appointment records, etc.).\nThe system shall support statistical analysis (perform statistics and analysis on appointment status to provide decision support for the hospital). \nThe system shall ensure data security (adopt various measures to protect user information and data security).\nThe system shall optimize hospital service efficiency and user experience.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Doctor": {"Attributes": ["Doctor ID", "Doctor Name", "Title", "Department ID"], "Primary key": ["Doctor ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name", "Introduction"], "Primary key": ["Department ID"], "Foreign key": {}}, "Appointment": {"Attributes": ["Appointment ID", "User ID", "Doctor ID", "Appointment Time", "Status"], "Primary key": ["Appointment ID"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "User ID": {"User": "User ID"}}}, "Schedule": {"Attributes": ["Schedule ID", "Doctor ID", "Date", "Time Slot", "Remaining Appointments"], "Primary key": ["Schedule ID"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}}}, "History": {"Attributes": ["History ID", "User ID", "Appointment ID", "Operation Type", "Operation Time"], "Primary key": ["History ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Appointment ID": {"Appointment": "Appointment ID"}}}}}
{"id": "67552f0b13602ec03b41aa36", "question": "The teaching management system of a university is as follows: The university comprises multiple departments, with department information including Department ID and Department Name. Each department has several students, with student information including Student ID, Name, Address, Enrollment Year, and Date of Birth. The university also has several professors, with professor information including Professor ID, Name, Office Number, and Office Start Time. The university offers multiple courses, with course information including Course ID, Course Name, Semester, Year, Teaching Professor, Class Day, and Course Duration. Students can register for courses, with registration information including Registration Time, Course ID, and Student ID.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Address", "Enrollment Year", "Date of Birth", "Belonging Department"], "Primary key": ["Student ID"], "Foreign key": {"Belonging Department": {"Department": "Department ID"}}}, "Professor": {"Attributes": ["Professor ID", "Name", "Office Number", "Office Start Time", "Belonging Department"], "Primary key": ["Professor ID"], "Foreign key": {"Belonging Department": {"Department": "Department ID"}}}, "Course": {"Attributes": ["Course ID", "Name", "Semester", "Year", "Teaching Professor ID", "Class Day", "Course Duration", "Course Belonging Department"], "Primary key": ["Course ID"], "Foreign key": {"Teaching Professor ID": {"Professor": "Professor ID"}, "Course Belonging Department": {"Department": "Department ID"}}}, "Course Registration": {"Attributes": ["Student ID", "Course ID", "Registration Time"], "Primary key": ["Student ID", "Course ID", "Registration Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name"], "Primary key": ["Department ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aa39", "question": "Business Requirements Description for the company's Business Management System: The company has multiple business modules, each containing various business entities. The information of each business entity includes type, module code, name, creation time, update time, and creator user ID. Each business entity can be associated with multiple attachments, and the attachment information includes attachment ID, file name, file size, file path, creation time, file status, and uploader user ID. The system needs to record the detailed information of the attachments and the business entities and module codes they belong to, to facilitate the management and tracking of various business entities and their related attachments across different business modules. Additionally, the system manages user information, including user ID, name, department, role, contact details, etc., to facilitate the association of the creation, update, and upload operations of business entities and attachments.\n", "answer": {"Module": {"Attributes": ["Module Code", "Name", "Creation Time", "Update Time"], "Primary key": ["Module Code"], "Foreign key": {}}, "Business Entity": {"Attributes": ["Entity ID", "Type", "Module Code", "Name", "Creation Time", "Update Time", "Creator User ID"], "Primary key": ["Entity ID"], "Foreign key": {"Creator User ID": {"User": "User ID"}, "Module Code": {"Module": "Module Code"}}}, "Attachment": {"Attributes": ["Attachment ID", "File Name", "File Size", "File Path", "Creation Time", "File Status", "Uploader User ID", "Belonging Entity ID"], "Primary key": ["Attachment ID"], "Foreign key": {"Uploader User ID": {"User": "User ID"}, "Belonging Entity ID": {"Business Entity": "Entity ID"}}}, "User": {"Attributes": ["User ID", "Name", "Department", "Role", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aa3a", "question": "The functional requirements for a virtual maze game platform are as follows: The system shall manage user basic information, including User ID, Username, Password, Email, and Registration Date. The platform shall provide maze creation functionality, with maze information including Maze ID, Name, Description, Creation Date, and Last Modified Date. Each maze may contain multiple maps, with map information including Map ID, Associated Maze ID, Name, Map Data (e.g., in JSON format), Creation Date, and Last Modified Date. The system shall also support skybox management, with skybox information including Skybox ID, Name, File Path, Description, Creation Date, and Last Modified Date. Users can participate in maze games, with game information including User ID, Maze ID, User Score, Game Start Time, Game End Time, Game Status (e.g., In Progress, Completed, Failed), and Game Creation and Last Modified Date.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Registration Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Maze": {"Attributes": ["Maze ID", "Name", "Description", "Creation Date", "Last Modified Date"], "Primary key": ["Maze ID"], "Foreign key": {}}, "Map": {"Attributes": ["Map ID", "Associated Maze ID", "Name", "Map Data", "Creation Date", "Last Modified Date"], "Primary key": ["Map ID"], "Foreign key": {"Associated Maze ID": {"Maze": "Maze ID"}}}, "Skybox": {"Attributes": ["Skybox ID", "Name", "File Path", "Description", "Creation Date", "Last Modified Date"], "Primary key": ["Skybox ID"], "Foreign key": {}}, "User Game Record": {"Attributes": ["User ID", "Maze ID", "Game Creation Time", "User Score", "Game Start Time", "Game End Time", "Game Status", "Game Last Modified Time"], "Primary key": ["User ID", "Maze ID", "Game Creation Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Maze ID": {"Maze": "Maze ID"}}}}}
{"id": "67552f0b13602ec03b41aa3d", "question": "This is a space exploration mission management system. For probe management, the system records basic probe information including probe ID, name, weight, launch date, and service life, maintains the scientific instrument configuration carried by the probe, and tracks the probe's operational status and remaining fuel.\n\nFor celestial target management, the system records basic information about observed celestial bodies, including celestial body ID, name, type (planet/asteroid/comet etc.), maintains orbital parameters and physical characteristics, while recording existing observational data (observation time, observation data, observation results, observation accuracy, etc.) and research value.\n\nFor scientific instrument management, the system records basic instrument information including instrument ID, name, weight, power consumption, accuracy, etc., and maintains instrument operating parameters and calibration data.\n\nFor exploration mission management, the system records the probe's flight trajectory and target celestial bodies, records mission execution status and scientific data acquisition status, while maintaining mission priority and resource allocation.\n", "answer": {"Probe": {"Attributes": ["Probe ID", "Name", "Weight", "Launch date", "Service life", "Operational status", "Remaining fuel"], "Primary key": ["Probe ID"], "Foreign key": {}}, "Scientific instrument": {"Attributes": ["Instrument ID", "Name", "Weight", "Power consumption", "Accuracy", "Operating parameters", "Calibration data"], "Primary key": ["Instrument ID"], "Foreign key": {}}, "Probe instrument configuration": {"Attributes": ["Probe ID", "Instrument ID"], "Primary key": ["Probe ID", "Instrument ID"], "Foreign key": {"Probe ID": {"Probe": "Probe ID"}, "Instrument ID": {"Scientific instrument": "Instrument ID"}}}, "Celestial body": {"Attributes": ["Celestial ID", "Name", "Type", "Orbital parameters", "Physical characteristics", "Research value"], "Primary key": ["Celestial ID"], "Foreign key": {}}, "Observation record": {"Attributes": ["Record ID", "Observation time", "Observation data", "Observation results", "Observation accuracy", "Celestial ID"], "Primary key": ["Record ID"], "Foreign key": {"Celestial ID": {"Celestial body": "Celestial ID"}}}, "Exploration mission": {"Attributes": ["Probe ID", "Celestial ID", "Probe flight trajectory", "Execution status", "Scientific data acquisition status", "Mission priority", "Mission resource allocation"], "Primary key": ["Probe ID", "Celestial ID"], "Foreign key": {"Celestial ID": {"Celestial body": "Celestial ID"}, "Probe ID": {"Probe": "Probe ID"}}}}}
{"id": "67552f0b13602ec03b41aa41", "question": "Functional description of news management system\n\nAdministrator functions:\n1. News article entry: Administrators can enter new news articles, including title, content, author, release time, etc.\n2. News article management: Administrators can edit, delete, classify, label, and other operations on published news articles.\n3. Website information settings: Administrators can set basic information of the website, such as name, logo, copyright information, etc.\n4. Member information management: Administrators can manage the website's member information, including adding, deleting, modifying, and checking member information.\n5. Advertising management: Administrators can publish, edit, and delete advertisements.\n6. Message management: Administrators can view, reply to, and delete users' messages under news articles.\n\nUser functions:\n1. Registration and login: Users can access the website through the registration and login functions.\n2. News information query: Users can query and view news information on the website.\n3. Post comments: Users can post comments under news articles.\n4. Search function: Users can search for specific news articles through the search function.", "answer": {"Administrator": {"Attributes": ["Administrator ID", "Username", "Password", "Email", "Creation Time", "Update Time"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "News Article": {"Attributes": ["Article ID", "Article Title", "Article Content", "Article Author", "Publish Time", "Article Category", "Article Tags", "Creation Time", "Update Time"], "Primary key": ["Article ID"], "Foreign key": {}}, "Website Information": {"Attributes": ["Website ID", "Website Name", "Website Logo", "Copyright Information", "Creation Time", "Update Time"], "Primary key": ["Website ID"], "Foreign key": {}}, "Member": {"Attributes": ["Member ID", "Username", "Password", "Email", "Registration Time", "Update Time"], "Primary key": ["Member ID"], "Foreign key": {}}, "Advertisement": {"Attributes": ["Advertisement ID", "Advertisement Title", "Advertisement Content", "Advertisement Publish Time", "Creation Time", "Update Time"], "Primary key": ["Advertisement ID"], "Foreign key": {}}, "Message": {"Attributes": ["Message ID", "User ID", "Article ID", "Message Content", "Message Time", "Reply Content", "Reply Time"], "Primary key": ["Message ID"], "Foreign key": {"Article ID": {"News Article": "Article ID"}, "User ID": {"Member": "Member ID"}}}, "Administrator Publish News": {"Attributes": ["Administrator ID", "Article ID"], "Primary key": ["Administrator ID", "Article ID"], "Foreign key": {"Article ID": {"News Article": "Article ID"}, "Administrator ID": {"Schema 0": "Administrator ID"}}}, "Administrator Manage Advertisement": {"Attributes": ["Administrator ID", "Advertisement ID"], "Primary key": ["Administrator ID", "Advertisement ID"], "Foreign key": {"Advertisement ID": {"Advertisement": "Advertisement ID"}, "Administrator ID": {"Schema 0": "Administrator ID"}}}, "User Message": {"Attributes": ["Member ID", "Message ID"], "Primary key": ["Member ID", "Message ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Message ID": {"Message": "Message ID"}}}}}
{"id": "67552f0b13602ec03b41aa43", "question": "The course design management system of a university shall record and manage student information, task assignments, simulation modules, simulation results, and thesis submissions. Student information includes Student ID, Name, Class, and Major. Task information includes Task ID, Task Title, Task Description, Task Start Date, Task End Date, and Task Location. Simulation module information includes Module ID, Module Name, Module Type (e.g., PCM, DPCM, \u0394M), Module Description, and Module Code. Simulation result information includes Student ID, Module ID, Simulation Result Data, Result Analysis, and Simulation Date. Thesis information includes Thesis ID, Student ID, Thesis Title, Thesis Content, and Submission Date. The system shall support students in viewing tasks, conducting simulation experiments, submitting simulation results, and writing and submitting theses. The system shall generate reports based on tasks and simulation results and record the completion status of students' course designs.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Class", "Major"], "Primary key": ["Student ID"], "Foreign key": {}}, "Task": {"Attributes": ["Task ID", "Task Title", "Task Description", "Task Start Date", "Task End Date", "Task Location"], "Primary key": ["Task ID"], "Foreign key": {}}, "Simulation Module": {"Attributes": ["Module ID", "Module Name", "Module Type", "Module Description", "Module Code"], "Primary key": ["Module ID"], "Foreign key": {}}, "Thesis": {"Attributes": ["Thesis ID", "Student ID", "Thesis Title", "Thesis Content", "Submission Date"], "Primary key": ["Thesis ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}}}, "Student Simulation Experiment Result": {"Attributes": ["Student ID", "Module ID", "Simulation Date", "Simulation Result Data", "Result Analysis"], "Primary key": ["Student ID", "Module ID", "Simulation Date"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Module ID": {"Simulation Module": "Module ID"}}}}}
{"id": "67552f0b13602ec03b41aa44", "question": "Shopping Cart System Requirements: Based on the example of JD.com\u2019s shopping cart, the system needs to implement the following functions:\n1.User Functions: Users can log in via multiple methods. Each user has a unique user ID, username, password, contact information, and registration time.\n2.Product Management: Each product includes a product ID, product name, price, stock quantity, and product description.\n3.Order Management: Each order includes an order ID, user ID, product ID, quantity, total price, order time, and order status.\n4.Purchase Management: Each user can add multiple products to the shopping cart and place multiple orders. Each order can contain multiple products.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Registration Time", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Price", "Stock Quantity", "Product Description"], "Primary key": ["Product ID"], "Foreign key": {}}, "Add to Cart": {"Attributes": ["User ID", "Product ID", "Quantity", "Is Selected"], "Primary key": ["User ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}, "Order": {"Attributes": ["Order ID", "User ID", "Product ID", "Quantity", "Total Price", "Order Time", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}}}, "User and Order": {"Attributes": ["Order ID", "User ID", "Product ID", "Quantity", "Total Price", "Order Time", "Order Status"], "Primary key": ["Order ID", "User ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}, "Order ID": {"Order": "Order ID"}}}, "Order and Product": {"Attributes": ["Order ID", "User ID", "Product ID", "Quantity", "Total Price", "Order Time", "Order Status"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "User ID": {"User": "User ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa45", "question": "\"The system is designed for a waste collection platform, requiring management of both user and merchant accounts, and allowing users to register and log in via mobile phone number or WeChat. Users can post recycling requests, including details of the waste items such as type, quantity, location, and time. Merchants can then accept and fulfill these orders. The system must record the status and payment information of each order and provide a rating function for users to grade and comment on the service after order completion. Administrators can access all user and merchant information and perform necessary maintenance operations.\"", "answer": {"User": {"Attributes": ["User ID", "WeChat ID", "Phone Number", "User Name", "Password"], "Primary key": ["User ID"], "Foreign key": {}}, "Merchant": {"Attributes": ["Merchant Account", "Password", "Address", "Contact Information"], "Primary key": ["Merchant Account"], "Foreign key": {}}, "Recycling Request": {"Attributes": ["Order ID", "Request User", "Request Time", "Recycling Location", "Recycling Time"], "Primary key": ["Order ID"], "Foreign key": {"Request User": {"User": "User ID"}}}, "Transaction Order": {"Attributes": ["Order ID", "Order Status", "Payment Amount", "Payment Method", "Accepting Merchant"], "Primary key": ["Order ID"], "Foreign key": {"Accepting Merchant": {"Merchant": "Merchant Account"}, "Order ID": {"Recycling Request": "Order ID"}}}, "Order Review": {"Attributes": ["Order ID", "Rating", "Review Content"], "Primary key": ["Order ID"], "Foreign key": {"Order ID": {"Recycling Request": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aa49", "question": "Device Management System Requirements: This is a device management system. In terms of device management, the system supports the input of device information via a mobile application, including product name, device model, person in charge, group, type, usage location, department, IP address, and device images. A unique QR code is generated for each device, enabling a one-device-one-code system, and records the creation and update times of each device. The system also supports the printing and pasting of QR code labels. In terms of user management, the system maintains each user\u2019s basic information, including a unique user ID, name, role, contact information, and account status. For device inventory management, the system supports exporting in-use device information, including device ID, inventory person ID, inventory time, and device location. In terms of device maintenance, staff can submit maintenance requests, including device ID, requester ID, maintenance time, maintenance content, handling status, handling personnel, handling time, and remarks. After submitting a maintenance request, the system assigns maintenance personnel to handle it and records the maintenance details, including device ID, maintenance personnel ID, maintenance time, maintenance content, maintenance results, user satisfaction, and remarks. The system also regularly updates and records the status information for each device, including current status, last update time, and remarks, to ensure the accuracy and efficiency of device management.", "answer": {"Device": {"Attributes": ["Device ID", "Product Name", "Device Model", "Person in Charge", "Group", "Type", "Usage Location", "Department", "IP Address", "Device Image", "QR Code", "Creation Time", "Update Time"], "Primary key": ["Device ID"], "Foreign key": {}}, "Device Maintenance": {"Attributes": ["Device ID", "Maintenance Person ID", "Maintenance Time", "Maintenance Content", "Maintenance Result", "User Satisfaction", "Remarks"], "Primary key": ["Device ID", "Maintenance Person ID", "Maintenance Time"], "Foreign key": {"Maintenance Person ID": {"User": "User ID"}, "Device ID": {"Device": "Device ID"}}}, "Device Repair Request": {"Attributes": ["Requester ID", "Device ID", "Request Time", "Request Content", "Handling Status", "Handling Personnel", "Handling Time", "Remarks"], "Primary key": ["Requester ID", "Device ID", "Request Time"], "Foreign key": {"Requester ID": {"User": "User ID"}, "Device ID": {"Device": "Device ID"}}}, "Device Status": {"Attributes": ["Device ID", "Current Status", "Last Update", "Remarks"], "Primary key": ["Device ID"], "Foreign key": {"Device ID": {"Device": "Device ID"}}}, "Device Inventory": {"Attributes": ["Inventory Person ID", "Device ID", "Inventory Time", "Device Location"], "Primary key": ["Inventory Person ID", "Device ID", "Inventory Time"], "Foreign key": {"Inventory Person ID": {"User": "User ID"}, "Device ID": {"Device": "Device ID"}}}, "User": {"Attributes": ["User ID", "Name", "Role", "Contact Information", "Account Status"], "Primary key": ["User ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aa4e", "question": "\"The Research Grant Management System requires storing and managing basic information for all research projects, including Project ID, Project Name, Budget, and Remaining Funds. The system should be able to record changes in the use of funds for each project, with transaction records including Record ID, Record Time, Transaction Amount, Purpose Description, Transaction Operator, and Project ID, to track budget adjustments or internal allocations and provide warnings for potential overspending or idle funds. By analyzing historical funding data for projects, the system also needs to support simple analytical functionalities, assisting managers in multidimensional querying of fund usage or generating basic reports. Users have User IDs and names, and should be distinguished in the system as roles with different permissions (such as administrator or general user), performing data entry and approval operations based on the projects they are responsible for.\"", "answer": {"User": {"Attributes": ["User ID", "Name", "Permission"], "Primary key": ["User ID"], "Foreign key": {}}, "Project": {"Attributes": ["Project ID", "Project Name", "Budget", "Remaining Funds"], "Primary key": ["Project ID"], "Foreign key": {}}, "Accounting Record": {"Attributes": ["Record ID", "Record Time", "Transaction Amount", "Purpose Description", "Transaction Operator", "Project ID"], "Primary key": ["Record ID"], "Foreign key": {"Transaction Operator": {"User": "User ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aa4f", "question": "Business Requirements Description:\nThe medical waste management system based on J2EE technology is designed to manage the entire lifecycle of medical waste, from generation, collection, transportation, and treatment to supervision. The system needs to support the following functionality:\n1.Medical Waste Management:\nMedical waste producers in departments must classify and package the waste.The information recorded includes waste type, weight, generation time, collection time, and current status.Each piece of medical waste corresponds to a specific medical institution and department and is collected by designated personnel. A unique traceability code is generated for each waste item, which includes the traceability code number and generation time.\n2.Medical Institution and Department Management:Each department belongs to a specific medical institution, which includes medical institution ID, name, address, and contact information.The department includes department name and description.\n3.Management Personnel and Vehicles:\nThe management personnel of medical institutions will have Attributes such as name, role, and contact information.The medical institution\u2019s vehicles will have vehicle ID, license plate number, model, and capacity.\n4.Medical Waste Inbound and Outbound:\nThe inbound process of medical waste requires the collector to weigh and count the waste. The actual weight and quantity must be confirmed by a designated person before completing the inbound process.\nInformation to be recorded includes batch number, expected quantity, actual quantity, expected weight, actual weight, inbound time, collector ID, and confirmer ID.\nFor temporary storage and outbound transportation, the confirmer verifies the outbound quantity and weight, and the waste is then transported by designated personnel using medical institution vehicles. Information to be recorded includes batch number, outbound quantity, outbound weight, outbound time, transporter ID, and confirmer ID.\nTransportation vehicles will need to record the start time, end time, and recipient of the waste.\nWith these features, the system can manage medical waste from generation to final disposal, ensuring data integrity and traceability.", "answer": {"Medical Institution": {"Attributes": ["Medical Institution ID", "Medical Institution Name", "Address", "Contact Information"], "Primary key": ["Medical Institution ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Medical Institution ID", "Department Name", "Description"], "Primary key": ["Department ID"], "Foreign key": {"Medical Institution ID": {"Medical Institution": "Medical Institution ID"}}}, "Medical Waste": {"Attributes": ["Medical Waste ID", "Medical Institution ID", "Department ID", "Waste Type", "Weight", "Generation Time", "Collector ID", "Collection Time", "Traceability Code ID", "Current Status"], "Primary key": ["Medical Waste ID"], "Foreign key": {"Collector ID": {"schema 7": "Personnel ID"}, "Department ID": {"Department": "Department ID"}, "Medical Institution ID": {"Medical Institution": "Medical Institution ID"}, "Traceability Code ID": {"Traceability Code": "Traceability Code ID"}}}, "Traceability Code": {"Attributes": ["Traceability Code ID", "Traceability Code Number", "Generation Time", "Medical Waste ID"], "Primary key": ["Traceability Code ID"], "Foreign key": {"Medical Waste ID": {"Medical Waste": "Medical Waste ID"}}}, "Medical Waste Inbound": {"Attributes": ["Medical Institution ID", "Medical Waste ID", "Batch Number", "Expected Quantity", "Actual Quantity", "Expected Weight", "Actual Weight", "Inbound Time", "Collector ID", "Confirmer ID"], "Primary key": ["Medical Institution ID", "Medical Waste ID"], "Foreign key": {"Collector ID": {"schema 7": "Personnel ID"}, "Confirmer ID": {"schema 7": "Personnel ID"}, "Medical Institution ID": {"Medical Institution": "Medical Institution ID"}, "Medical Waste ID": {"Medical Waste": "Medical Waste ID"}}}, "Medical Waste Temporary Storage Outbound": {"Attributes": ["Medical Institution ID", "Medical Waste ID", "Batch Number", "Outbound Quantity", "Outbound Weight", "Outbound Time", "Transporter ID", "Confirmer ID"], "Primary key": ["Medical Waste ID", "Medical Institution ID"], "Foreign key": {"Confirmer ID": {"schema 7": "Personnel ID"}, "Medical Institution ID": {"Medical Institution": "Medical Institution ID"}, "Medical Waste ID": {"Medical Waste": "Medical Waste ID"}, "Transporter ID": {"schema 7": "Personnel ID"}}}, "Transport Vehicle": {"Attributes": ["Medical Waste ID", "Vehicle ID", "Transport Start Time", "Transport End Time", "Receiver"], "Primary key": ["Medical Waste ID", "Vehicle ID"], "Foreign key": {"Collector ID": {"schema 7": "Personnel ID"}, "Medical Waste ID": {"Medical Waste": "Medical Waste ID"}}}}}
{"id": "67552f0b13602ec03b41aa51", "question": "The Equipment Management System shall include the following tables:\n\nUser Information Table: Storing User Name, Login Password, Registered Mobile Number, Role Permissions, etc.\nAsset Information Table: Storing Equipment Name, Equipment ID, Equipment Model, Equipment Status, Calibration Date, Calibration Validity, Calibration Results, Equipment Location, Owning Department, Person in Charge, and Remarks, etc.\nStatus Log Information Table: Recording Equipment ID, Borrower, Borrowing Time, Borrowed Equipment Photo, IOU Photo, Recipient, Receiving Area, Receiving Time, Received Equipment Photo, Returner, Return Time, Returned Equipment Photo, Data Monitoring, and Remarks, etc.\nAccount Activity Log Table: Recording Equipment ID, Borrowing Account, Receiving Account, Returning Account, and Remarks, etc.\n", "answer": {"User Information": {"Attributes": ["User ID", "Username", "Login Password", "Registered Phone Number", "Role Permissions"], "Primary key": ["User ID"], "Foreign key": {}}, "Asset Information": {"Attributes": ["Device ID", "Device Name", "Device Number", "Device Model", "Device Status", "Calibration Date", "Calibration Validity", "Calibration Result", "Device Location", "Department", "Responsible Person", "Remarks"], "Primary key": ["Device ID"], "Foreign key": {}}, "Status Log Information": {"Attributes": ["Log ID", "Device Number", "Borrow Receiver", "Borrow Time", "Borrow Device Photo", "IOU Photo", "Receiver", "Receiving Area", "Receiving Time", "Receiving Device Photo", "Return Person", "Return Time", "Return Device Photo", "Data Monitoring", "Remarks"], "Primary key": ["Log ID"], "Foreign key": {"Device Number": {"Asset Information": "Device Number"}}}, "Account Dynamic Log Information": {"Attributes": ["Dynamic Log ID", "Device Number", "Borrow Operation Account", "Receive Operation Account", "Return Operation Account", "Remarks"], "Primary key": ["Dynamic Log ID"], "Foreign key": {"Device Number": {"Asset Information": "Device Number"}}}, "User Asset Relationship": {"Attributes": ["User ID", "Device Number"], "Primary key": ["User ID", "Device Number"], "Foreign key": {"User ID": {"User Information": "User ID"}, "Device Number": {"Asset Information": "Device ID"}}}, "Device Number, Log ID": {"Attributes": ["Device Number", "Log ID"], "Primary key": ["Device Number", "Log ID"], "Foreign key": {"Log ID": {"Status Log Information": "Log ID"}, "Device Number": {"Asset Information": "Device ID"}}}, "Asset Account Dynamic Log Relationship": {"Attributes": ["Device Number", "Dynamic Log ID"], "Primary key": ["Device Number", "Dynamic Log ID"], "Foreign key": {"Dynamic Log ID": {"Account Dynamic Log Information": "Dynamic Log ID"}, "Device Number": {"Asset Information": "Device ID"}}}}}
{"id": "67552f0b13602ec03b41aa52", "question": "The system is a student attendance management system. In student management, the system maintains basic information for each student, including Student ID, name, age, phone number, game preference, and gender. In course management, the system records detailed information for each course, including Course ID, course name, location, credits, and instructor ID. In instructor management, the system maintains basic information for instructors, including Instructor ID, name, gender, title, and work duration. In attendance management, the system automatically records student attendance check-ins, including Student ID, Course ID, check-in time, attendance status, class time, and remarks, achieving automated attendance management. In leave management, the system tracks and records student leave requests, including Student ID, Course ID, leave time, class time, leave reason, and leave status, facilitating comprehensive management of student attendance by the school. The system achieves automated recording of student attendance, standardized management of leave requests, and unified maintenance of course and instructor information through the collaborative functioning of these functional modules.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Age", "Phone", "Game Preference", "Gender"], "Primary key": ["Student ID"], "Foreign key": {}}, "Course": {"Attributes": ["Course ID", "Course Name", "Location", "Credits", "Instructor ID"], "Primary key": ["Course ID"], "Foreign key": {"Instructor ID": {"Instructor": "Instructor ID"}}}, "Instructor": {"Attributes": ["Instructor ID", "Name", "Gender", "Title", "Work Duration"], "Primary key": ["Instructor ID"], "Foreign key": {}}, "Attendance Record": {"Attributes": ["Student ID", "Course ID", "Check-in Time", "Attendance Status", "Class Time", "Remarks"], "Primary key": ["Student ID", "Course ID", "Check-in Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}, "Leave Record": {"Attributes": ["Student ID", "Course ID", "Class Time", "Leave Reason", "Leave Status", "Leave Time"], "Primary key": ["Student ID", "Course ID", "Leave Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Course ID": {"Course": "Course ID"}}}}}
{"id": "67552f0b13602ec03b41aa58", "question": "The campus access control management system functions as follows. For personnel information management, the system maintains basic information for all personnel, with each person having a unique ID, name, personnel type (teacher, student, third-party personnel, visitor), contact phone number, email and other basic information. Each unit has a unique unit ID, unit name, unit type (secondary unit, third-party unit) and other information. Administrators in the system each have a unique administrator ID, name and management role. For health monitoring, the system records health information for each person, including temperature, symptoms, health code color and other data, while tracking personnel travel trajectory information. For visitor management, each visitor appointment record has a unique appointment ID and records visitor ID, visited personnel ID, scheduled entry time, scheduled exit time and appointment status (pending review, approved, rejected) and other information. Visitors initiate appointments by scanning WeChat QR codes, and visited personnel review and confirm through the WeChat platform. For access management, the system records all personnel access records, including access record ID, personnel ID, entry time, exit time and access control device ID information. Each access control device has a unique device ID, device name, device location and device status (normal, fault) information. The system uses dynamic QR codes and facial recognition technology for identity verification, and employs HTTPS encryption for secure data transmission.", "answer": {"Personnel": {"Attributes": ["Personnel ID", "Name", "Type", "Contact phone", "Email", "Health status", "Entry permission", "Unit ID"], "Primary key": ["Personnel ID"], "Foreign key": {"Unit ID": {"Unit": "Unit ID"}}}, "Unit": {"Attributes": ["Unit ID", "Unit name", "Unit type", "Administrator ID"], "Primary key": ["Unit ID"], "Foreign key": {"Administrator ID": {"Administrator": "Administrator ID"}}}, "Health record entry": {"Attributes": ["Record ID", "Personnel ID"], "Primary key": ["Record ID", "Personnel ID"], "Foreign key": {"Personnel ID": {"Personnel": "Personnel ID"}, "Record ID": {"Health record": "Appointment ID"}}}, "Access personnel": {"Attributes": ["Personnel ID", "Record ID"], "Primary key": ["Personnel ID", "Record ID"], "Foreign key": {"Personnel ID": {"Personnel": "Personnel ID"}, "Record ID": {"Access record": "Record ID"}}}, "Access point entry": {"Attributes": ["Access control ID", "Record ID"], "Primary key": ["Access control ID", "Record ID"], "Foreign key": {"Record ID": {"Access record": "Record ID"}, "Access control ID": {"Access control": "Access control ID"}}}, "Administrator": {"Attributes": ["Administrator ID", "Name", "Management role"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Appointment": {"Attributes": ["Appointment ID", "Scheduled entry time", "Scheduled exit time", "Appointment status", "Visitor name", "Visited personnel ID"], "Primary key": ["Appointment ID"], "Foreign key": {"Visited personnel ID": {"Personnel": "Personnel ID"}}}, "Health record": {"Attributes": ["Appointment ID", "Scheduled entry time", "Scheduled exit time", "Appointment status", "Personnel ID"], "Primary key": ["Appointment ID"], "Foreign key": {"Personnel ID": {"Personnel": "Personnel ID"}}}, "Access record": {"Attributes": ["Record ID", "Entry time", "Exit time", "Personnel ID", "Access control ID"], "Primary key": ["Record ID"], "Foreign key": {"Personnel ID": {"Personnel": "Personnel ID"}, "Access control ID": {"Access control": "Access control ID"}}}, "Access control": {"Attributes": ["Access control ID", "Access control name", "Access control location", "Access control status"], "Primary key": ["Access control ID"], "Foreign key": {}}, "Affiliation": {"Attributes": ["Personnel ID", "Unit ID"], "Primary key": ["Personnel ID", "Unit ID"], "Foreign key": {"Personnel ID": {"Personnel": "Personnel ID"}, "Unit ID": {"Unit": "Unit ID"}}}, "Management": {"Attributes": ["Administrator ID", "Unit ID"], "Primary key": ["Administrator ID", "Unit ID"], "Foreign key": {"Unit ID": {"Unit": "Unit ID"}, "Administrator ID": {"Administrator": "Administrator ID"}}}, "Visit appointment": {"Attributes": ["Appointment ID", "Visited personnel ID"], "Primary key": ["Appointment ID", "Visited personnel ID"], "Foreign key": {"Visited personnel ID": {"Personnel": "Personnel ID"}, "Appointment ID": {"Appointment": "Appointment ID"}}}}}
{"id": "67552f0b13602ec03b41aa59", "question": "Requirements:\n1.User Information: Each registered user has a unique username, password, phone number, registration time, last login time, and role. Users can supply water and fertilizer to crops through sensors, and the system needs to record the supply time, location, amount of water, and amount of fertilizer. Additionally, any other actions taken by the user on the crop (such as planting, fertilizing, etc.) need to be recorded, including the time, location, type, and details of the action. Users can also evaluate the crop\u2019s growth performance through the system.\n2.Sensor Deployment: Sensors precisely measure meteorological data and record information such as the data collection time, soil moisture, temperature, rainfall, light intensity, sensor location, and burial depth. Each sensor can infer corresponding meteorological data.\n3.Meteorology: Each meteorological record includes timestamp, temperature, humidity, rainfall, wind speed, light intensity, and location.\n4.Crops: Each crop has a unique crop ID, name, type, and a matching growth model.\n5.Growth Model: Each crop has a corresponding growth model, which includes the model name, parameters, and creation time. The crop is evaluated using this model, and the evaluation records the name of the evaluation metric, its value, and the location of the evaluation.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone Number", "Registration Time", "Last Login Time", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Sensor": {"Attributes": ["Sensor ID", "Data Collection Time", "Soil Moisture", "Temperature", "Rainfall", "Light Intensity", "Sensor Location", "Sensor Burial Depth", "Meteorological ID"], "Primary key": ["Sensor ID"], "Foreign key": {"Meteorological ID": {"Meteorology": "Meteorological ID"}}}, "Meteorology": {"Attributes": ["Meteorological ID", "Timestamp", "Temperature", "Humidity", "Rainfall", "Wind Speed", "Light Intensity", "Location"], "Primary key": ["Meteorological ID"], "Foreign key": {}}, "Crop": {"Attributes": ["Crop ID", "Crop Name", "Crop Type", "Model ID"], "Primary key": ["Crop ID"], "Foreign key": {"Data ID": {"Meteorology": "Data ID"}, "Model ID": {"Growth Model": "Model ID"}}}, "Growth Model": {"Attributes": ["Model ID", "Schema Name", "Model Parameters", "Model Creation Time"], "Primary key": ["Model ID"], "Foreign key": {}}, "User Water and Fertilizer Supply": {"Attributes": ["Admin ID", "Crop Type", "Supply Time", "Supply Location", "Water Supply", "Fertilizer Supply", "Associated Sensor ID"], "Primary key": ["Admin ID", "Associated Sensor ID"], "Foreign key": {"Associated Sensor ID": {"Sensor": "Sensor ID"}, "Admin ID": {"User": "User ID"}}}, "User Operation": {"Attributes": ["Admin ID", "Crop ID", "Operation Time", "Operation Type", "Operation Location", "Operation Details"], "Primary key": ["Admin ID", "Crop ID"], "Foreign key": {"Crop ID": {"Crop": "Crop ID"}, "Admin ID": {"User": "User ID"}}}, "System Performance Evaluation": {"Attributes": ["Admin ID", "Crop ID", "Evaluation Time", "Evaluation Metric Name", "Evaluation Metric Value", "Evaluation Location"], "Primary key": ["Admin ID", "Crop ID"], "Foreign key": {"Crop ID": {"Crop": "Crop ID"}, "Admin ID": {"User": "User ID"}}}, "Model Performance Evaluation": {"Attributes": ["Model ID", "Crop ID", "Evaluation Metric Name", "Evaluation Metric Value", "Evaluation Location"], "Primary key": ["Model ID", "Crop ID"], "Foreign key": {"Crop ID": {"Crop": "Crop ID"}, "Model ID": {"Growth Model": "Model ID"}}}}}
{"id": "67552f0b13602ec03b41aa5a", "question": "Requirements:\n1.User Information Management: Each registered user in the financial system has a unique user ID, username, password, phone number, associated unit, and role.\n2.Financial Document Management: Collect and organize financial systems, accounting treatment FAQs, accounting practice tips, and other materials. Each financial document includes the document title, document number, issuing unit, issue date, document category, document level, validity status, remarks, document content, and attachment path. Administrators can perform operations on the document, recording the operation time and type.\n3.Notification Management: Users can publish notifications. The content of the notification includes the notification content, issue date, and notification status.\n4.Web System Configuration: Administrators can perform operations such as adding, modifying, or deleting database content. The configuration records the system name, database directory, data type, and file upload directory.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Phone Number", "Associated Unit", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Financial Document": {"Attributes": ["Document ID", "Document Title", "Document Number", "Issuing Unit", "Issue Date", "Document Category", "Document Level", "Validity Status", "Remarks", "Document Content", "Attachment Path"], "Primary key": ["Document ID"], "Foreign key": {}}, "Notification": {"Attributes": ["Notification ID", "Notification Title", "Notification Content", "Issue Date", "Notification Status", "User ID"], "Primary key": ["Notification ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "System Configuration": {"Attributes": ["Configuration ID", "System Name", "Database Directory", "Data Type", "File Upload Directory", "Admin ID"], "Primary key": ["Configuration ID"], "Foreign key": {"Admin ID": {"User": "User ID"}}}, "Document Management": {"Attributes": ["Admin ID", "Document ID", "Operation Time", "Operation Type"], "Primary key": ["Admin ID", "Document ID"], "Foreign key": {"Document ID": {"Financial Document": "Document ID"}, "Admin ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa5c", "question": "Business Requirements Description:\n1.User Management:\nManage user information, including user roles (Student, Teacher, Laboratory Administrator, Experimental Center Director Administrator, System Administrator), username, password, phone number, and associated unit.\n2.Experimental Equipment Management:\nEnter and manage the basic information of laboratory equipment, such as equipment name, model, category, manufacturer, status (inactive, in use, active), and acquisition time.\nUsage Records Management: Record the usage of equipment, including usage time, user, and purpose of use.\nCourse Association Management: Associate equipment with specific experimental courses for easier scheduling and management of the equipment.\n3.Laboratory Consumables Management:\nConsumables Management: Perform operations such as archiving, modifying, and querying consumables information. Manage the purchasing, storage, issuance, and return of consumables.\nRecord consumable name, category, inventory quantity, and status. Users can purchase consumables and record the purchase time.\n4.Hazardous Chemicals Management:\nArchive, modify, and query hazardous chemicals information. Manage the purchasing, storage, issuance, and return of hazardous chemicals to ensure safety.\nRecord chemical name, inventory quantity, issuance time, and status.\n5.Experimental Course Management:\nView and manage information for regular experimental courses, including course name, class time, and class location. Each course can have multiple students registered, and each course is assigned a corresponding teacher.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Role", "Phone Number", "Associated Unit"], "Primary key": ["User ID"], "Foreign key": {}}, "Experimental Equipment": {"Attributes": ["Device ID", "Device Name", "Device Model", "Device Category", "Manufacturer", "Status", "Acquisition Time"], "Primary key": ["Device ID"], "Foreign key": {}}, "User Usage of Equipment": {"Attributes": ["Device ID", "User ID", "Usage Time", "Usage Purpose"], "Primary key": ["Device ID", "User ID", "Usage Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Device ID": {"Experimental Equipment": "Device ID"}}}, "Experimental Course": {"Attributes": ["Course ID", "Course Name", "Class Time", "Class Location", "Participants", "Teacher ID"], "Primary key": ["Course ID"], "Foreign key": {"Teacher ID": {"User": "User ID"}}}, "User Participation in Course": {"Attributes": ["User ID", "Course ID", "Participation Status", "Experimental Course Grade"], "Primary key": ["User ID", "Course ID"], "Foreign key": {"User ID": {"User": "User ID"}, "Course ID": {"Experimental Course": "Course ID"}}}, "Experimental Consumables": {"Attributes": ["Consumable ID", "Consumable Name", "Category", "Inventory Quantity", "Status"], "Primary key": ["Consumable ID"], "Foreign key": {}}, "Hazardous Chemicals": {"Attributes": ["Chemical ID", "Chemical Name", "Inventory Quantity", "Issuance Time", "Status"], "Primary key": ["Chemical ID"], "Foreign key": {}}, "User Purchase Consumables": {"Attributes": ["Consumable ID", "User ID", "Purchase Time"], "Primary key": ["Consumable ID", "User ID", "Purchase Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Consumable ID": {"Experimental Consumables": "Consumable ID"}}}, "User Purchase Hazardous Chemicals": {"Attributes": ["Chemical ID", "User ID", "Purchase Time"], "Primary key": ["Chemical ID", "User ID", "Purchase Time"], "Foreign key": {"Chemical ID": {"Hazardous Chemicals": "Chemical ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa6b", "question": "The main functions of a company's human resources and training management information system include:\n1. Employee information management: Each company employee has a unique employee number, which also includes employee name, employee gender, employee date of birth, department, employee entry date, employee resignation date, employee position, employee contact information, employee email address, and employee status.\n2. Position information management: Each position has a unique position number, which also includes information such as position name, position responsibilities, and position requirements.\n3. Training information management: Each training has a unique training number, and also records information such as training time, training location, training content, and trainer.\n4. Department information management: Each department has a unique department number, which also includes department name, department function, department planning, and other content.\n5. Employee position change management: Record employee position changes, using employee number and position number as identifiers, and record the change date and reason for the change.", "answer": {"Employee": {"Attributes": ["Employee ID", "Employee Name", "Employee Gender", "Employee Date of Birth", "Employee Join Date", "Employee Leave Date", "Employee Position", "Employee Contact Information", "Employee Email", "Employee Status", "Department"], "Primary key": ["Employee ID"], "Foreign key": {"Department": {"Department": "Department ID"}}}, "Position": {"Attributes": ["Position ID", "Position Name", "Position Responsibilities", "Position Requirements"], "Primary key": ["Position ID"], "Foreign key": {}}, "Training": {"Attributes": ["Training ID", "Training Date", "Training Location", "Training Content", "Trainer"], "Primary key": ["Training ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Function", "Department Plan"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee Position Change": {"Attributes": ["Employee ID", "Position ID", "Change Date", "Change Reason"], "Primary key": ["Employee ID", "Position ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Position ID": {"Position": "Position ID"}}}, "Training Personnel Assignment": {"Attributes": ["Employee ID", "Training ID"], "Primary key": ["Employee ID", "Training ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Training ID": {"Training": "Training ID"}}}}}
{"id": "67552f0b13602ec03b41aa74", "question": "Asset Management System Design for a Company is as follows:\nThe company has multiple departments, with department information including Department ID, name, and description.\nEach department has multiple users, with user information including User ID, name, and affiliated department.\nThe company manages assets by categories, with asset category information including Type ID, category name, and description.\nAsset information includes Asset ID, name, type, affiliated department, status (such as \"idle\", \"in use\", \"returning\", \"scrapped\"), and scrapping indicator, etc.\nThe asset circulation record includes Asset ID, circulating User ID, circulation status (such as \"pending receipt\", \"received\", \"allocating\", \"allocated\"), etc.\nThe system needs to record the creation and update information of assets, including creator and creation time, updater and update time.\n", "answer": {"Department": {"Attributes": ["Department ID", "Name", "Description"], "Primary key": ["Department ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Affiliated Department"], "Primary key": ["User ID"], "Foreign key": {"Affiliated Department": {"Department": "Department ID"}}}, "Asset Category": {"Attributes": ["Type ID", "Category Name", "Description"], "Primary key": ["Type ID"], "Foreign key": {}}, "Asset": {"Attributes": ["Asset ID", "Name", "Type", "Affiliated Department", "Status", "Scrapping Indicator", "Creator", "Creation Time", "Updater", "Update Time"], "Primary key": ["Asset ID"], "Foreign key": {"Creator": {"User": "User ID"}, "Affiliated Department": {"Department": "Department ID"}, "Updater": {"User": "User ID"}, "Type": {"Asset Category": "Type ID"}}}, "Circulation Record": {"Attributes": ["Asset ID", "Circulating User ID", "Circulation Status", "Circulation Time"], "Primary key": ["Asset ID", "Circulating User ID", "Circulation Time"], "Foreign key": {"Circulating User ID": {"User": "User ID"}, "Asset ID": {"Asset": "Asset ID"}}}}}
{"id": "67552f0b13602ec03b41aa7f", "question": "This is an enterprise information network security management system. For intrusion detection, the system discovers potential intrusion behaviors through real-time network traffic monitoring, with each intrusion detection record having a unique record ID and recording information such as detection time, source IP address, destination IP address, source port number, destination port number, attack type and threat level. For intelligent control, the system generates response plans based on particle swarm algorithms and intelligent processing knowledge base, with each response plan having a unique plan ID and recording plan generation time, plan type (such as blocking, isolation, recording), detailed plan content and execution status. For knowledge base management, the system maintains a knowledge base for intrusion behavior judgment, with each piece of knowledge having a unique knowledge ID and recording knowledge category (such as intrusion behavior, security configuration, best practices), knowledge description, knowledge source and knowledge reliability. For alarm management, the system generates alarm information for each detected intrusion behavior, with each alarm having a unique alarm ID and recording alarm time, alarm level, alarm content and processing status. The system uses particle swarm optimization support vector machine models to improve detection accuracy and random forest algorithms to predict system security status.", "answer": {"Intrusion detection record": {"Attributes": ["Record ID", "Detection time", "Source IP", "Destination IP", "Source port", "Destination port", "Attack type", "Threat level"], "Primary key": ["Record ID"], "Foreign key": {}}, "Response plan": {"Attributes": ["Plan ID", "Plan generation time", "Plan type", "Plan content", "Execution status", "Record ID"], "Primary key": ["Plan ID"], "Foreign key": {"Record ID": {"Intrusion detection record": "Record ID"}}}, "Knowledge base": {"Attributes": ["Knowledge ID", "Knowledge category", "Knowledge description", "Knowledge source", "Reliability"], "Primary key": ["Knowledge ID"], "Foreign key": {}}, "Alarm information": {"Attributes": ["Alarm ID", "Alarm time", "Alarm level", "Alarm content", "Processing status", "Intrusion detection record ID"], "Primary key": ["Alarm ID"], "Foreign key": {"Intrusion detection record ID": {"Intrusion detection record": "Record ID"}}}, "Plan knowledge base": {"Attributes": ["Plan ID", "Knowledge ID"], "Primary key": ["Plan ID", "Knowledge ID"], "Foreign key": {"Knowledge ID": {"Knowledge base": "Knowledge ID"}, "Plan ID": {"Response plan": "Plan ID"}}}}}
{"id": "67552f0b13602ec03b41aa83", "question": "A university has developed a certificate management system based on blockchain technology, aiming to achieve digital management and verification of student certificates. The user table is used to manage system user information, including username, password, email, role, and the creation and update times of the account. The student information table is used to record detailed student information, including student name, student ID, major, and the creation and update times of the information, and is associated with the user table. The certificate information table is used to store information about certificates obtained by students, including certificate name, certificate ID, issuing institution, issuance date, certificate description, certificate hash value, certificate status, and the creation and update times of the information, and is associated with the student information table.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Email", "Role", "Account Creation Time", "Account Update Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Student Name", "Major", "Information Creation Time", "Information Update Time", "User ID"], "Primary key": ["Student ID"], "Foreign key": {"User ID": {"User": "User ID"}}}, "Certificate": {"Attributes": ["Certificate ID", "Certificate Name", "Issuing Institution", "Issuance Date", "Certificate Description", "Certificate Status", "Information Creation Time", "Information Update Time", "Hash Value", "Associated Student"], "Primary key": ["Certificate ID"], "Foreign key": {"Associated Student": {"Student": "Student ID"}}}}}
{"id": "67552f0b13602ec03b41aa8e", "question": "\"The system is designed for a corporate group to manage the business operations of its multiple large chain stores. Key features include:\n1. Record store information, including Store ID, Store Name, Address, and Contact Phone Number.\n2. Record department information for each store, including Department ID, Department Name, Location Distribution, and Contact Phone Number.\n3. Record employee information for each department, including Employee ID, Name, Position, Phone Number, and Salary.\n4. Record manager information for each department.\"", "answer": {"Store": {"Attributes": ["Store ID", "Name", "Address", "Contact Phone Number"], "Primary key": ["Store ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Belonging Store", "Location Distribution", "Contact Phone Number", "Manager"], "Primary key": ["Department ID"], "Foreign key": {"Belonging Store": {"Store": "Store ID"}, "Manager": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Name", "Position", "Phone Number", "Belonging Department", "Salary"], "Primary key": ["User ID"], "Foreign key": {"Belonging Department": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aa94", "question": "The business requirements for the product distribution system are described as follows: The system records information about multiple chain supermarkets, including supermarket name, supermarket address, and supermarket contact information. The product distribution center receives supply requests from multiple chain supermarkets, with each supply request including the requesting chain supermarket, product number, and quantity. The distribution center manages the basic information of each product, including product name, product price, and inventory quantity. When the inventory meets the supply request, a distribution order is generated, recording the distribution order number, supply request number, distribution date, and distribution status. When the inventory is insufficient, a purchase order is generated, recording the purchase order number, product number, quantity, price, purchase date, and status. After each distribution or purchase is completed, the product inventory information is updated, and the status of the distribution or purchase is recorded.", "answer": {"Supply Request": {"Attributes": ["Supply Request ID", "Requesting Chain Supermarket", "Request Time"], "Primary key": ["Supply Request ID"], "Foreign key": {"Requesting Chain Supermarket": {"Chain Supermarket": "Chain Supermarket ID"}}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Price", "Product Inventory Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Requested Product": {"Attributes": ["Supply Request ID", "Requested Product ID", "Requested Product Quantity"], "Primary key": ["Supply Request ID", "Requested Product ID"], "Foreign key": {"Supply Request ID": {"Supply Request": "Supply Request ID"}, "Requested Product ID": {"Product": "Product ID"}}}, "Chain Supermarket": {"Attributes": ["Chain Supermarket ID", "Chain Supermarket Name", "Chain Supermarket Address", "Chain Supermarket Contact Information"], "Primary key": ["Chain Supermarket ID"], "Foreign key": {}}, "Distribution Order": {"Attributes": ["Distribution Order ID", "Distribution Time", "Supply Request ID", "Distribution Status"], "Primary key": ["Distribution Order ID"], "Foreign key": {"Supply Request ID": {"Supply Request": "Supply Request ID"}}}, "Purchase Order": {"Attributes": ["Purchase Order ID", "Purchase Date", "Purchase Status"], "Primary key": ["Purchase Order ID"], "Foreign key": {}}, "Purchased Product": {"Attributes": ["Purchase Order ID", "Purchased Product ID", "Purchased Product Quantity", "Purchased Product Price"], "Primary key": ["Purchase Order ID", "Purchased Product ID"], "Foreign key": {"Purchase Order ID": {"Purchase Order": "Purchase Order ID"}, "Purchased Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0b13602ec03b41aa98", "question": "Business Requirements Description:\nParking Management System:\n1.When a vehicle enters the parking lot, the system queries available parking spaces and assigns the vehicle to an empty spot. If there are no available spots, the system returns null.\n2.When a vehicle leaves the parking lot, the system marks the parking spot used by the vehicle as empty.\nSupplementary Information:\nThe parking space table records the status of each parking space (whether it is occupied or not).\nThe entry table records the status of each entry point (whether a vehicle has entered).\nThe exit table records the status of each exit point (whether a vehicle has left).", "answer": {"Parking Space": {"Attributes": ["Parking Space ID", "Occupied Vehicle", "Entry ID", "Exit ID"], "Primary key": ["Parking Space ID"], "Foreign key": {"Entry ID": {"Entry": "Entry ID"}, "Exit ID": {"Exit": "Exit ID"}, "Occupied Vehicle": {"Vehicle": "License Plate Number"}}}, "Entry": {"Attributes": ["Entry ID", "Entry Status"], "Primary key": ["Entry ID"], "Foreign key": {}}, "Exit": {"Attributes": ["Exit ID", "Exit Status"], "Primary key": ["Exit ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["License Plate Number", "Entry Time", "Exit Time"], "Primary key": ["License Plate Number"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aa99", "question": "The main functions of the chain supermarket supply management system include:\n1. Supermarket Information Management: Each chain supermarket has a unique supermarket ID, also including supermarket name, supermarket address, and manager's phone number.\n2. Product Inventory Management: Each product has a unique product ID, recording product name, inventory quantity, and storage location.\n3. Distribution Department Information Management: Each distribution department has a unique department ID, including department name, department address, and manager's phone number.\n4. Purchase Order Management: Each purchase has a unique purchase ID, associated with a product ID, and records purchase date, supplier, purchase quantity, and other information.\n5. Payment Order Management: Each payment order has a unique order ID, linked to the purchase order ID, recording payment amount, payment date, and payment status.\n6. Supply Request Management: The system records the supply request information of each chain supermarket, using the supermarket ID, product ID, and request time as identifiers, linking supermarket and product information, recording the requested quantity.\n7. Distribution Management: The system generates a distribution notification, using the distribution notice number as the unique identifier, associated with the product ID and distribution department ID, recording distribution quantity, distribution time, and other information.\n\nThe specific business processes of the system are as follows:\nThe system records supply request information, including the product ID, quantity, request time, and supermarket information.\nWhen processing requests, the system queries the product inventory records. If the inventory satisfies the request, the system generates a distribution notification, including the distribution notice number, product ID, distribution quantity, distribution time, and distribution department information.\nIf the inventory is insufficient, the system records a stockout notification, and the purchasing department handles product procurement, the system records purchasing order information, including product ID, purchase quantity, supplier, purchase date, and payment information.\nOnce the purchase is completed, the qualified products are stored and the inventory is updated, the finance department records payment information based on the purchase order, including payment amount, payment date, and payment status. Through these records, the system can effectively manage supply requests, inventory status, distribution information, purchasing processes, and financial payments.", "answer": {"Supermarket": {"Attributes": ["Supermarket ID", "Supermarket Name", "Supermarket Address", "Manager Phone"], "Primary key": ["Supermarket ID"], "Foreign key": {}}, "Product Inventory": {"Attributes": ["Product ID", "Product Name", "Inventory Quantity", "Storage Location"], "Primary key": ["Product ID"], "Foreign key": {}}, "Distribution Department": {"Attributes": ["Department ID", "Department Name", "Department Address", "Manager Phone"], "Primary key": ["Department ID"], "Foreign key": {}}, "Purchase Order": {"Attributes": ["Purchase ID", "Product ID", "Purchase Date", "Supplier", "Purchase Quantity"], "Primary key": ["Purchase ID"], "Foreign key": {"Product ID": {"Product Inventory": "Product ID"}}}, "Payment Order": {"Attributes": ["Order ID", "Payment Amount", "Payment Date", "Payment Status", "Purchase Order"], "Primary key": ["Order ID"], "Foreign key": {"Purchase Order": {"Purchase Order": "Purchase ID"}}}, "Supply Request": {"Attributes": ["Supermarket ID", "Product ID", "Request Time", "Request Quantity"], "Primary key": ["Supermarket ID", "Product ID", "Request Time"], "Foreign key": {"Product ID": {"Product Inventory": "Product ID"}, "Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Distribution": {"Attributes": ["Distribution Department ID", "Product ID", "Distribution Quantity", "Distribution Time", "Distribution ID"], "Primary key": ["Distribution ID"], "Foreign key": {"Product ID": {"Product Inventory": "Product ID"}, "Distribution Department ID": {"Distribution Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aaa6", "question": "This is a product distribution center information management system. It records supermarket information including name, address, and contact information; records product information including name, inventory quantity, and last update date; records supplier information including name, address, and contact information.For supply request management, the system records each supply request submitted by chain supermarkets, including unique request ID, chain supermarket ID, product ID, requested quantity and request date. When receiving a supply request, the system checks product inventory - if inventory is sufficient, it generates a delivery notification including notification ID, corresponding request ID and delivery date; if inventory is insufficient, it generates a stock-out notification including notification ID, corresponding request ID and stock-out date. For procurement management, when the procurement department receives a stock-out notification, they proceed with product procurement, with each purchase recorded in a procurement list, including unique list ID, product ID, supplier ID, purchase quantity and purchase date.", "answer": {"Chain supermarket": {"Attributes": ["Supermarket ID", "Supermarket name", "Contact information", "Address"], "Primary key": ["Supermarket ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product name", "Inventory quantity", "Last update date"], "Primary key": ["Product ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier name", "Contact information", "Address"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Supply request": {"Attributes": ["Request ID", "Request quantity", "Request date", "Supermarket ID", "Product ID"], "Primary key": ["Request ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Supermarket ID": {"Chain supermarket": "Supermarket ID"}}}, "Delivery notification": {"Attributes": ["Notification ID", "Delivery date", "Supply request ID"], "Primary key": ["Notification ID"], "Foreign key": {"Supply request ID": {"Supply request": "Request ID"}}}, "Stock-out notification": {"Attributes": ["Notification ID", "Stock-out date", "Supply request ID"], "Primary key": ["Notification ID"], "Foreign key": {"Supply request ID": {"Supply request": "Request ID"}}}, "Procurement list": {"Attributes": ["List ID", "Purchase quantity", "Purchase date", "Product ID", "Supplier ID"], "Primary key": ["List ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0b13602ec03b41aaa7", "question": "The system is required to record the basic information of each member, including Member ID, Username, Password, Name, Address, Postal Code, Telephone, Expenditure, and Points. The system will manage book information, recording each book's Book ID, Type Name, Book Title, Author, Publisher, Publication Date, ISBN, and Price. The order management module records each order's Order ID, Username, Sales, Order Date, and Shipping Date. Each order may also contain multiple order details, recording information such as Order Detail ID, Order ID, Book ID, and Quantity. Through the storage and association of this information, the system can effectively manage the related data of members, books, orders, and order details.", "answer": {"Member": {"Attributes": ["Member ID", "Username", "Password", "Name", "Address ID", "Telephone", "Expenditure", "Points"], "Primary key": ["Member ID"], "Foreign key": {"Address ID": {"Address": "Address ID"}}}, "Address": {"Attributes": ["Address ID", "Address", "Postal Code"], "Primary key": ["Address ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Type Name", "Book Title", "Author", "Publisher", "Publication Date", "ISBN", "Price"], "Primary key": ["Book ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Member ID", "Order Date", "Shipping Date"], "Primary key": ["Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Order Detail": {"Attributes": ["Order ID", "Book ID", "Quantity"], "Primary key": ["Order ID", "Book ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aaac", "question": "The human resource management system of a company is as follows: The company has multiple departments, with department information including department number, department name, and manager. Each department has multiple employees, with employee information including employee number, name, department, salary, position, and education level. The company also manages multiple projects, with project information including project number, project name, associated department, and responsible person. Each project can involve multiple employees, and employees can participate in multiple projects. The system shall record each employee's project participation information, including employee number and project number. The manager is a member of the department, and their information is stored in the employee table. The responsible person is an employee of a department who manages a specific project.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Department ID", "Salary", "Position", "Education Level"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name", "Manager"], "Primary key": ["Department ID"], "Foreign key": {"Manager": {"Employee": "Employee ID"}}}, "Project": {"Attributes": ["Project ID", "Project Name", "Department ID", "Responsible Person"], "Primary key": ["Project ID"], "Foreign key": {"Responsible Person": {"Employee": "Employee ID"}, "Department ID": {"Department": "Department ID"}}}, "Employee Project Participation": {"Attributes": ["Employee ID", "Project ID", "Project Participation Time"], "Primary key": ["Employee ID", "Project ID", "Project Participation Time"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aab2", "question": "A retail enterprise has developed an integrated management system designed to achieve comprehensive management of stores, departments, employees, procurement, and suppliers. The system's primary functionalities include store management, which records basic information for each store such as Store ID, Store Name, Address, and Contact Number; department management, which records basic information for each department such as Department ID, Department Name, Location, and Contact Number; employee management, which records basic information for each employee such as Employee ID, Name, Position, Phone Number, and Salary, while ensuring that each employee can only belong to one department.", "answer": {"Mall": {"Attributes": ["Mall ID", "Mall Name", "Address", "Contact Number"], "Primary key": ["Mall ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Location Distribution", "Contact Number"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Phone Number", "Salary", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aab5", "question": "The system is a product distribution center information management system. In terms of product management, the system maintains detailed information for each product, including Product ID, Name, Unit Price, Stock Quantity, Unit of Measurement, Category, Description, and Storage Location. In terms of distribution personnel management, the system records basic information for each distribution personnel, including Delivery Personnel ID, Name, Phone, Gender, and Position, to facilitate personnel scheduling. In terms of customer management, the system maintains basic information for customers, including Customer ID, Name, Gender, Age, Phone, and Address, ensuring accurate processing and delivery of orders. In terms of order management, the system records complete information for each order, including Customer ID, Product ID, Order Creation Time, Product Quantity, Total Order Price, Delivery Address, Order Status, Estimated Delivery Time, and Responsible Delivery Personnel ID, enabling comprehensive tracking and management of the order process. Through the collaborative operation of these functional modules, the system achieves precise management of product inventory, automation of order processing, and real-time monitoring of the delivery process.", "answer": {"Product": {"Attributes": ["Product ID", "Name", "Unit Price", "Stock Quantity", "Unit of Measurement", "Category", "Description", "Location"], "Primary key": ["Product ID"], "Foreign key": {}}, "Delivery Personnel": {"Attributes": ["Delivery Personnel ID", "Name", "Phone", "Gender", "Position"], "Primary key": ["Delivery Personnel ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Gender", "Age", "Phone", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order Number", "Customer ID", "Order Creation Time", "Total Order Price", "Delivery Address", "Order Status"], "Primary key": ["Order Number"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Order Product": {"Attributes": ["Order ID", "Product ID", "Product Quantity"], "Primary key": ["Order ID", "Product ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}, "Order ID": {"Order": "Order Number"}}}, "Order Delivery": {"Attributes": ["Order ID", "Delivery Personnel ID", "Estimated Delivery Time"], "Primary key": ["Order ID", "Delivery Personnel ID"], "Foreign key": {"Order ID": {"Order": "Order Number"}, "Delivery Personnel ID": {"Delivery Personnel": "Delivery Personnel ID"}}}}}
{"id": "67552f0b13602ec03b41aab6", "question": "This is an online bookstore backend database system. For member management, the system records basic information for each member, including unique member ID, username, password, name, address, postal code, phone number, consumption amount and points. For book management, the system records basic information for each book, including unique book ID, category name, book title, author, publisher, publication date, ISBN and price. For order management, the system records basic information for each order, including unique order ID, member username, sales amount, order date and shipping date, where the order date cannot be later than the shipping date. Each order can contain multiple books, and the system needs to record the purchase quantity for each book.", "answer": {"Member": {"Attributes": ["Member ID", "Username", "Password", "Name", "Address", "Postal code", "Phone", "Consumption amount", "Points"], "Primary key": ["Member ID"], "Foreign key": {}}, "Book": {"Attributes": ["ISBN", "Category name", "Book title", "Author", "Publisher", "Publication date", "Price"], "Primary key": ["ISBN"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Sales amount", "Order date", "Shipping date", "Member ID"], "Primary key": ["Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Purchase": {"Attributes": ["Order ID", "ISBN", "Quantity"], "Primary key": ["Order ID", "ISBN"], "Foreign key": {"ISBN": {"Book": "ISBN"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aab7", "question": "Business Requirements Description:\nGroup Company Business Operations Database System:\n1.Mall Management: The system records basic information for each mall, including mall ID, mall name, address, and contact number.\n2.Department Management: Each mall contains different departments. The system records information for each department, including department ID, department name, location distribution, and contact number.\n3.Employee Management: Each department hires multiple employees to handle daily affairs, and each employee can only belong to one department. The system records each employee\u2019s information, including employee ID, name, position, phone number, and salary. Each department has a manager, and the system records the manager\u2019s tenure.\n4.Emergency Contact Management: The system requires that each employee must and can only register one emergency contact\u2019s name and phone number.", "answer": {"Mall": {"Attributes": ["Mall ID", "Mall Name", "Address", "Contact Number"], "Primary key": ["Mall ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Location Distribution", "Contact Number", "Mall ID", "Manager Employee ID", "Tenure"], "Primary key": ["Department ID"], "Foreign key": {"Mall ID": {"Mall": "Mall ID"}, "Manager Employee ID": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Phone Number", "Salary", "Department ID", "Emergency Contact Name", "Emergency Contact Phone"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aabd", "question": "This is an enterprise information system. For employee management, the system records basic information for each employee, including unique employee ID, name, salary, position and education level. For department management, the system records basic information for each department, including unique department ID and department name, with each department managed by one employee as manager. For project management, the system records basic information for each project, including unique project ID and project name, with each project belonging to one department and managed by one employee. Each employee can participate in multiple projects, and each project can have multiple participating employees.", "answer": {"Employee": {"Attributes": ["Employee ID", "Name", "Salary", "Position", "Education level", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department name", "Manager employee ID"], "Primary key": ["Department ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}}}, "Project": {"Attributes": ["Project ID", "Project name", "Department ID", "Manager employee ID"], "Primary key": ["Project ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}, "Department ID": {"Department": "Department ID"}}}, "Participation": {"Attributes": ["Employee ID", "Project ID"], "Primary key": ["Employee ID", "Project ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Project ID": {"Project": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aac3", "question": "The email management system is primarily used for managing user accounts, email information, and email attachments. The system supports sending and receiving emails while providing attachment management functionality. The system supports the following functionalities:  \n\n\nUser Management: Stores user account information, including email address, password, and account creation time.\n\nAttachment Information Management :Stores relevant information about email attachments, including attachment size, upload time, path, and file name.\n\nEmail Management: Stores detailed information about emails, recording the sender, recipient, send time, email subject, content, and related attachments for each email.\n\n\nMany-to-Many Relationship: There exists a many-to-many association between emails and attachments.", "answer": {"User": {"Attributes": ["Email Address", "Password", "Account Creation Time"], "Primary key": ["Email Address"], "Foreign key": {}}, "Attachment Information": {"Attributes": ["Attachment ID", "File Size", "Upload Time", "File Path", "File Name"], "Primary key": ["Attachment ID"], "Foreign key": {}}, "Email": {"Attributes": ["Email ID", "Sender Email Address", "Recipient Email Address", "Send Time", "Delivery Time", "Email Subject", "Email Content", "Attachment ID"], "Primary key": ["Email ID"], "Foreign key": {"Sender Email Address": {"User": "Email Address"}, "Recipient Email Address": {"User": "Email Address"}, "Attachment ID": {"Attachment Information": "Attachment ID"}}}}}
{"id": "67552f0b13602ec03b41aad3", "question": "The enterprise has developed a meal ordering system designed to provide convenient meal ordering services for employees and enable efficient management of restaurant staff, menus, and deliveries. The system\u2019s primary functionalities include customer management, which records basic customer information such as Customer ID, Name, Contact Number, Address, and Payment Method; restaurant staff management, which records basic staff information such as Employee ID, Name, Contact Number, and Position; menu management, which records basic menu information such as Menu ID, Dish Name, and Price; and order management, which records detailed order information such as Customer ID, Menu ID, Order Quantity, Order Time, Delivery Time, Delivery Location, and Order Status.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Contact Number", "Address", "Payment Method"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Employee": {"Attributes": ["Employee ID", "Name", "Contact Number", "Position"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Menu": {"Attributes": ["Menu ID", "Dish Name", "Price"], "Primary key": ["Menu ID"], "Foreign key": {}}, "Customer Order": {"Attributes": ["Customer ID", "Menu ID", "Order Time", "Order Quantity", "Delivery Time", "Delivery Location", "Order Status"], "Primary key": ["Customer ID", "Menu ID", "Order Time"], "Foreign key": {"Menu ID": {"Menu": "Menu ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0b13602ec03b41aad7", "question": "The business requirements for the order processing system are described as follows: The enterprise has multiple customers, each with a customer ID, name, and contact information. The enterprise offers a variety of products, each with a product ID, product name, price, and inventory quantity. Customers can place orders, with each order having an order ID, product ID, customer ID who placed the order, order quantity, and order status. An order can include multiple products. For each order, a picking list is generated, which includes a picking list ID, order ID, product ID, picking quantity, and picking status. Based on the order and customer information, a delivery order is generated, which includes a delivery order ID, order ID, delivery time, and delivery status. Based on the order and customer information, a customer invoice is generated, which includes an invoice ID, order ID, invoice amount, and invoice date. Based on the customer and order information, an accounts receivable report is generated, which includes a report ID, order ID, receivable amount, and report date. The system ensures the entire process from customer order placement to product delivery and invoice generation is efficient and accurate through the collaborative work of multiple modules.", "answer": {"Customer": {"Attributes": ["Customer ID", "Customer Name", "Customer Contact Information"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Product Price", "Product Inventory Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order Status", "Ordering Customer ID"], "Primary key": ["Order ID"], "Foreign key": {"Ordering Customer ID": {"Customer": "Customer ID"}}}, "Ordered Product": {"Attributes": ["Order ID", "Ordered Product ID", "Ordered Quantity"], "Primary key": ["Order ID", "Ordered Product ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}, "Ordered Product ID": {"Product": "Product ID"}}}, "Picking List": {"Attributes": ["Picking List ID", "Picking Status", "Order ID"], "Primary key": ["Picking List ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}}}, "Picked Product": {"Attributes": ["Picking List ID", "Picked Product ID", "Picked Product Quantity"], "Primary key": ["Picking List ID", "Picked Product ID"], "Foreign key": {"Picking List ID": {"Picking List": "Picking List ID"}, "Picked Product ID": {"Product": "Product ID"}}}, "Delivery Order": {"Attributes": ["Delivery Order ID", "Delivery Time", "Delivery Status", "Delivery Order ID"], "Primary key": ["Delivery Order ID"], "Foreign key": {"Delivery Order ID": {"Order": "Order ID"}}}, "Customer Invoice": {"Attributes": ["Customer Invoice ID", "Invoice Amount", "Invoice Date", "Order ID"], "Primary key": ["Customer Invoice ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}}}, "Accounts Receivable Report": {"Attributes": ["Report ID", "Receivable Amount", "Report Date", "Order ID"], "Primary key": ["Report ID"], "Foreign key": {"Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aad8", "question": "Description of the required functions of a credit card management system:\n1. Credit card application:\nNon-credit card customers fill out the credit card application form, and the system records the application number, customer number (the customer number can be temporarily empty at this time, and will be associated after the application is successful), the type of credit card applied for, the name of the applicant, the ID number of the applicant, the time of application submission, and the application result (initially set to \"pending review\").\nThe bank reviews the application. If the application is accepted, it generates a unique customer number, records the customer name, credit card type (i.e. the type of credit card applied for), generates a credit card number, sets the validity period and credit limit, and records the creation time and update time. At the same time, the customer number and application result of the corresponding application record in the \"Credit Card Application\" table are updated to \"approved\". The system sends a confirmation letter to the customer; if the application is not approved, the application result in the \"Credit Card Application\" table is updated to \"rejected\", and a rejection letter is sent to the customer.\n3. Transaction information query:\nFor each transaction made by a credit card customer using a credit card, the system will generate a unique transaction number, record the customer number, transaction time, transaction amount, transaction type, and transaction description.", "answer": {"Credit Card Customer": {"Attributes": ["Customer ID", "Name", "Credit Card Type", "Credit Card Number", "Expiration Date", "Credit Limit", "Creation Time", "Update Time"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Credit Card Application": {"Attributes": ["Application ID", "Customer ID", "Applied Credit Card Type", "Applicant Name", "Applicant ID Number", "Application Submission Time", "Application Result"], "Primary key": ["Application ID"], "Foreign key": {"Customer ID": {"Schema 0": "Customer ID"}}}, "Credit Card Transaction": {"Attributes": ["Transaction ID", "Customer ID", "Transaction Time", "Transaction Amount", "Transaction Type", "Transaction Description"], "Primary key": ["Transaction ID"], "Foreign key": {"Customer ID": {"Schema 0": "Customer ID"}}}}}
{"id": "67552f0b13602ec03b41aada", "question": "This is a residential property fee management system. For property owner management, the system records basic information for each owner, including unique owner ID, name, workplace and contact number. For housing management, the system records basic information for each housing unit, including unique house number and floor area, where one owner can own multiple housing units, but each unit can only belong to one owner. For department management, the system records basic information for each department, including unique department ID, department name and department phone number, with each department having one employee as the supervisor. For employee management, the system records basic information for each employee, including unique employee ID, name, date of birth, gender, address, contact number, position and password, where each employee can only belong to one department and has different permissions based on their position. For fee management, the system records detailed information for each fee collection, including fee type (property management fee, sanitation fee, water fee and electricity fee), quantity, and fee amount, where fee standards are calculated based on housing area and quantity, collected monthly. The system generates fee receipts and accounts receivable reports based on fee collection information.", "answer": {"Property owner": {"Attributes": ["Owner ID", "Name", "Workplace", "Contact number"], "Primary key": ["Owner ID"], "Foreign key": {}}, "Housing": {"Attributes": ["House number", "Floor area", "Owner ID"], "Primary key": ["House number"], "Foreign key": {"Owner ID": {"Property owner": "Owner ID"}}}, "Department": {"Attributes": ["Department ID", "Department name", "Department phone", "Supervisor employee ID"], "Primary key": ["Department ID"], "Foreign key": {"Supervisor employee ID": {"Employee": "Employee ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Date of birth", "Gender", "Address", "Contact number", "Position", "Password", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Fee collection": {"Attributes": ["House number", "Collection employee ID", "Collection date", "Fee type", "Quantity", "Fee amount"], "Primary key": ["House number", "Collection employee ID", "Collection date"], "Foreign key": {"House number": {"Housing": "House number"}, "Collection employee ID": {"Employee": "Employee ID"}}}}}
{"id": "67552f0b13602ec03b41aae9", "question": "The business requirements description for the ordering system is as follows: Enterprise employees can view menus and place orders through the system, while restaurant staff are responsible for preparing meals, generating payment requests, and requesting meal deliveries. The enterprise has multiple employees, each with an employee ID, name, phone number, and address. The system offers multiple menu items, each with a dish ID, dish name, price, and special offer indicator. Registered enterprise employees can place orders, with each order having an order number, employee ID, menu number, quantity, total price, delivery time, delivery address, and payment method. Each order requires recording delivery information, including a delivery record ID, order ID, delivery time, and delivery person ID. Delivery personnel have a delivery person ID, name, phone number, and address. Restaurant staff generate payment requests based on orders, with each payment request containing an order ID, employee ID, payment status, and payment amount.", "answer": {"Enterprise Employee": {"Attributes": ["Employee ID", "Employee Name", "Employee Phone", "Employee Address"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Menu": {"Attributes": ["Dish ID", "Dish Name", "Dish Price", "Dish Special Offer Indicator"], "Primary key": ["Dish ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order Total Price", "Delivery Time", "Delivery Address", "Order Payment Method", "Ordering Employee"], "Primary key": ["Order ID"], "Foreign key": {"Ordering Employee": {"Enterprise Employee": "Employee ID"}}}, "Order Dish": {"Attributes": ["Order ID", "Dish ID", "Dish Quantity"], "Primary key": ["Order ID", "Dish ID"], "Foreign key": {"Dish ID": {"Menu": "Dish ID"}, "Order ID": {"Order": "Order ID"}}}, "Delivery Person": {"Attributes": ["Delivery Person ID", "Delivery Person Name", "Delivery Person Phone", "Delivery Person Address"], "Primary key": ["Delivery Person ID"], "Foreign key": {}}, "Delivery Record": {"Attributes": ["Delivery Record ID", "Delivery Time", "Delivery Order ID", "Responsible Delivery Person ID"], "Primary key": ["Delivery Record ID"], "Foreign key": {"Responsible Delivery Person ID": {"Delivery Person": "Delivery Person ID"}, "Delivery Order ID": {"Order": "Order ID"}}}, "Payment Request": {"Attributes": ["Payment Request ID", "Request Payment Status", "Request Payment Amount", "Paying Order ID", "Paying Employee ID"], "Primary key": ["Payment Request ID"], "Foreign key": {"Paying Employee ID": {"Enterprise Employee": "Employee ID"}, "Paying Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aaee", "question": "This is a credit card management system. For customer management, the system records basic information for each customer, including unique customer ID, name, address, contact number and application status. Non-credit card customers can fill out a credit card application form, specifying the type of credit card they want to apply for and the applicant's basic information. If the application is accepted, the system will record customer information and send a confirmation letter, informing the credit card's validity period and credit limit; otherwise, a rejection letter will be sent. For credit card management, the system records basic information for each credit card, including unique card number, type, validity period, credit limit and activation status. After receiving the credit card, customers need to activate it using the card number and password, and the system will send an activation notification to inform whether the activation is successful. For transaction management, the system records basic information for each transaction, including unique transaction ID, transaction date, transaction description, transaction amount and transaction status. Customers can query and modify their personal information online, as well as query and verify transaction information.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Address", "Contact number", "Application status"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Credit card": {"Attributes": ["Card number", "Type", "Validity period", "Credit limit", "Activation status", "Customer ID"], "Primary key": ["Card number"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Transaction record": {"Attributes": ["Transaction ID", "Transaction date", "Transaction amount", "Transaction description", "Transaction status", "Card number"], "Primary key": ["Transaction ID"], "Foreign key": {"Card number": {"Credit card": "Card number"}}}}}
{"id": "67552f0b13602ec03b41aaf7", "question": "This is an online homework grading system. For student management, the system records basic information for each student, including unique student ID, name, class, phone number and email. For instructor management, the system records basic information for each instructor, including unique instructor ID, name, courses taught, phone number and email. For homework management, students can submit electronic homework online, and the system records basic information for each homework submission, including unique homework ID, homework content, submission time and grading status. After successful submission, the system notifies both the student and instructor. Instructors can download ungraded homework, score each question and provide overall feedback, then upload the graded homework back to the system. The system records grading information (scores and feedback), grading time and notifies students when their homework has been graded. Students can view their submitted homework, scores and feedback.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Class", "Phone", "Email"], "Primary key": ["Student ID"], "Foreign key": {}}, "Instructor": {"Attributes": ["Instructor ID", "Name", "Course", "Phone", "Email"], "Primary key": ["Instructor ID"], "Foreign key": {}}, "Homework": {"Attributes": ["Homework ID", "Homework content", "Submission time", "Grading status", "Submitting student ID"], "Primary key": ["Homework ID"], "Foreign key": {"Submitting student ID": {"Student": "Student ID"}}}}}
{"id": "67552f0b13602ec03b41aaf9", "question": "A publishing house plans to develop an online store, ACShop, for selling academic publications. The functional requirements are as follows: The online academic publications include papers, academic reports, and lecture materials. Publication information includes Publication ID, Title, Author, Price, and Type. Customer information includes Customer ID, Name, Phone, Email, Password, and Registration Status. ACShop will automatically generate orders, with order information including Publication ID, Customer ID, Shipping Address, Payment Method, Order Status, and Order Time. Administrators are responsible for maintaining the online publication catalog, including adding new publications or updating information on available publications. Administrator information includes Administrator ID, Name, Phone, Email, and Password.", "answer": {"Publication": {"Attributes": ["Publication ID", "Title", "Author", "Price", "Type"], "Primary key": ["Publication ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Email", "Password", "Registration Status"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Administrator": {"Attributes": ["Administrator ID", "Name", "Phone", "Email", "Password"], "Primary key": ["Administrator ID"], "Foreign key": {}}, "Order": {"Attributes": ["Customer ID", "Publication ID", "Order Time", "Shipping Address", "Payment Method", "Order Status"], "Primary key": ["Customer ID", "Publication ID", "Order Time"], "Foreign key": {"Publication ID": {"Publication": "Publication ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0b13602ec03b41ab04", "question": "The online assignment management system of a university is designed as follows: The system allows students to submit electronic assignments. Student information includes Student ID, Name, and Class. Instructor information includes Instructor ID, Name, and Course. Instructors can download ungraded assignments. After verifying the Instructor ID, the system displays the submitted assignments on the screen for instructors to grade. While grading, instructors score each question according to the format and provide an overall evaluation. After grading, instructors upload the graded assignments (including scores and evaluations) to the system for storage. The system records the graded assignment scores and evaluations in the student information and notifies the students that the assignments have been graded. Students can view the graded assignments, including the submitted assignments, scores, and evaluations.", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Class"], "Primary key": ["Student ID"], "Foreign key": {}}, "Assignment": {"Attributes": ["Assignment ID", "Student ID", "Assignment Content"], "Primary key": ["Assignment ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}}}, "Instructor": {"Attributes": ["Instructor ID", "Name", "Course"], "Primary key": ["Instructor ID"], "Foreign key": {}}, "Assignment Grading": {"Attributes": ["Assignment ID", "Instructor ID", "Grading Time", "Score", "Evaluation"], "Primary key": ["Assignment ID", "Instructor ID", "Grading Time"], "Foreign key": {"Assignment ID": {"Assignment": "Assignment ID"}, "Instructor ID": {"Instructor": "Instructor ID"}}}}}
{"id": "67552f0b13602ec03b41ab08", "question": "Business Requirements Description:\n1.Supermarket Information Management:\nEach supermarket has a unique name, address, manager, and contact number. Each supermarket has only one manager.\n2.Department Management:\nEach supermarket has multiple departments. Each department has a unique name, department manager, and contact number. Each department has only one manager and multiple employees. Each employee belongs to only one department.\n3.Employee Management:\nEach employee has a unique employee ID, name, contact information, position, and salary. Positions include manager, department manager, salesperson, etc.\n4.Product Management:\nEach product has a unique product ID, name, model, unit price, and quantity. Salespeople can be responsible for the distribution of multiple products in the supermarket, and a product can be assigned to multiple salespeople.", "answer": {"Supermarket": {"Attributes": ["Supermarket ID", "Supermarket Name", "Address", "Manager", "Phone"], "Primary key": ["Supermarket Name"], "Foreign key": {}}, "Department": {"Attributes": ["Department Name", "Department Manager", "Contact Number", "Supermarket ID"], "Primary key": ["Department Name"], "Foreign key": {"Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Contact Information", "Position", "Salary", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Product": {"Attributes": ["Product ID", "Product Name", "Model", "Unit Price", "Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Salesperson Product Distribution": {"Attributes": ["Product ID", "Employee ID", "Sales Volume", "Stock"], "Primary key": ["Product ID", "Employee ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0b13602ec03b41ab17", "question": "The design of the information management system for a pizza shop is as follows:\nThe system includes Customer Management, Sales Order Processing, Production Planning, Raw Material Procurement, Product Inventory Management, Order Delivery, and Financial Records.\nCustomer information comprises Customer ID, Name, Contact Number, and Address.\nSales Order records the customer's order details, including Order ID, Customer ID, Expected Delivery Date, and Order Status.\nProduction Planning determines the production sequence and quantity based on Sales Orders and inventory status, and records the production status.  \nInventory Management tracks the quantity and status of pizzas and raw materials.\nPurchase Orders are used to order raw materials from suppliers, documenting Supplier ID, Raw Material ID, Order Quantity, Supply Quantity, and Order Status.\nDelivery Records track the delivery details of orders, including Delivery Time, Location, and Status.\nFinancial Records manage income and expenses, recording Transaction Type, Amount, Date, and Status.\nAdditionally, the system includes Supplier Information, Pizza Recipes, and Raw Material Details to ensure the smooth progression of production processes.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Contact Number", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales Order": {"Attributes": ["Order ID", "Customer ID", "Expected Delivery Date", "Order Status"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Raw Material": {"Attributes": ["Raw Material ID", "Raw Material Name", "Specification"], "Primary key": ["Raw Material ID"], "Foreign key": {}}, "Production Plan": {"Attributes": ["Production Plan ID", "Order ID", "Production Status"], "Primary key": ["Production Plan ID"], "Foreign key": {"Order ID": {"Sales Order": "Order ID"}}}, "Inventory Management": {"Attributes": ["Inventory ID", "Product ID", "Quantity", "Status"], "Primary key": ["Inventory ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}, "Purchase Order": {"Attributes": ["Purchase Order ID", "Supplier ID", "Raw Material ID", "Order Quantity", "Supplied Quantity", "Order Status"], "Primary key": ["Purchase Order ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Raw Material ID": {"Raw Material": "Raw Material ID"}}}, "Delivery Record": {"Attributes": ["Delivery Record ID", "Order ID", "Delivery Time", "Delivery Location", "Status"], "Primary key": ["Delivery Record ID"], "Foreign key": {"Order ID": {"Sales Order": "Order ID"}}}, "Financial Record": {"Attributes": ["Transaction ID", "Transaction Type", "Amount", "Date", "Status"], "Primary key": ["Transaction ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Contact Information"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Recipe ID"], "Primary key": ["Product ID"], "Foreign key": {"Recipe ID": {"Pizza Recipe": "Recipe ID"}}}, "Pizza Recipe": {"Attributes": ["Recipe ID", "Raw Material ID", "Usage Amount"], "Primary key": ["Recipe ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41ab1f", "question": "The supermarket cash register system is designed as follows:\nThe system supports multiple billing methods, each with a name and a calculation function, such as normal billing, discounts, and full amount rebates.\nEach transaction record contains a transaction ID, input amount, selected billing method ID, actual payment amount, and transaction time.\nThe system calculates the actual payment amount based on the selected billing method and records the transaction details for subsequent queries and analysis.", "answer": {"Billing Method": {"Attributes": ["Billing Method ID", "Name", "Calculation Function"], "Primary key": ["Billing Method ID"], "Foreign key": {}}, "Transaction Record": {"Attributes": ["Transaction ID", "Input Amount", "Billing Method ID", "Actual Payment Amount", "Transaction Time"], "Primary key": ["Transaction ID"], "Foreign key": {"Billing Method ID": {"Billing Method": "Billing Method ID"}}}}}
{"id": "67552f0b13602ec03b41ab26", "question": "Business Requirements Description for the Shared Bicycle Management System:\nThe shared bicycle company manages multiple users, each with a user ID, phone number, name, credit, and status.\nThe company manages multiple bicycles, each with a bicycle ID, location, status, and unlock code.\nThe company records multiple trips, each trip requiring the recording of user and bicycle usage information, including bicycle number, start time, end time, cost, and payment status.\nThe company manages multiple fault records, each fault involving the user number who encountered the fault, bicycle number, fault description, and reporting time.\nThe company also manages billing rules, each rule including the billing method, unit price, and minimum fee.", "answer": {"User": {"Attributes": ["User ID", "User Phone Number", "User Name", "User Credit", "User Status"], "Primary key": ["User ID"], "Foreign key": {}}, "Bicycle": {"Attributes": ["Bicycle ID", "Bicycle Location", "Bicycle Status", "Bicycle Unlock Code"], "Primary key": ["Bicycle ID"], "Foreign key": {}}, "Trip Record": {"Attributes": ["User ID", "Bicycle ID", "Start Time", "End Time", "Cost", "Payment Status", "Rule ID"], "Primary key": ["User ID", "Bicycle ID", "Start Time"], "Foreign key": {"Bicycle ID": {"Bicycle": "Bicycle ID"}, "User ID": {"User": "User ID"}, "Rule ID": {"Fault Record": "Rule ID"}}}, "Fault Record": {"Attributes": ["User ID", "Bicycle ID", "Reporting Time", "Fault Description"], "Primary key": ["User ID", "Bicycle ID", "Reporting Time"], "Foreign key": {"Bicycle ID": {"Bicycle": "Bicycle ID"}, "User ID": {"User": "User ID"}}}, "Billing Rule": {"Attributes": ["Rule ID", "Billing Method", "Unit Price", "Minimum Fee"], "Primary key": ["Rule ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41ab36", "question": "System Description:\nThis is an information management platform used by M Group to effectively manage the employees of its subsidiaries, meeting the company\u2019s various business management needs.\nBusiness Requirements Description:\n1.Subsidiary Management:\nThe system records information about each subsidiary, including subsidiary ID, name, manager ID, contact address, and phone number. Each subsidiary has a unique subsidiary ID, one manager, and multiple business departments.\n2.Business Department Management:\nThe system records information about each business department, including department ID, name, address, phone number, and affiliated subsidiary ID. Each business department has a unique department ID, one supervisor, and multiple employees.\n3.Employee Management:\nThe system records information about each employee, including employee ID, name, position, affiliated department ID, phone number, family member names, and relationships. Each employee has a unique employee ID and belongs to only one department.\n4.Identity Verification:\nUsers must undergo identity verification before logging into the system.\n5.Real Estate Information Management:\nReal estate agents can log into the system and enter information about the properties they are responsible for selling. However, this information must be approved by the system administrator.\n6.Real Estate Information Export:\nSystem administrators can export a list of all real estate information. They will periodically summarize and update the list, removing properties that are no longer for sale.", "answer": {"Subsidiary": {"Attributes": ["Subsidiary ID", "Name", "Manager ID", "Contact Address", "Phone"], "Primary key": ["Subsidiary ID"], "Foreign key": {"Manager ID": {"Employee": "Employee ID"}}}, "Business Department": {"Attributes": ["Department ID", "Name", "Address", "Phone", "Subsidiary ID"], "Primary key": ["Department ID"], "Foreign key": {"Subsidiary ID": {"Subsidiary": "Subsidiary ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Department ID", "Phone", "Family Member Name", "Family Member Relationship"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Business Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41ab37", "question": "This is a real estate information management system. For property management, the system records basic information for each property, including unique property ID, property certificate, address, construction year, built area, sale price, property photos and sales status (for sale, sold, off market), with additional apartment-specific information required for apartment-type properties. For real estate agent management, the system records basic information for each agent, including unique agent ID, name, home address and contact number. Each property can only be managed by one agent at a time, and the system needs to record the responsibility period (start time, end time). For user management, the system records basic information for each user, including unique user ID, username, password and role (real estate agent or system administrator). Users need to pass authentication before logging into the system. After logging in, real estate agents can enter information for properties they are responsible for selling, but this requires system administrator approval and authorization. All users can query property information, while system administrators can also export property information lists and periodically organize sales status, removing properties that are no longer for sale from the system.", "answer": {"Property": {"Attributes": ["Property ID", "Property certificate", "Address", "Construction year", "Built area", "Sale price", "Property photos", "Sales status", "Is apartment"], "Primary key": ["Property ID"], "Foreign key": {}}, "Agent": {"Attributes": ["Name", "Home address", "Contact number", "Agent ID"], "Primary key": ["Agent ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Username", "Password", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Responsibility": {"Attributes": ["Agent ID", "Property ID", "Responsibility start time", "Responsibility end time"], "Primary key": ["Agent ID", "Property ID"], "Foreign key": {"Property ID": {"Property": "Property ID"}, "Agent ID": {"Agent": "Agent ID"}}}}}
{"id": "67552f0b13602ec03b41ab46", "question": "This is an agricultural crop monitoring system used to track and manage crop, environmental, and sensor data based on pre-defined monitoring and processing rules.\nBusiness Requirements Description:\n1.Information Maintenance:\nAgricultural experts maintain the monitoring rules for crops, environments, and other monitoring data. The system records the crop ID, crop name, and crop type.\n2.Data Collection:\nThe system collects continuous monitoring data from sensors, which includes sensor ID, temperature, rainfall, light intensity, and sensor location. After parsing, the system records the data type, collection time, and data value.\n3.Data Processing:\nReal-time monitoring data is analyzed according to the monitoring rules, and the analysis results are visualized and stored. Historical monitoring data is statistically processed and predicted, with the prediction results also visualized and stored.", "answer": {"Crop": {"Attributes": ["Crop ID", "Crop Name", "Crop Type"], "Primary key": ["Crop ID"], "Foreign key": {}}, "Sensor": {"Attributes": ["Sensor ID", "Temperature", "Rainfall", "Light Intensity", "Sensor Location"], "Primary key": ["Sensor ID"], "Foreign key": {}}, "Sensor Monitoring Crop": {"Attributes": ["Crop ID", "Sensor ID", "Data Type", "Collection Time", "Data Value"], "Primary key": ["Crop ID", "Sensor ID"], "Foreign key": {"Sensor ID": {"Sensor": "Sensor ID"}, "Crop ID": {"Crop": "Crop ID"}}}}}
{"id": "67552f0b13602ec03b41ab4a", "question": "Business Requirements Description for the Vehicle Maintenance Management System: The maintenance company manages multiple clients, each with a client number, client name, client type, discount rate, contact person, and contact phone number. The company manages multiple vehicles, each with a license plate number, model, color, and vehicle category. Each vehicle belongs to only one client. The company manages multiple employees, each with an employee number, employee name, position (such as salesperson, maintenance worker, and supervisor), phone number, and home address. Each employee belongs to only one department. The company manages multiple departments, each with a department number, name, supervisor, and phone number. Each maintenance task requires recording the maintenance order number, license plate number, maintenance content, man-hours, and the information of the maintenance worker performing the task.", "answer": {"Client": {"Attributes": ["Client Number", "Client Name", "Client Type", "Discount Rate", "Client Contact Person", "Contact Phone Number"], "Primary key": ["Client Number"], "Foreign key": {}}, "Vehicle": {"Attributes": ["License Plate Number", "Vehicle Model", "Vehicle Color", "Vehicle Category", "Client Number"], "Primary key": ["License Plate Number"], "Foreign key": {"Client Number": {"Client": "Client Number"}}}, "Employee": {"Attributes": ["Employee Number", "Employee Name", "Employee Position", "Employee Phone Number", "Employee Home Address", "Department Number"], "Primary key": ["Employee Number"], "Foreign key": {"Department Number": {"Department": "Department Number"}}}, "Department": {"Attributes": ["Department Number", "Department Name", "Department Phone Number", "Supervisor Employee Number"], "Primary key": ["Department Number"], "Foreign key": {"Supervisor Employee Number": {"Employee": "Employee Number"}}}, "Maintenance Task": {"Attributes": ["Maintenance Order Number", "License Plate Number", "Maintenance Content", "Maintenance Man-Hours", "Maintenance Worker Number"], "Primary key": ["Maintenance Order Number"], "Foreign key": {"Maintenance Worker Number": {"Employee": "Employee Number"}, "License Plate Number": {"Vehicle": "License Plate Number"}}}}}
{"id": "67552f0b13602ec03b41ab51", "question": "Business Requirements Description:\nThis system supports a payment platform for managing users, payment operations, intermediaries, and the status of user payments.\n1.Payment Platform:\nEach payment platform needs to record its basic information, including platform ID, platform name, and platform address.\n2.User:\nEach user needs to record their basic information, including user ID, name, contact information, and registration method.\n3.Intermediary:\nEach intermediary needs to record their basic information, including intermediary ID, intermediary name, intermediary status, and operation ID.\n4.Operation:\nEach operation needs to record detailed information, including operation ID, operation type, operation amount, operation time, and platform ID.\n5.User Payment Operation:\nRecords each payment operation a user participates in, including operation ID, user ID, payment status, and payment time. A user can participate in multiple payment operations, and each payment platform can include multiple operations.\n6.Each operation may contain multiple intermediaries.", "answer": {"Payment Platform": {"Attributes": ["Platform ID", "Platform Name", "Platform Address"], "Primary key": ["Platform ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Contact Information", "Registration Method"], "Primary key": ["User ID"], "Foreign key": {}}, "Operation": {"Attributes": ["Operation ID", "Operation Type", "Operation Amount", "Operation Time", "Platform ID"], "Primary key": ["Operation ID"], "Foreign key": {"Platform ID": {"Payment Platform": "Platform ID"}}}, "Intermediary": {"Attributes": ["Intermediary ID", "Intermediary Name", "Intermediary Status", "Operation ID"], "Primary key": ["Intermediary ID"], "Foreign key": {"Operation ID": {"Operation": "Operation ID"}}}, "User Payment Operation": {"Attributes": ["Operation ID", "User ID", "Payment Status", "Payment Time"], "Primary key": ["Operation ID", "User ID"], "Foreign key": {"Operation ID": {"Operation": "Operation ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a7a9", "question": "The Agricultural Supply Chain Management System needs to manage multiple suppliers and customers.\nEach supplier has a Supplier ID, name, address, contact information, and can supply multiple products.\nEach customer has a Customer ID, name, address, contact information, and can purchase multiple products.\nEach product has a Product ID, product name, and unit price.\nRecord the products that a supplier can supply.\nRecord each purchase, including the purchase date, Supplier ID, Customer ID, Product ID, and quantity.", "answer": {"Supplier": {"Attributes": ["Supplier ID", "Supplier Name", "Address", "Contact Information"], "Primary key": ["Supplier ID"], "Foreign key": {}}, "Customer": {"Attributes": ["Customer ID", "Customer Name", "Address", "Contact Information"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product Name", "Unit Price"], "Primary key": ["Product ID"], "Foreign key": {}}, "Supplier Product Supply": {"Attributes": ["Supplier ID", "Product ID"], "Primary key": ["Supplier ID", "Product ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Product ID": {"Product": "Product ID"}}}, "Purchase Record": {"Attributes": ["Purchase Date", "Supplier ID", "Customer ID", "Product ID", "Quantity"], "Primary key": ["Purchase Date", "Supplier ID", "Customer ID", "Product ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Product ID": {"Product": "Product ID"}, "Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0a13602ec03b41a81b", "question": "The wetland protection organization needs to manage multiple wetland protection areas. Each protection area has an ID, name, location, and person in charge. The system shall record the species, quantity, and growth status of flora and fauna in each protection area. Each record shall include the recording time, recording personnel, species, and quantity of flora and fauna. The system also needs to record environmental changes within the protection areas, including temperature, humidity, rainfall, etc., and specify the time and location of the changes. The system can automatically record environmental changes through sensors, and there is no need to store recorder information here.", "answer": {"Wetland Protection Area": {"Attributes": ["Protection Area ID", "Name", "Location", "administrator"], "Primary key": ["Protection Area ID"], "Foreign key": {"administrator": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Name"], "Primary key": ["User ID"], "Foreign key": {}}, "Flora and Fauna": {"Attributes": ["Organism ID", "Name", "Species"], "Primary key": ["Organism ID"], "Foreign key": {}}, "Biological Record": {"Attributes": ["Record ID", "Recorder", "Recording Time", "Protection Area ID"], "Primary key": ["Record ID"], "Foreign key": {"Protection Area ID": {"Wetland Protection Area": "Protection Area ID"}, "Recorder": {"User": "User ID"}}}, "Environmental Record": {"Attributes": ["Record ID", "Protection Area ID", "Recording Time", "Recording Location", "Temperature", "Humidity", "Rainfall"], "Primary key": ["Record ID"], "Foreign key": {"Protection Area ID": {"Wetland Protection Area": "Protection Area ID"}}}, "Biological Record Contains Flora and Fauna Information": {"Attributes": ["Biological Record ID", "Organism ID", "Quantity", "Growth Status"], "Primary key": ["Biological Record ID", "Organism ID"], "Foreign key": {"Organism ID": {"Flora and Fauna": "Organism ID"}, "Biological Record ID": {"Biological Record": "Record ID"}}}}}
{"id": "67552f0a13602ec03b41a83d", "question": "\"A black metal mining company owns multiple mines, each with various mineral resources. Mineral resources have Attributes such as resource ID, name, reserves, discovery date, and the mine where it was first discovered. Mines have Attributes such as mine ID, name, location, and person in charge. Each extraction of mineral resources must record data including extraction date, extraction volume, and extraction cost. The information system must be capable of statistical analysis of the extraction of mineral resources.\"", "answer": {"Mine": {"Attributes": ["Mine ID", "Name", "Location", "Person in Charge"], "Primary key": ["Mine ID"], "Foreign key": {}}, "Mineral Resource": {"Attributes": ["Resource ID", "Name", "Reserves", "Discovery Date", "First Discovered Mine"], "Primary key": ["Resource ID"], "Foreign key": {"First Discovered Mine": {"Mine": "Mine ID"}}}, "Mining Record": {"Attributes": ["Record ID", "Mineral Resource", "Mining Date", "Mining Volume", "Mining Cost", "Mine"], "Primary key": ["Record ID"], "Foreign key": {"Mineral Resource": {"Mineral Resource": "Resource ID"}, "Mine": {"Mine": "Mine ID"}}}}}
{"id": "67552f0a13602ec03b41a8ab", "question": "The database is a system for managing code lists and their relationships, such as data standardization and mapping systems in the fields of finance, medical care or administrative management.\n\nMain functions\n\n1. Code relationship management: The system can store and manage the relationship between different code systems to ensure the standardization and consistency of the code.\n2. Time validity control: Each code relationship record has an effective start date and end date, and the system can ensure the validity of the code relationship within a specific time period.\n3. Audit tracking: Record the creator, creation time, modifier, and modification time of each record to facilitate auditing and tracking the change history of data.\n4. Uniqueness constraint: Ensure that each code relationship is unique in a specific code system combination to prevent duplicate data.\n5. Foreign key association: Associate to the KODELISTE table through a Foreign key to ensure the referential integrity of the code relationship.", "answer": {"CODELIST": {"Attributes": ["CODEWORK", "CODE"], "Primary key": ["CODEWORK", "CODE"], "Foreign key": {}}, "CODELIST_RELATION": {"Attributes": ["ID", "CODEWORK1", "CODE1", "CODEWORK2", "CODE2", "VALID_FROM", "VALID_TO", "CREATED_BY", "CREATED_TIME", "UPDATED_BY", "UPDATED_TIME"], "Primary key": ["ID"], "Foreign key": {"CODEWORK1, CODE1": {"CODELIST": ["CODEWORK", "CODE"]}, "CODEWORK2, CODE2": {"CODELIST": ["CODEWORK", "CODE"]}}}}}
{"id": "67552f0a13602ec03b41a8ce", "question": "This backend system is designed for managing work order processing information across different support departments.\n1.Department Management:The system allows you to create, modify, and delete different support departments. For each department, you can set:\nDepartment name, description, and email address.Sorting order. Whether the department only allows customers to submit work orders.Whether work orders are only responded to via email pipeline.Whether auto-replies are disabled.Whether the department is hidden from users.\n2.Email Configuration:For each department, configure the email server\u2019s host address, port number, login username, and password, allowing the system to automatically handle emails.\n3.Employee Email Server Maintenance:\nEmployees can maintain the email server in real-time.", "answer": {"Department": {"Attributes": ["Department ID", "Name", "Description", "Email", "Sorting Order", "Allow Customer Work Orders", "Reply by Email Only", "Disable Auto Reply", "Hide Department", "Request Feedback"], "Primary key": ["Department ID"], "Foreign key": {}}, "Email Configuration": {"Attributes": ["Configuration ID", "Department ID", "Host Address", "Port Number", "Login Username", "Login Password"], "Primary key": ["Configuration ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Employee Table": {"Attributes": ["Employee ID", "Name", "Phone", "Gender", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {}}, "Employee Maintenance Email Server": {"Attributes": ["Employee ID", "Server ID", "Maintenance Time"], "Primary key": ["Employee ID", "Server ID", "Maintenance Time"], "Foreign key": {"Employee ID": {"Employee Table": "Employee ID"}, "Server ID": {"Email Configuration": "Configuration ID"}}}}}
{"id": "67552f0a13602ec03b41a8d1", "question": "The database is a system for real-time communication or message push. The main functions include:\n\n1. Application management: The system should manage different applications, each with a unique AppID and name.\n2. Channel management: Manage channels in applications, support creation, closing, persistence, privatization, online status, and push notifications.\n3. Client management: Manage client users of applications, each with a unique ID and user name.\n4. Channel subscription: Manage channels subscribed by client users, ensuring that each client can only appear once in each channel.\n5. Event logging: Record various events in the channel, including event type, timestamp, and payload content, and support quick query of events by channel ID and timestamp.", "answer": {"Channel Event Table": {"Attributes": ["Event ID", "Event Type", "Timestamp", "Payload Content", "Channel ID"], "Primary key": ["Event ID"], "Foreign key": {"Channel ID": {"Channel Table": "Channel ID"}}}, "Application Table": {"Attributes": ["Application ID", "Name"], "Primary key": ["Application ID"], "Foreign key": {}}, "Channel Table": {"Attributes": ["Channel ID", "Status", "Is Private", "Creation Time", "Belonging Application", "Creator"], "Primary key": ["Channel ID"], "Foreign key": {"Creator": {"User Table": "ID"}, "Belonging Application": {"Application Table": "Application ID"}}}, "User Table": {"Attributes": ["ID", "Username"], "Primary key": ["ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a8e1", "question": "This is a supply chain management system, mainly used for managing parts, suppliers, customers and order information. For parts management, the system records basic information of parts, including part number, name, specifications, unit price, inventory level, etc., with each part being available from multiple suppliers. For supplier management, the system stores detailed supplier information, including supplier ID, name, contact person, phone, email, credit rating, etc., records supplier geographical location information (country, region), and manages the parts that suppliers can provide along with their quotations. For customer management, the system maintains customer information, including customer ID, name, contact information, payment method, etc., records customer geographical location (country, region), and tracks customer order history and credit records. For order management, the system records basic order information, including order ID, order time, customer ID, delivery date, order status, etc., manages order details including specific parts, suppliers, quantity, unit price, total amount, etc., and supports order creation, modification, cancellation and other operations. For geographical location management, the system maintains basic country and region data, supports supplier and customer location associations, facilitating cross-regional supply chain analysis and management.", "answer": {"Part": {"Attributes": ["Part ID", "Name", "Specifications", "Unit price", "Inventory level"], "Primary key": ["Part ID"], "Foreign key": {}}, "Supplier": {"Attributes": ["Supplier ID", "Name", "Contact person", "Phone", "Email", "Credit rating", "Country", "Region", "Location ID"], "Primary key": ["Supplier ID"], "Foreign key": {"Location ID": {"Geographic location": "Location ID"}}}, "Customer": {"Attributes": ["Customer ID", "Name", "Contact information", "Payment method", "Country", "Region", "Location ID"], "Primary key": ["Customer ID"], "Foreign key": {"Location ID": {"Geographic location": "Location ID"}}}, "Geographic location": {"Attributes": ["Location ID", "Country", "Region"], "Primary key": ["Location ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order time", "Delivery date", "Order status", "Customer ID"], "Primary key": ["Order ID"], "Foreign key": {}}, "Order detail": {"Attributes": ["Order detail ID", "Quantity", "Unit price", "Total amount", "Order ID", "Part ID", "Supplier ID"], "Primary key": ["Order detail ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Order ID": {"Order": "Order ID"}, "Part ID": {"Part": "Part ID"}}}, "Supply": {"Attributes": ["Supplier ID", "Part ID", "Quote"], "Primary key": ["Supplier ID", "Part ID"], "Foreign key": {"Supplier ID": {"Supplier": "Supplier ID"}, "Part ID": {"Part": "Part ID"}}}}}
{"id": "67552f0a13602ec03b41a906", "question": "The system shall require explicit permission controls among different users, user groups, and roles to ensure security and compliance. The Access Control System (ACS) shall assist organizations in managing permissions across various levels, ensuring each user has appropriate access within the system, thereby preventing sensitive information leakage and misuse of operations.\n\nThe core objectives of the system include managing user information, roles, permissions, and policies. It shall provide system administrators with convenient user permission configuration tools while supporting the dynamic adjustment of permission relationships between users and roles. Common application scenarios include Content Management Systems (CMS), internal management platforms, and Customer Relationship Management (CRM) systems.\n\nPrimary functional requirements:\nUser management:\nRegistration, management, updating, and deletion of users.\nEach user shall possess a unique identifier (such as username or email) and personal information.\nRole management:\nThe system shall support the creation, management, and deletion of roles.\nEach role shall correspond to a set of permissions, which can be assigned to a role by an administrator, and then assigned to users.\nPermission management:\nPermissions may be set for operations, such as 'view', 'edit', 'delete', and 'create'.\nPermissions shall include access control to certain functional modules or data resources within the system.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Phone", "Email"], "Primary key": ["User ID"], "Foreign key": {}}, "Role": {"Attributes": ["Role ID", "Role Name", "Role Description"], "Primary key": ["Role ID"], "Foreign key": {}}, "User Role": {"Attributes": ["User ID", "Role ID", "Role Assignment Start Time", "Role Assignment End Time"], "Primary key": ["User ID", "Role ID", "Role Assignment Start Time"], "Foreign key": {"User ID": {"User": "User ID"}, "Role ID": {"Role": "Role ID"}}}, "Permission": {"Attributes": ["Permission ID", "Permission Name", "Permission Description"], "Primary key": ["Permission ID"], "Foreign key": {}}, "Role Permission Assignment": {"Attributes": ["Role ID", "Permission ID", "Permission Assignment Start Time", "Permission Assignment End Time"], "Primary key": ["Role ID", "Permission ID", "Permission Assignment Start Time"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a907", "question": "This database is an internal employee management system for an enterprise\n\nMain functions\n\n1. Department management:\nAdd, delete, and modify department information\nQuery department list\n\n2. Position management:\nAdd, delete, and modify position information, including position name and salary\nQuery position list, which can be filtered by department\n\n3. Employee management:\nAdd, delete, and modify employee information, including name, position, and superior manager\nQuery employee list, which can be filtered by department, position, or superior manager\nGenerate employee hierarchy chart, showing each employee's direct superiors and subordinates\nCalculate employee total salary, by department or position\n\n4. Management relationship:\nManage the superior-subordinate relationship between employees\nQuery a certain employee's direct subordinates or direct superiors\n\n5. Report generation:\nGenerate salary report for department and position\nGenerate detailed information report for employees", "answer": {"Department Table": {"Attributes": ["ID", "Name"], "Primary key": ["ID"], "Foreign key": {}}, "Position Table": {"Attributes": ["ID", "Name", "Salary", "Belonging Department"], "Primary key": ["ID"], "Foreign key": {"Belonging Department": {"Department Table": "ID"}}}, "Employee Table": {"Attributes": ["ID", "Employee First Name", "Employee Last Name", "Position ID", "Superior Employee"], "Primary key": ["ID"], "Foreign key": {"Superior Employee": {"Employee Table": "ID"}, "Position ID": {"Position Table": "ID"}}}}}
{"id": "67552f0a13602ec03b41a951", "question": "The business management system is described as follows:\nThe system manages multiple enterprises, with enterprise information including name and creation time.\nEach enterprise has multiple employees, with employee information including name, email, password, identification number, role, creation time, and update time.\nEach role has different hourly wages, daily working hours, and lunchtime.\nEach employee has multiple attendance records, with attendance record information including check-in time, remarks, and check-in location.\nAdditionally, employees can create to-do items, with to-do item information including task description, completion status, creation time, and update time.", "answer": {"enterprise": {"Attributes": ["Enterprise ID", "Enterprise Name", "Creation Time"], "Primary key": ["Enterprise ID"], "Foreign key": {}}, "employee": {"Attributes": ["Employee ID", "Enterprise ID", "Name", "Email", "Password", "Identification Number", "Role ID", "Creation Time", "Update Time"], "Primary key": ["Employee ID"], "Foreign key": {"Enterprise ID": {"enterprise": "Enterprise ID"}, "Role ID": {"role": "Role ID"}}}, "role": {"Attributes": ["Role ID", "Hourly Wage", "Daily Working Hours", "Lunch Time"], "Primary key": ["Role ID"], "Foreign key": {}}, "attendance record": {"Attributes": ["Employee ID", "Check-in Time", "Remarks", "Check-in Location"], "Primary key": ["Employee ID", "Check-in Time"], "Foreign key": {"Employee ID": {"employee": "Employee ID"}}}, "to-do item": {"Attributes": ["Employee ID", "Task Description", "Completion Status", "Creation Time", "Update Time"], "Primary key": ["Employee ID", "Creation Time"], "Foreign key": {"Employee ID": {"employee": "Employee ID"}}}}}
{"id": "67552f0a13602ec03b41a955", "question": "A content management system specification is as follows:\nThe system accommodates multiple users. User information includes User ID, Username, Password, Nickname, Gender, Creation Time, and Biography.      \nThe system contains multiple articles. Article information includes Article ID, Title, Author, Cover Image Link, Summary, Comment Permission, Status, Content, Number of Likes, Number of Dislikes, Number of Reads, and Creation Time.\nArticles can belong to multiple categories. Category information includes ID, Parent Category ID, Level, Name, Description, and Icon Link, supporting multi-level classification.\nUsers can comment on articles. Comment information includes Comment ID, Replied Comment ID, Article ID, User ID, Content, and Creation Time.", "answer": {"User": {"Attributes": ["User ID", "Username", "Password", "Nickname", "Gender", "Creation Time", "Biography"], "Primary key": ["User ID"], "Foreign key": {}}, "Article": {"Attributes": ["Article ID", "Title", "Author ID", "Cover Image Link", "Summary", "Comment Permission", "Status", "Content", "Number of Likes", "Number of Dislikes", "Number of Reads", "Creation Time"], "Primary key": ["Article ID"], "Foreign key": {"Author ID": {"User": "User ID"}}}, "Category": {"Attributes": ["ID", "Parent Category ID", "Level", "Name", "Description", "Icon Link"], "Primary key": ["ID"], "Foreign key": {"Parent Category ID": {"Category": "ID"}}}, "Comment Reply": {"Attributes": ["Comment ID", "Replied Comment ID", "Article ID", "User ID", "Content", "Creation Time"], "Primary key": ["Comment ID"], "Foreign key": {"Replied Comment ID": {"Comment": "Comment ID"}, "Article ID": {"Article": "Article ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0a13602ec03b41a97f", "question": "The database is a hospital management system, with primary functions including managing information of doctors, departments, wards, patients, and medicines, as well as recording patient and doctor visit records and medicine dispensing information. The system supports the management of various personnel within the hospital, records the patient diagnosis process, and tracks the usage of medications.\n\nThe system records all the doctors' information within the hospital, including the doctors' basic data and the department to which they belong. The system records doctor's ID, name, gender, title, years of service, phone number, and department ID.\n\nThe system records information of various departments within the hospital, including department name, person in charge, and basic department information, such as department ID, department name, total number of personnel, person in charge ID, location, and department phone number.\n\nThe system records the status of various wards within the hospital, including the number of beds and ward levels, such as ward ID, number of beds, ward level, and location.\n\nThe system records patients' basic information, diagnosis information, and ward information. Each patient has a unique ID. The patient's basic information includes patient ID, name, gender, age, contact information, consultation date, diagnosis description, and ward ID.\n\nThe system records information about medicines of the hospital, including medicine name, inventory quantity, and price, such as medicine ID, medicine name, inventory quantity, sales price, and remarks.\n\nThe system records the consultation information between patients and doctors, including consultation time, diagnosis description, and treatment results, such as patient ID, doctor ID, consultation time, diagnosis description, treatment results, and remarks.\n\nThe system records each patient's medication retrieval information, including medicine name, quantity retrieved, and retrieval time, such as patient ID, medicine ID, retrieval time, and retrieval quantity.", "answer": {"Doctor": {"Attributes": ["ID", "Name", "Gender", "Title", "Years of Service", "Phone Number", "Department ID"], "Primary key": ["ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Department": {"Attributes": ["Department ID", "Department Name", "Total Number of Personnel", "Person in Charge ID", "Location", "Department Phone Number"], "Primary key": ["Department ID"], "Foreign key": {"Person in Charge ID": {"Doctor": "ID"}}}, "Ward": {"Attributes": ["Ward ID", "Number of Beds", "Ward Level", "Location"], "Primary key": ["Ward ID"], "Foreign key": {}}, "Patient": {"Attributes": ["Patient ID", "Name", "Gender", "Age", "Contact Information", "Ward ID"], "Primary key": ["Patient ID"], "Foreign key": {"Ward ID": {"Ward": "Ward ID"}}}, "Medicine": {"Attributes": ["Medicine ID", "Medicine Name", "Inventory Quantity", "Sales Price", "Remarks"], "Primary key": ["Medicine ID"], "Foreign key": {}}, "Consultation Record": {"Attributes": ["Patient ID", "Doctor ID", "Consultation Time", "Diagnosis Description", "Treatment Results", "Remarks"], "Primary key": ["Patient ID", "Doctor ID", "Consultation Time"], "Foreign key": {"Doctor ID": {"Doctor": "ID"}, "Patient ID": {"Patient": "Patient ID"}}}, "Medication Dispensing": {"Attributes": ["Patient ID", "Medicine ID", "Medication Retrieval Time", "Quantity Retrieved"], "Primary key": ["Patient ID", "Medicine ID", "Medication Retrieval Time"], "Foreign key": {"Patient ID": {"Patient": "Patient ID"}, "Medicine ID": {"Medicine": "Medicine ID"}}}}}
{"id": "67552f0a13602ec03b41a98b", "question": "This is a C2C (Consumer-to-Consumer) second-hand goods trading platform, aimed at providing users with a safe and convenient environment for trading used items. For user account management, the system supports quick registration and login through phone numbers and email, provides real-name authentication functionality requiring users to upload ID card photos (front and back) and complete facial recognition to ensure transaction security, supports personal information maintenance including avatar, nickname, gender, age, location, personal introduction and other basic information, and provides account security settings including phone binding and email binding. For product management, the system supports users in publishing second-hand product information, including product title, detailed description, condition description, original price, selling price, etc., provides product content editing functionality with support for uploading up to 9 actual product photos, supports setting product categories, transaction location, price negotiation range, validity period, etc., and manages real-time product status including on sale, sold, removed, pending review, etc. For transaction management, the system records buyer user information and product information, transaction status, transaction time, transaction amount, transaction location, transaction method, and transaction evaluation.", "answer": {"User": {"Attributes": ["User ID", "Phone number", "Email", "Avatar URL", "Nickname", "Gender", "Age", "Location", "Personal introduction"], "Primary key": ["User ID"], "Foreign key": {}}, "Product": {"Attributes": ["Product ID", "Product title", "Detailed description", "Condition description", "Original price", "Selling price", "Product category", "Transaction location", "Price negotiation range", "Validity period", "Product status", "Seller ID"], "Primary key": ["Product ID"], "Foreign key": {"Seller ID": {"User": "User ID"}}}, "Transaction": {"Attributes": ["Buyer ID", "Product ID", "Transaction status", "Transaction time", "Transaction amount", "Transaction location", "Transaction method", "Transaction evaluation"], "Primary key": ["Buyer ID", "Product ID", "Transaction time"], "Foreign key": {"Buyer ID": {"User": "User ID"}, "Product ID": {"Product": "Product ID"}}}, "Product image": {"Attributes": ["Image ID", "Image URL", "Product ID"], "Primary key": ["Image ID"], "Foreign key": {"Product ID": {"Product": "Product ID"}}}}}
{"id": "67552f0a13602ec03b41a9bb", "question": "The database shall serve as a school sports event management system, managing information on various events, participants, results, and awards. It includes the following information:  \n\nRecords of participating students' basic information: Student ID, Name, Gender, Grade, Class, Contact Information  \n\nRecords of various school sports events: Event ID, Event Name, Event Type (such as running, long jump, throwing, etc.), Event Time  \n\nRecords of students registering for events: Student ID, Event ID, Registration Time  \n\nRecords of students' results in each event: Student ID, Event ID, Result, Event Date", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Grade", "Class", "Contact Information"], "Primary key": ["Student ID"], "Foreign key": {}}, "Event": {"Attributes": ["Event ID", "Name", "Event Time", "Number of Participants", "Competition Rules"], "Primary key": ["Event ID"], "Foreign key": {}}, "Competition Status": {"Attributes": ["Student ID", "Event ID", "Registration Time", "Competition Result"], "Primary key": ["Student ID", "Event ID", "Registration Time"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Event ID": {"Event": "Event ID"}}}}}
{"id": "67552f0a13602ec03b41a9d2", "question": "System Description\nDescribes a school management system\n\nMain functions of the system\n1: Student management: including basic information of students (such as student ID, name, gender, age) and accommodation information (such as dormitory number, building number, number of people, administrator)\n2: Class management: including basic information of classes (such as class number) and classroom information\n3: Sports team management: including basic information of sports teams (such as team name, activity time, coach, activity venue)\n4: School management: including basic information of schools (such as school name) and information of sports teams", "answer": {"Student Table": {"Attributes": ["Student ID", "Name", "Gender", "Age", "Dormitory ID", "Class ID"], "Primary key": ["Student ID"], "Foreign key": {"Dormitory ID": {"Schema 5": "Dormitory ID"}, "Class ID": {"Class Table": "Class ID"}}}, "Class Table": {"Attributes": ["Class ID", "Class Teacher", "Number of Students", "Location"], "Primary key": ["Class ID"], "Foreign key": {}}, "Sports Team Table": {"Attributes": ["Team Name", "Activity Time", "Coach", "Activity Venue", "Team ID", "Affiliated School"], "Primary key": ["Team ID"], "Foreign key": {"Affiliated School": {"School Table": "School ID"}}}, "School Table": {"Attributes": ["School ID", "School Name"], "Primary key": ["School ID"], "Foreign key": {}}, "Dormitory Table": {"Attributes": ["Dormitory ID", "Building Number", "Administrator", "Dormitory Capacity"], "Primary key": ["Dormitory ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9d6", "question": "This is a student management system. The system manages student information (student ID, name, gender, age, etc.), class information (class name, major, classroom, etc.), sports team information (team name, activity time, coach, etc.), and dormitory information (dormitory number, building number, administrator, number of residents, etc.). The system also maintains the relationships between students and classes, students and sports teams, and students and dormitories.\n", "answer": {"Student": {"Attributes": ["Student ID", "Name", "Gender", "Age", "Class ID", "Dormitory number", "Building number"], "Primary key": ["Student ID"], "Foreign key": {"Dormitory number": {"Dormitory": "Dormitory number"}, "Building number": {"Dormitory": "Building number"}, "Class ID": {"Class": "Class ID"}}}, "Class": {"Attributes": ["Class ID", "Class name", "Major", "Classroom"], "Primary key": ["Class ID"], "Foreign key": {}}, "Sports team": {"Attributes": ["Team ID", "Team name", "Activity time", "Coach"], "Primary key": ["Team ID"], "Foreign key": {}}, "Dormitory": {"Attributes": ["Dormitory number", "Building number", "Administrator", "Number of residents"], "Primary key": ["Dormitory number", "Building number"], "Foreign key": {}}, "Team membership": {"Attributes": ["Student ID", "Team ID"], "Primary key": ["Student ID", "Team ID"], "Foreign key": {"Student ID": {"Student": "Student ID"}, "Team ID": {"Sports team": "Team ID"}}}}}
{"id": "67552f0a13602ec03b41a9de", "question": "Business Requirements Description:\nThis is a task management system with the following main features:\n1.Task Management:Create, assign, track, and complete tasks.Each task includes:Task ID, Task Name, Task Description, Task Deadline, and Task Progress.Task Type, Task Status, and Task Priority.Each task is assigned to a user.\n2.User Management:Add, delete, and manage users.Each user has a unique User ID, Username, Password, and Email.Each user has a fixed role.\n3.Role Management:Define and assign user roles.Each role includes:Role ID, Role Name, and Role Description.\n4.Task Type Management:Define and manage different task types.Each task type includes:Task Type ID, Task Type Name, and Task Type Description.\n5.Task Status Management:Track task statuses (e.g., To Do, In Progress, Completed), including the status name and description.\n6.Task Priority Management:Set task priorities.Each priority includes:\nTask Priority ID, Task Priority Name, and Task Priority Description.", "answer": {"Task Table": {"Attributes": ["Task ID", "Task Name", "Task Description", "Task Type ID", "Task Status ID", "Task Priority ID", "Task Deadline", "Assigned User ID", "Task Progress"], "Primary key": ["Task ID"], "Foreign key": {"Task Priority ID": {"Task Priority": "Task Priority ID"}, "Task Status ID": {"Task Status": "Task Status ID"}, "Task Type ID": {"Task Type": "Task Type ID"}, "Assigned User ID": {"User": "User ID"}}}, "User": {"Attributes": ["User ID", "Username", "Password", "Email", "Role ID"], "Primary key": ["User ID"], "Foreign key": {"Role ID": {"Role Table": "Role ID"}}}, "Role Table": {"Attributes": ["Role ID", "Role Name", "Role Description"], "Primary key": ["Role ID"], "Foreign key": {}}, "Task Type": {"Attributes": ["Task Type ID", "Task Type Name", "Task Type Description"], "Primary key": ["Task Type ID"], "Foreign key": {}}, "Task Status": {"Attributes": ["Task Status ID", "Task Status Name", "Task Status Description"], "Primary key": ["Task Status ID"], "Foreign key": {}}, "Task Priority": {"Attributes": ["Task Priority ID", "Task Priority Name", "Task Priority Description"], "Primary key": ["Task Priority ID"], "Foreign key": {}}}}
{"id": "67552f0a13602ec03b41a9fc", "question": "the database is an aircraft information management system, primarily used for managing airlines' aircraft, flights, crew members, maintenance records, and passenger information. the main functions of the system include recording basic aircraft information, flight scheduling, crew allocation, maintenance records; tracking passengers' flight reservations and ticket purchases; providing inquiries into aircraft maintenance history and flight information.\n\nthe system stores basic aircraft information.\nfields: aircraft id, aircraft model, manufacture date, maximum passenger capacity, aircraft status, affiliated airline\nthe system records each aircraft's basic data, such as aircraft model, manufacture date, maximum passenger capacity, current status (e.g., under maintenance, awaiting flight, in-flight), and associates it with the affiliated airline.\n\nthe system stores information of the crew members (including captain, co-pilot, etc.).\nfields: crew member id, name, gender, position, phone\nthe system records crew members' personal information, including name, position, and contact details, facilitating the management of crew members for each flight.\n\nthe system stores basic passenger information.\nfields: passenger id, name, gender, identification number, phone\nthe system records detailed passenger information, such as name, gender, identification number, and contact details, supporting passenger identification management and flight arrangements.\n\nthe system records detailed flight information, including departure and landing times, flight number, etc.\nfields: flight id, aircraft id, responsible captain id, departure airport, landing airport, departure time, landing time\nthis data is used to manage basic flight information, including flight number, departure and landing airports, aircraft id, and flight times, associating the aircraft id with the aircraft table and responsible captain id with the crew member table.\n\nthe system records the maintenance history of aircraft.\nfields: maintenance personnel id, aircraft id, maintenance date, maintenance description, maintenance type\nthis data associates maintenance personnel (crew members) and aircraft, recording maintenance date, maintenance details, etc., to facilitate tracing the maintenance history of aircraft.\n\nthe system records passenger ticket purchase information.\nfields: passenger id, flight id, booking time, seat number, ticket price\nthe system records passenger booking information, including the purchased flight, seat number, ticket price, and booking time, associating passengers with flights.", "answer": {"Aircraft": {"Attributes": ["Aircraft ID", "Aircraft Model", "Manufacture Date", "Maximum Passenger Capacity", "Aircraft Status", "Affiliated Airline"], "Primary key": ["Aircraft ID"], "Foreign key": {}}, "Crew Member": {"Attributes": ["Crew Member ID", "Name", "Gender", "Position", "Phone"], "Primary key": ["Crew Member ID"], "Foreign key": {}}, "Passenger": {"Attributes": ["Passenger ID", "Name", "Gender", "Identification Number", "Phone"], "Primary key": ["Passenger ID"], "Foreign key": {}}, "Flight": {"Attributes": ["Flight ID", "Aircraft ID", "Responsible Captain ID", "Departure Airport", "Landing Airport", "Departure Time", "Landing Time"], "Primary key": ["Flight ID"], "Foreign key": {"Responsible Captain ID": {"Crew Member": "Crew Member ID"}, "Aircraft ID": {"Aircraft": "Aircraft ID"}}}, "Maintenance Record": {"Attributes": ["Maintenance Personnel ID", "Aircraft ID", "Maintenance Date", "Maintenance Description", "Maintenance Type"], "Primary key": ["Maintenance Personnel ID", "Aircraft ID", "Maintenance Date"], "Foreign key": {"Maintenance Personnel ID": {"Crew Member": "Crew Member ID"}, "Aircraft ID": {"Aircraft": "Aircraft ID"}}}, "Ticket Order": {"Attributes": ["Passenger ID", "Flight ID", "Booking Time", "Seat Number", "Ticket Price"], "Primary key": ["Passenger ID", "Flight ID", "Booking Time"], "Foreign key": {"Passenger ID": {"Passenger": "Passenger ID"}, "Flight ID": {"Flight": "Flight ID"}}}}}
{"id": "67552f0b13602ec03b41aa2e", "question": "The database is a venue management system with primary functions of managing venues, users, equipment, reservations, and venue evaluations. The system allows users to reserve venues, assess venue facilities, and record equipment usage. The database includes the following main tables:\n\nRecords the basic information of venues, including venue name, type, area, address, and more. Key fields include: Venue ID, Name, Type, Area Size, Address, Status, Creation Time, Last Maintenance Time, Maximum Capacity. This data is used to manage the basic information of all venues.\n\nRecords all user information in the system, including user name, phone number, email, and more. Key fields include: User ID, Name, Phone Number, Email, Creation Time. This data is used to manage the identity information of system users.\n\nRecords equipment information related to venues, including equipment name, start usage time, last maintenance time, and the venue to which the equipment belongs. Key fields include: Equipment ID, Equipment Name, Start Usage Time, Last Maintenance Time, Venue ID. This data is used to manage the basic condition of equipment within venues.\n\nRecords user reservation information for venues, including reservation time, status, and reservation cancellation time. Key fields include: User ID, Venue ID, Start Time, End Time, Reservation Status, Reservation Success Time, Reservation Cancellation Time. This data is used to manage users' venue reservation records.\n\nRecords user evaluations of venues, including evaluation content and rating. Key fields include: User ID, Venue ID, Evaluation Time, Evaluation Content, Rating. This data is used to manage user feedback information on venues.", "answer": {"Venue": {"Attributes": ["Venue ID", "Name", "Type", "Area Size", "Address", "Status", "Creation Time", "Last Maintenance Time", "Maximum Capacity"], "Primary key": ["Venue ID"], "Foreign key": {}}, "User": {"Attributes": ["User ID", "Name", "Phone Number", "Email", "Creation Time"], "Primary key": ["User ID"], "Foreign key": {}}, "Equipment": {"Attributes": ["Equipment ID", "Equipment Name", "Start Usage Time", "Last Maintenance Time", "Venue ID"], "Primary key": ["Equipment ID"], "Foreign key": {"Venue ID": {"Venue": "Venue ID"}}}, "Venue Reservation": {"Attributes": ["User ID", "Venue ID", "Start Time", "End Time", "Reservation Status", "Reservation Success Time", "Reservation Cancellation Time"], "Primary key": ["User ID", "Venue ID", "Reservation Success Time"], "Foreign key": {"Venue ID": {"Venue": "Venue ID"}, "User ID": {"User": "User ID"}}}, "Venue Evaluation": {"Attributes": ["User ID", "Venue ID", "Evaluation Time", "Evaluation Content", "Rating"], "Primary key": ["User ID", "Venue ID", "Evaluation Time"], "Foreign key": {"Venue ID": {"Venue": "Venue ID"}, "User ID": {"User": "User ID"}}}}}
{"id": "67552f0b13602ec03b41aa60", "question": "the database is a material terminal distribution management system, with its primary functions being the efficient management of material storage, dispatch, inventory management, and transportation processes. the system can record basic information of materials, inventory status, warehouse information, transportation vehicles, and driver situations, while also tracking the history of material transportation and storage to ensure controllable material circulation. below is the database table design and business requirements description of the system:\n\n\nfunction: used to record the basic information of all materials. material id is the unique identifier. each material includes information such as name, type, specification, weight, volume, and source location for management and tracking purposes.\n\n\nfunction: used to record information about the warehouses where materials are stored. includes warehouse id, name, address, type (e.g., storage, sorting), maximum capacity, current inventory level, and remaining capacity, helping manage the storage capacity and usage of warehouses.\n\n\nfunction: records information about all vehicles used for transporting materials, including vehicle type (e.g., truck, trailer), license plate number, maximum load, current load, and assigned driver id. this table helps manage transportation tools and their status.\n\n\nfunction: records information about all drivers, including name, gender, phone number, driving license number, and age.\n\nfunction: used to record the storage status of materials, including material id, the warehouse they are in, storage time, storage quantity, and notes, helping trace the storage history of materials and the increase in current inventory.\n\n\nfunction: records the dispatch status of materials, including material id, dispatch time, dispatch quantity, the warehouse they are in, and notes, used to track the outflow process of materials and ensure the accuracy of material inventory.\n\n\nfunction: records information for each material transportation task, including the materials transported, the vehicle used, transportation start time, destination, and driver id. this table is used to manage the transportation process of materials, ensuring materials arrive at their destination on time.", "answer": {"Material": {"Attributes": ["Material ID", "Name", "Type", "Specification", "Weight", "Volume", "Source Location"], "Primary key": ["Material ID"], "Foreign key": {}}, "Warehouse": {"Attributes": ["Warehouse ID", "Name", "Address", "Type", "Maximum Capacity", "Current Inventory Level", "Remaining Capacity"], "Primary key": ["Warehouse ID"], "Foreign key": {}}, "Vehicle": {"Attributes": ["Vehicle ID", "Vehicle Type", "License Plate Number", "Maximum Load", "Current Load", "Assigned Driver ID"], "Primary key": ["Vehicle ID"], "Foreign key": {"Assigned Driver ID": {"Driver": "Driver ID"}}}, "Driver": {"Attributes": ["Driver ID", "Name", "Gender", "Phone Number", "Driving License Number", "Age"], "Primary key": ["Driver ID"], "Foreign key": {}}, "Material Storage": {"Attributes": ["Material ID", "Warehouse ID", "Storage Time", "Storage Quantity", "Notes"], "Primary key": ["Material ID", "Warehouse ID", "Storage Time"], "Foreign key": {"Warehouse ID": {"Warehouse": "Warehouse ID"}, "Material ID": {"Material": "Material ID"}}}, "Material Dispatch": {"Attributes": ["Material ID", "Warehouse ID", "Dispatch Time", "Dispatch Quantity", "Notes"], "Primary key": ["Material ID", "Warehouse ID", "Dispatch Time"], "Foreign key": {"Warehouse ID": {"Warehouse": "Warehouse ID"}, "Material ID": {"Material": "Material ID"}}}, "Material Transportation": {"Attributes": ["Vehicle ID", "Material ID", "Transportation Start Time", "Destination", "Driver ID"], "Primary key": ["Vehicle ID", "Material ID", "Transportation Start Time"], "Foreign key": {"Driver ID": {"Driver": "Driver ID"}, "Material ID": {"Material": "Material ID"}, "Vehicle ID": {"Vehicle": "Vehicle ID"}}}}}
{"id": "67552f0b13602ec03b41aa64", "question": "The database is utilized for managing data on the network cultural relics protection platform. Its primary functions include recording basic relic information, repair history, exhibition information, and environmental monitoring data. Through the management and association of these data, the full lifecycle protection of cultural relics in a digital environment is ensured.\n\n1. Cultural Relic  \n   Function: Store basic information of the cultural relic.  \n   Fields: Cultural Relic ID, Name, Year, Category, Excavation Site  \n   Business Requirement: This data is used to store the basic information of all cultural relics on the platform, such as name and repair history, for the purpose of querying and management.\n\n2. Staff  \n   Function: Record information of staff on the cultural relics protection platform.  \n   Fields: Staff ID, Name, Phone Number, Gender  \n   Business Requirement: This data is used to record information of staff related to cultural relic protection, aiding administrators in tracking staff identity and contact information.\n\n3. Cultural Relic Exhibition  \n   Function: Record exhibition information of the cultural relic.  \n   Fields: Cultural Relic ID, Exhibition Start Time, Exhibition End Time, Exhibition Location  \n   Business Requirement: Record cultural relic exhibition events, including the time and location of the exhibition, facilitating management and querying of the cultural relic's exhibition history.\n\n4. Cultural Relic Repair  \n   Function: Record repair history of the cultural relic.  \n   Fields: Staff ID, Cultural Relic ID, Repair Start Time, Repair End Time, Repair Method, Notes  \n   Business Requirement: Used to record each repair activity of the cultural relic, including repair start and end times, repair method, and repairing staff, aiding cultural relic administrators in tracking the repair history.\n\n5. Cultural Relic Monitoring Record  \n   Function: Record environmental monitoring data of the cultural relic.  \n   Fields: Cultural Relic ID, Monitoring Time, Person in Charge ID, Temperature, Humidity, Light, Air Quality, Notes  \n   Business Requirement: Used to record the environmental data (such as temperature, humidity, light, etc.) of the cultural relic in specific time periods, ensuring the preservation environment of the cultural relic meets standards and documenting monitoring history.", "answer": {"Cultural Relic": {"Attributes": ["Cultural Relic ID", "Name", "Year", "Last Repair Time", "Category", "Excavation Site"], "Primary key": ["Cultural Relic ID"], "Foreign key": {}}, "Staff": {"Attributes": ["Staff ID", "Name", "Phone Number", "Gender"], "Primary key": ["Staff ID"], "Foreign key": {}}, "Cultural Relic Exhibition": {"Attributes": ["Cultural Relic ID", "Exhibition Start Time", "Exhibition End Time", "Exhibition Location"], "Primary key": ["Cultural Relic ID", "Exhibition Start Time"], "Foreign key": {}}, "Cultural Relic Repair Record": {"Attributes": ["Staff ID", "Cultural Relic ID", "Repair Start Time", "Repair End Time", "Repair Method", "Notes"], "Primary key": ["Staff ID", "Cultural Relic ID", "Repair Start Time"], "Foreign key": {"Staff ID": {"Staff": "Staff ID"}, "Cultural Relic ID": {"Cultural Relic": "Cultural Relic ID"}}}, "Cultural Relic Monitoring Record": {"Attributes": ["Cultural Relic ID", "Monitoring Time", "Person In Charge ID", "Temperature", "Humidity", "Light", "Air Quality", "Notes"], "Primary key": ["Cultural Relic ID", "Monitoring Time", "Person In Charge ID"], "Foreign key": {"Cultural Relic ID": {"Cultural Relic": "Cultural Relic ID"}, "Person In Charge ID": {"Staff": "Staff ID"}}}}}
{"id": "67552f0b13602ec03b41aa68", "question": "The university's digitized archive management system shall store and manage basic information such as student records, faculty and staff records, and research project records. It shall provide users with flexible search and query functions while meeting the requirements for security and stability in terms of access control, operation auditing, and data backup. The system shall record information such as name, major, and grades in student records, and store personal information, job title, and work history of teachers in faculty and staff records. For research projects, the system shall record information such as project name, principal investigator, funding, and research outcomes. Users shall be granted different system access permissions based on their roles, and the system shall perform granular management of these permissions and retain user operation logs for auditing purposes. To ensure the security of records, the system shall perform regular backups and support incremental or differential backup mechanisms for rapid recovery in case of failures.", "answer": {"User": {"Attributes": ["Account", "Password", "Role"], "Primary key": ["Account"], "Foreign key": {}}, "Student": {"Attributes": ["Student ID", "Name", "Major", "Average Grade"], "Primary key": ["Student ID"], "Foreign key": {}}, "Teacher": {"Attributes": ["Name", "Gender", "Age", "Contact Information", "Job Title", "Work History", "Teacher ID"], "Primary key": ["Teacher ID"], "Foreign key": {}}, "Research Project": {"Attributes": ["Project ID", "Project Name", "Responsible Teacher", "Funding", "Outcome"], "Primary key": ["Project ID"], "Foreign key": {"Responsible Teacher": {"Teacher": "Teacher ID"}}}, "Log Information": {"Attributes": ["User Account", "Operation Time", "Operation Type", "Detailed Description"], "Primary key": ["User Account", "Operation Time"], "Foreign key": {"User Account": {"User": "Account"}}}, "Teacher Responsible for Research Project": {"Attributes": ["Project ID", "Teacher ID"], "Primary key": ["Project ID", "Teacher ID"], "Foreign key": {"Project ID": {"Research Project": "Project ID"}, "Teacher ID": {"Teacher": "Teacher ID"}}}}}
{"id": "67552f0b13602ec03b41aa80", "question": "Business Requirements Description:\n1.Construction Management Unit Module:Login to the construction management system, select individual projects, create projects and route sections, determine annual project plans, and view data for the project team. This includes:Unit Name, Contact Number, Responsible Person, Associated Project, Annual Plan.Each unit contains multiple electrical grid infrastructure projects.\n2.Business Project Department Module:\nManage project progress, including planning, summarizing, report reviews, etc., and report encountered issues.Records include:Project Department ID, Department Name, Responsible Person, Project Progress, and Issue Reporting.Each project department contains multiple electrical grid infrastructure projects.\n3.Supervision Project Department Module:Display resources and management overview of the supervision department in a static web page format.Includes:Supervision Department Name, Responsible Person, Resource Allocation, Personnel Management.Each supervision department supervises multiple construction management units.\n4.Electrical Grid Infrastructure Projects:Each electrical grid infrastructure project includes:\nProject ID, Project Name, Construction Progress, Resource Allocation, Quality Control, Safety Management.\n5.Resources:Manage and allocate resources such as human and material resources effectively to improve utilization and reduce costs.Records include:Resource Type, Resource Quantity.Each project can be assigned multiple resources, and each resource can be used by multiple projects. Resource allocation and usage records need to be kept.\n6.Collaborative Work Platform:Supports task assignment, progress tracking, and feedback on completion status.Every task includes:Task Name, Responsible Person, Task Progress, Task Priority, Completion Status.Each task includes multiple electrical grid infrastructure projects.", "answer": {"Construction Management Unit": {"Attributes": ["Unit ID", "Unit Name", "Contact Number", "Responsible Person", "Associated Project", "Annual Plan", "Supervision Department ID"], "Primary key": ["Unit ID"], "Foreign key": {"Supervision Department ID": {"Collaborative Task": "Supervision Department ID"}}}, "Business Project Department Progress": {"Attributes": ["Project Department ID", "Department Name", "Responsible Person", "Project Progress", "Issue Reporting"], "Primary key": ["Project Department ID"], "Foreign key": {}}, "Resource Allocation": {"Attributes": ["Resource ID", "Project ID", "Allocation Status", "Usage Record"], "Primary key": ["Resource ID", "Project ID"], "Foreign key": {"Resource ID": {"Resource Table": "Resource ID"}, "Project ID": {"Supervision Project Department": "Project ID"}}}, "Collaborative Task": {"Attributes": ["Task ID", "Project ID", "Task Name", "Responsible Person", "Task Progress", "Task Priority"], "Primary key": ["Task ID", "Project ID"], "Foreign key": {"Task ID": {"Collaborative Work Platform": "Task ID"}, "Project ID": {"Supervision Project Department": "Project ID"}}}, "Supervision Project Department": {"Attributes": ["Supervision Department ID", "Supervision Department Name", "Responsible Person", "Resource Allocation", "Personnel Management"], "Primary key": ["Supervision Department ID"], "Foreign key": {}}, "Electrical Grid Infrastructure Project": {"Attributes": ["Project ID", "Project Name", "Construction Progress", "Resource Allocation", "Quality Control", "Safety Management", "Project Department ID", "Unit ID", "Task ID"], "Primary key": ["Project ID"], "Foreign key": {"Task ID": {"Collaborative Work Platform": "Task ID"}, "Unit ID": {"Construction Management Unit": "Unit ID"}, "Project Department ID": {"Business Project Department Progress": "Project Department ID"}}}, "Resource Table": {"Attributes": ["Resource ID", "Resource Type", "Resource Quantity"], "Primary key": ["Resource ID"], "Foreign key": {}}, "Collaborative Work Platform": {"Attributes": ["Task ID", "Task Name", "Responsible Person", "Task Progress", "Task Priority", "Completion Status"], "Primary key": ["Task ID"], "Foreign key": {}}, "Project Management": {"Attributes": ["Project ID", "Unit ID", "Project Name", "Construction Progress", "Resource Allocation", "Quality Control", "Safety Management"], "Primary key": ["Project ID", "Unit ID"], "Foreign key": {"Unit ID": {"Construction Management Unit": "Unit ID"}, "Project ID": {"Supervision Project Department": "Project ID"}}}, "Project Department Management": {"Attributes": ["Project Department ID", "Project ID", "Project Name", "Project Progress", "Issue Reporting"], "Primary key": ["Project Department ID", "Project ID"], "Foreign key": {"Project ID": {"Supervision Project Department": "Project ID"}, "Project Department ID": {"Business Project Department Progress": "Project Department ID"}}}, "Supervision Department Management": {"Attributes": ["Supervision Department ID", "Project ID", "Project Name", "Resource Allocation", "Personnel Management"], "Primary key": ["Supervision Department ID", "Project ID"], "Foreign key": {"Supervision Department ID": {"Collaborative Task": "Supervision Department ID"}, "Project ID": {"Supervision Project Department": "Project ID"}}}}}
{"id": "67552f0b13602ec03b41aa82", "question": "The website content system shall record each user's account information (including username, password, role, etc.) and ensure secure access by generating and validating tokens after login or registration. For the content to be managed, the system shall separately store basic information (such as title, type, creation and update time, etc.), text and image content (text, image links, etc.), and video content (video link, thumbnail, video duration, play count, etc.) to enable flexible composition and display. When performing data analysis, the system shall store user video play counts during different time periods to facilitate statistics, recommendations, or adjustments to placement strategies.", "answer": {"User": {"Attributes": ["User ID", "User Name", "Password", "Role"], "Primary key": ["User ID"], "Foreign key": {}}, "Token": {"Attributes": ["Public Key", "Private Key", "Generation Time", "Bound User"], "Primary key": ["Public Key"], "Foreign key": {"Bound User": {"User": "User ID"}}}, "Content": {"Attributes": ["Content ID", "Title", "Type", "Creation Time", "Update Time", "Created By User"], "Primary key": ["Content ID"], "Foreign key": {"Created By User": {"User": "User ID"}}}, "Image Text Content": {"Attributes": ["Content ID", "Image Text Link"], "Primary key": ["Content ID"], "Foreign key": {"Content ID": {"Content": "Content ID"}}}, "Video Content": {"Attributes": ["Content ID", "Video Link"], "Primary key": ["Content ID"], "Foreign key": {"Content ID": {"Content": "Content ID"}, "Video Link": {"Video Information": "Video Link"}}}, "Video Information": {"Attributes": ["Video Link", "Thumbnail URL", "Video Duration"], "Primary key": ["Video Link"], "Foreign key": {}}, "Video Play Count Record": {"Attributes": ["Video Link", "Record Time", "Play Count"], "Primary key": ["Video Link", "Record Time"], "Foreign key": {"Video Link": {"Video Information": "Video Link"}}}}}
{"id": "67552f0b13602ec03b41aa95", "question": "This is an online bookstore backend database system. For member management, the system records basic information for each member, including unique member ID, username, password, name, address, postal code, phone number, consumption amount and points. For book management, the system records basic information for each book, including unique book ID, category name, book title, author, publisher, publication date, ISBN and price. For order management, the system records basic information for each order, including unique order ID, member username, sales amount, order date and shipping date. Each order can contain multiple books, and the system needs to record the purchase quantity for each book.", "answer": {"Member": {"Attributes": ["Member ID", "Username", "Password", "Name", "Address", "Postal code", "Phone", "Consumption amount", "Points"], "Primary key": ["Member ID"], "Foreign key": {}}, "Book": {"Attributes": ["Book ID", "Category name", "Book title", "Author", "Publisher", "Publication date", "ISBN", "Price"], "Primary key": ["Book ID"], "Foreign key": {}}, "Order": {"Attributes": ["Order ID", "Order date", "Shipping date", "Sales amount", "Member ID"], "Primary key": ["Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}}}, "Order book": {"Attributes": ["Order ID", "Book ID", "Quantity"], "Primary key": ["Order ID", "Book ID"], "Foreign key": {"Book ID": {"Book": "Book ID"}, "Order ID": {"Order": "Order ID"}}}, "Place order": {"Attributes": ["Member ID", "Order ID"], "Primary key": ["Member ID", "Order ID"], "Foreign key": {"Member ID": {"Member": "Member ID"}, "Order ID": {"Order": "Order ID"}}}}}
{"id": "67552f0b13602ec03b41aaad", "question": "The database is an inpatient information management system used to record inpatient information, medical processes, and manage related resources (such as wards, departments, doctors, etc.). The system assists hospitals in efficiently managing patient hospitalization status, doctors' treatment processes, ward resource usage, and other information to ensure smooth medical operations. The system primarily includes the following tables:\n\n1. Patient  \nFields: Patient ID, Name, Gender, Age, Hospitalization Time, Ward, Phone, Identity Card Number, Medical Record Number, Emergency Contact Phone  \nBusiness Requirement: Record basic patient information, including patient name, contact information, hospitalization time, and ward, etc. Through this table, hospitals can manage and query basic patient details to facilitate subsequent treatment, medical advice, and tracking of medical records.\n\n2. Department  \nFields: Department ID, Department Name, Department Head ID, Contact Phone, Location  \nBusiness Requirement: Record information of each hospital department, including department name, head, and department location, etc. Through this table, hospitals can manage departments and allocate resources such as doctors and nurses.\n\n3. Doctor  \nFields: Doctor ID, Name, Gender, Contact Phone, Title, Department ID  \nBusiness Requirement: Record doctor information, including name, title, contact information, and department affiliation. The doctor table is associated with the department table to help hospitals manage doctor resources and arrange patient consultations.\n\n4. Ward  \nFields: Ward ID, Location, Head ID, Bed Count, Remaining Bed Count  \nBusiness Requirement: Record basic ward information, including ward location, head (doctor), bed count, and remaining bed count. Through this table, hospitals can efficiently manage ward resources, allocate beds reasonably, and ensure patients can be accommodated promptly.\n\n5. Nurse  \nFields: Nurse ID, Name, Gender, Phone, Department ID, Duties, Title  \nBusiness Requirement: Record basic nurse information, including name, contact information, title, duties, and department affiliation. The nurse table is associated with the department table for managing nurse allocation, duties, and patient care relationships.", "answer": {"Patient": {"Attributes": ["Patient ID", "Name", "Gender", "Age", "Phone", "Identity Card Number", "Medical Record Number", "Emergency Contact Phone"], "Primary key": ["Patient ID"], "Foreign key": {}}, "Department": {"Attributes": ["Department ID", "Department Name", "Department Head ID", "Contact Phone", "Location"], "Primary key": ["Department ID"], "Foreign key": {"Department Head ID": {"Doctor": "Doctor ID"}}}, "Doctor": {"Attributes": ["Doctor ID", "Name", "Gender", "Contact Phone", "Title", "Department ID"], "Primary key": ["Doctor ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Ward": {"Attributes": ["Ward ID", "Location", "Head ID", "Bed Count", "Remaining Bed Count"], "Primary key": ["Ward ID"], "Foreign key": {"Head ID": {"Doctor": "Doctor ID"}}}, "Hospitalization Record": {"Attributes": ["Patient ID", "Ward ID", "Hospitalization Start Time", "Bed Number", "Attending Physician ID", "Discharge Time"], "Primary key": ["Patient ID", "Ward ID", "Hospitalization Start Time"], "Foreign key": {"Attending Physician ID": {"Doctor": "Doctor ID"}, "Patient ID": {"Patient": "Patient ID"}, "Ward ID": {"Ward": "Ward ID"}}}, "Registration Record": {"Attributes": ["Patient ID", "Doctor ID", "Consultation Time", "Diagnosis Result"], "Primary key": ["Patient ID", "Doctor ID", "Consultation Time"], "Foreign key": {"Doctor ID": {"Doctor": "Doctor ID"}, "Patient ID": {"Patient": "Patient ID"}}}, "Nurse": {"Attributes": ["Nurse ID", "Name", "Gender", "Phone", "Department ID", "Duties", "Title"], "Primary key": ["Nurse ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41aab9", "question": "System: Parking lot management system\n\nDescription of required functions:\n1. Parking space management:\nThe system queries available parking spaces, and when a vehicle enters, it marks the parking space as occupied.\nWhen a vehicle exits from the exit, it marks the parking space as empty.\n\n2. Parking space owner management:\nThe system needs to record the information of certain car owners who have purchased parking spaces, including their license plate number, name, and contact information.", "answer": {"Parking space table": {"Attributes": ["Parking space number", "Status", "Owner"], "Primary key": ["Parking space number"], "Foreign key": {"Owner": {"Vehicle information table": "License plate number"}}}, "Vehicle information table": {"Attributes": ["License plate number", "Owner name", "Contact information"], "Primary key": ["License plate number"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41aacf", "question": "System name: Community property fee management system\n\nDemand function description:\n1. Owner management:\nAdd owner record: record the basic information of the owner, including owner number, name, room number, house area, work unit, contact number, etc.\nQuery owner information: query the owner's information according to the room number.\n\n2. Department management:\nAdd department record: record the basic information of the department, including department number, department name, department head, department phone number, etc.\nQuery department information: query department information according to department number.\n\n3. Employee management:\nAdd employee record: record the basic information of employees, including employee number, name, date of birth, gender, address, contact number, department number, position and password, etc.\nQuery employee information: query employee information according to employee number.\nPermission management: employees can have different permissions according to their positions. Employees with the position of \"Manager\" can change the information of employees in this department, and employees with the position of \"Charge\" can only perform charging operations.\n\n4. Charge management:\nRecord charge information: including room number, owner number, charge date, charge type, quantity, charge amount, employee number, etc.\nGenerate charge slip: Generate charge slip based on charge information and record charge status.", "answer": {"Owner Table": {"Attributes": ["Owner ID", "Name", "Room Number", "House Area", "Employer", "Contact Number"], "Primary key": ["Owner ID"], "Foreign key": {}}, "Department Table": {"Attributes": ["Department ID", "Department Name", "Department Head", "Department Phone"], "Primary key": ["Department ID"], "Foreign key": {}}, "Employee Table": {"Attributes": ["Employee ID", "Name", "Date of Birth", "Gender", "Address", "Contact Number", "Department ID", "Position", "Password"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department Table": "Department ID"}}}, "Charge Table": {"Attributes": ["Room Number", "Owner ID", "Charge Date", "Charge Type", "Quantity", "Charge Amount", "Employee ID"], "Primary key": ["Room Number", "Owner ID", "Charge Date"], "Foreign key": {"Owner ID": {"Owner Table": "Owner ID"}, "Employee ID": {"Employee Table": "Employee ID"}}}}}
{"id": "67552f0b13602ec03b41ab03", "question": "Business Requirements:\n1.Customer: Each customer needs to record their basic information, including customer ID, name, ID number, and contact phone number.\n2.Account: Each customer can have multiple accounts. Each account needs to record the account number, the customer ID associated with the account, and the account balance.\n3.Transaction: Each account can perform multiple transactions. Each transaction record needs to contain a transaction ID, the associated account number, transaction type (such as deposit, withdrawal, etc.), transaction amount, transaction time, and transaction status. Each account can have multiple transactions, recording every transaction for each account.", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "ID Number", "Contact Phone"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Account": {"Attributes": ["Account Number", "Customer ID", "Balance"], "Primary key": ["Account Number"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Transaction": {"Attributes": ["Transaction ID", "Account Number", "Transaction Type", "Transaction Amount", "Transaction Time", "Transaction Status"], "Primary key": ["Transaction ID"], "Foreign key": {"Account Number": {"Account": "Account Number"}}}}}
{"id": "67552f0b13602ec03b41ab0a", "question": "Design a voting management system:\nVoter Management: Each individual can be a legitimate voter or an invalid voter. Each legitimate voter must register their voting area (i.e., district) through the system. Each legitimate voter can only register in one district.\nDistrict Management: The district to which a voter belongs is determined by their residential address. An address can be a town or a city. Some districts may include multiple towns; whereas some larger cities may also contain multiple districts.\n", "answer": {"Voter": {"Attributes": ["Voter ID", "Name", "Status", "Address ID"], "Primary key": ["Voter ID"], "Foreign key": {"Address ID": {"Address": "Address ID"}}}, "Address": {"Attributes": ["Address ID", "Street", "District ID"], "Primary key": ["Address ID"], "Foreign key": {"District ID": {"District": "District ID"}}}, "District": {"Attributes": ["District ID", "Name", "Type", "Constituency ID"], "Primary key": ["District ID"], "Foreign key": {"Constituency ID": {"Constituency": "Constituency ID"}}}, "Constituency": {"Attributes": ["Constituency ID", "Name", "Description"], "Primary key": ["Constituency ID"], "Foreign key": {}}}}
{"id": "67552f0b13602ec03b41ab15", "question": "System: Securities Trading Platform\nFunctional Requirements:\n1.Account Opening: Based on the account opening information submitted by the customer service assistant, the system will open an account and store the customer information in the customer records, while the account information (such as balance) will be stored in the account records. Customer information includes Customer ID, Name, Contact Number, Email, and Account Opening Date. The account includes a unique Account ID, the Customer ID of the account holder, and the balance. Each customer can apply for multiple accounts.\n2.Transaction: Customers can deposit money into their account, and the system will update the account balance based on the deposit amount. Customers can also withdraw money from their account, and the system will update the account balance based on the withdrawal amount. Therefore, the transaction process of each customer needs to be recorded. Each customer can create multiple transaction records. Each record includes a Transaction ID, Customer ID, Transaction Type, Transaction Amount, Transaction Time, and Transaction Status.\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Contact Number", "Email", "Account Opening Date"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Account": {"Attributes": ["Account ID", "Customer ID", "Balance"], "Primary key": ["Account ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Transaction": {"Attributes": ["Transaction ID", "Customer ID", "Transaction Type", "Transaction Amount", "Transaction Time", "Transaction Status"], "Primary key": ["Transaction ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}}}
{"id": "67552f0b13602ec03b41ab25", "question": "This is a bike-sharing management system. For user management, the system records basic information for each user, including unique phone number, verification code, and credit status. After registration, users can view available bikes nearby. For bike management, the system records basic information for each bike, including unique bike ID, QR code, unlock password, location information and bike status. For trip management, when users obtain the unlock password by scanning QR code or manually entering the code, the system unlocks the bike and starts recording the trip, including start time, end time, riding trajectory and other information. During the ride, the bike periodically uploads location to update trip information. After users end their trips, the system automatically calculates fees based on billing rules and records payment status. Users can view their trip list and detailed information, and can also report bike malfunctions. Merchants can manage bike information, set billing rules, monitor bike status, malfunctions and trips, and manage user credit and status.", "answer": {"User": {"Attributes": ["Phone number", "Verification code", "Credit status"], "Primary key": ["Phone number"], "Foreign key": {}}, "Bike": {"Attributes": ["Bike ID", "QR code", "Unlock password", "Location info", "Bike status"], "Primary key": ["Bike ID"], "Foreign key": {}}, "Trip": {"Attributes": ["Trip ID", "Start time", "End time", "Fee", "Payment status", "User phone number", "Bike ID"], "Primary key": ["Trip ID"], "Foreign key": {"Bike ID": {"Bike": "Bike ID"}, "User phone number": {"User": "Phone number"}}}, "Malfunction": {"Attributes": ["User phone number", "Bike ID", "Malfunction description", "Report time"], "Primary key": ["User phone number", "Bike ID", "Report time"], "Foreign key": {"Bike ID": {"Bike": "Bike ID"}, "User phone number": {"User": "Phone number"}}}, "User trip": {"Attributes": ["User phone number", "Trip"], "Primary key": ["User phone number", "Trip"], "Foreign key": {"User phone number": {"User": "Phone number"}, "Trip": {"Trip": "Trip ID"}}}, "Use bike": {"Attributes": ["Trip ID", "Bike ID"], "Primary key": ["Trip ID", "Bike ID"], "Foreign key": {"Bike ID": {"Bike": "Bike ID"}, "Trip ID": {"Trip": "Trip ID"}}}}}
{"id": "67552f0b13602ec03b41ab2c", "question": "Business Requirements:\n1.Customer: Each customer needs to record basic information, including Customer ID, Name, Phone, and Address.\n2.Sales Order: Each customer can have multiple sales orders. Each sales order contains Order ID, Customer ID, Pizza ID, Quantity, Expected Delivery Date, and Order Status.\n3.Pizza: Each type of pizza needs to record Pizza ID, Flavor, Ingredients, and Stock. Pizza ID is the Primary key used to uniquely identify each pizza.\n4.Production Plan: A production plan is generated based on sales orders. Each production plan records Order ID, Pizza ID, Production Sequence, and Production Quantity.\n5.Income/Expenditure: Records each income or expenditure. The record includes Record ID, Type (Income or Expenditure), Amount, Time, Description, and the related Pizza ID. Each income/expenditure record can be associated with multiple pizzas, for tracking and analyzing financial data related to pizzas.\n6.Delivery Content: Records the delivery information for each order, including Record ID, Order ID, Delivery Time, and Delivery Status. Each delivery record is associated with a sales order and records the delivery details.\n\n", "answer": {"Customer": {"Attributes": ["Customer ID", "Name", "Phone", "Address"], "Primary key": ["Customer ID"], "Foreign key": {}}, "Sales Order": {"Attributes": ["Order ID", "Customer ID", "Expected Delivery Date", "Status"], "Primary key": ["Order ID"], "Foreign key": {"Customer ID": {"Customer": "Customer ID"}}}, "Pizza": {"Attributes": ["Pizza ID", "Flavor", "Ingredients", "Stock"], "Primary key": ["Pizza ID"], "Foreign key": {}}, "Production Plan": {"Attributes": ["Order ID", "Pizza ID", "Production Sequence", "Production Quantity"], "Primary key": ["Order ID", "Pizza ID"], "Foreign key": {"Pizza ID": {"Pizza": "Pizza ID"}, "Order ID": {"Sales Order": "Order ID"}}}, "Delivery Content": {"Attributes": ["Record ID", "Order ID", "Delivery Time", "Status"], "Primary key": ["Record ID"], "Foreign key": {"Order ID": {"Sales Order": "Order ID"}}}, "Income/Expenditure": {"Attributes": ["Record ID", "Type", "Amount", "Time", "Description", "Pizza ID"], "Primary key": ["Record ID"], "Foreign key": {"Pizza ID": {"Pizza": "Pizza ID"}}}}}
{"id": "67552f0b13602ec03b41ab2f", "question": "This is a supermarket management system. For supermarket management, the system records basic information for each supermarket, including unique supermarket name, manager, address and phone number. For department management, each supermarket has multiple departments, and the system records basic information for each department, including unique department name and manager, with each department responsible for managing its own employees. For employee management, the system records basic information for each employee, including unique employee ID, name, position, contact information and salary, with each employee belonging to only one department. For product management, the system records basic information for each product, including unique product ID, product name, model, unit price and quantity. Sales representatives are responsible for the allocation of multiple products, and the system records the time and quantity of each allocation.", "answer": {"Supermarket": {"Attributes": ["Supermarket name", "Address", "Phone", "Supermarket ID", "Manager employee ID"], "Primary key": ["Supermarket ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}}}, "Department": {"Attributes": ["Department ID", "Department name", "Department responsibility", "Establishment time", "Employee count", "Supermarket ID", "Manager employee ID"], "Primary key": ["Department ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}, "Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Employee": {"Attributes": ["Employee ID", "Name", "Position", "Contact info", "Salary", "Department ID"], "Primary key": ["Employee ID"], "Foreign key": {"Department ID": {"Department": "Department ID"}}}, "Product": {"Attributes": ["Product ID", "Product name", "Model", "Unit price", "Quantity"], "Primary key": ["Product ID"], "Foreign key": {}}, "Allocation": {"Attributes": ["Sales employee ID", "Product ID", "Allocation time", "Allocation quantity"], "Primary key": ["Sales employee ID", "Allocation time", "Product ID"], "Foreign key": {"Sales employee ID": {"Employee": "Employee ID"}, "Product ID": {"Product": "Product ID"}}}, "Establish": {"Attributes": ["Supermarket ID", "Department ID"], "Primary key": ["Supermarket ID", "Department ID"], "Foreign key": {"Supermarket ID": {"Supermarket": "Supermarket ID"}, "Department ID": {"Department": "Department ID"}}}, "Manage supermarket": {"Attributes": ["Manager employee ID", "Supermarket ID"], "Primary key": ["Manager employee ID", "Supermarket ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}, "Supermarket ID": {"Supermarket": "Supermarket ID"}}}, "Manage department": {"Attributes": ["Manager employee ID", "Department ID"], "Primary key": ["Manager employee ID", "Department ID"], "Foreign key": {"Manager employee ID": {"Employee": "Employee ID"}, "Department ID": {"Department": "Department ID"}}}, "Work": {"Attributes": ["Employee ID", "Department ID"], "Primary key": ["Employee ID", "Department ID"], "Foreign key": {"Employee ID": {"Employee": "Employee ID"}, "Department ID": {"Department": "Department ID"}}}}}
{"id": "67552f0b13602ec03b41ab53", "question": "Business Requirements:\n1.Maze: Each maze needs to record its basic information, including Maze ID, Maze Name, and Maze File Path.\n2.Robot: Each robot needs to record its basic information, including Robot ID, Robot Type, Current Position, Timer Status, and Maze ID. Robot ID is the unique identifier for each robot, and Maze ID is a Foreign key pointing to the Maze ID in the Maze table.\n3.Forward Sensor: Each forward sensor needs to record its basic information, including Sensor ID, Robot ID, Left Status, Right Status, and Front Status.\n4.Proximity Sensor: Each proximity sensor needs to record its basic information, including Sensor ID, Robot ID, Coin Status, and Ghost Status.\n5.Timer: Each timer needs to record its basic information, including Timer ID, Robot ID, Timer Event Description, and Timer Event Time.\n6.User: Each user needs to record their basic information, including User ID, Name, and Contact Information.\n7.User Robot Operation: Each user can perform operations on a robot. This operation records User ID, Operation Type, Operation Time, and Robot ID.", "answer": {"Maze": {"Attributes": ["Maze ID", "Maze Name", "Maze File Path"], "Primary key": ["Maze ID"], "Foreign key": {}}, "Robot": {"Attributes": ["Robot ID", "Robot Type", "Current Position", "Timer Status", "Maze ID"], "Primary key": ["Robot ID"], "Foreign key": {"Maze ID": {"Maze": "Maze ID"}}}, "Forward Sensor": {"Attributes": ["Sensor ID", "Robot ID", "Left Status", "Right Status", "Front Status"], "Primary key": ["Sensor ID"], "Foreign key": {"Robot ID": {"Robot": "Robot ID"}}}, "Proximity Sensor": {"Attributes": ["Sensor ID", "Robot ID", "Coin Status", "Ghost Status"], "Primary key": ["Sensor ID"], "Foreign key": {"Robot ID": {"Robot": "Robot ID"}}}, "Timer": {"Attributes": ["Timer ID", "Robot ID", "Timer Event Description", "Timer Event Time"], "Primary key": ["Timer ID"], "Foreign key": {"Robot ID": {"Robot": "Robot ID"}}}, "User": {"Attributes": ["User ID", "Name", "Contact Information"], "Primary key": ["User ID"], "Foreign key": {}}, "User Robot Operation": {"Attributes": ["User ID", "Operation Type", "Operation Time", "Robot ID"], "Primary key": ["User ID", "Robot ID"], "Foreign key": {"Robot ID": {"Robot": "Robot ID"}, "User ID": {"User": "User ID"}}}}}
